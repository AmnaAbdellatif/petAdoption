<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://symfony.com/schema/dic/services https://symfony.com/schema/dic/services/services-1.0.xsd">
  <parameters>
    <parameter key="kernel.root_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src</parameter>
    <parameter key="kernel.project_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption</parameter>
    <parameter key="kernel.environment">dev</parameter>
    <parameter key="kernel.debug">true</parameter>
    <parameter key="kernel.name">src</parameter>
    <parameter key="kernel.cache_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev</parameter>
    <parameter key="kernel.logs_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\log</parameter>
    <parameter key="kernel.bundles" type="collection">
      <parameter key="FrameworkBundle">Symfony\Bundle\FrameworkBundle\FrameworkBundle</parameter>
      <parameter key="WebServerBundle">Symfony\Bundle\WebServerBundle\WebServerBundle</parameter>
      <parameter key="DoctrineBundle">Doctrine\Bundle\DoctrineBundle\DoctrineBundle</parameter>
      <parameter key="DoctrineMigrationsBundle">Doctrine\Bundle\MigrationsBundle\DoctrineMigrationsBundle</parameter>
      <parameter key="MakerBundle">Symfony\Bundle\MakerBundle\MakerBundle</parameter>
      <parameter key="SecurityBundle">Symfony\Bundle\SecurityBundle\SecurityBundle</parameter>
      <parameter key="DoctrineFixturesBundle">Doctrine\Bundle\FixturesBundle\DoctrineFixturesBundle</parameter>
      <parameter key="TwigBundle">Symfony\Bundle\TwigBundle\TwigBundle</parameter>
      <parameter key="WebProfilerBundle">Symfony\Bundle\WebProfilerBundle\WebProfilerBundle</parameter>
      <parameter key="EasyAdminBundle">EasyCorp\Bundle\EasyAdminBundle\EasyAdminBundle</parameter>
      <parameter key="NelmioCorsBundle">Nelmio\CorsBundle\NelmioCorsBundle</parameter>
      <parameter key="ApiPlatformBundle">ApiPlatform\Core\Bridge\Symfony\Bundle\ApiPlatformBundle</parameter>
      <parameter key="VichUploaderBundle">Vich\UploaderBundle\VichUploaderBundle</parameter>
      <parameter key="FOSRestBundle">FOS\RestBundle\FOSRestBundle</parameter>
      <parameter key="StofDoctrineExtensionsBundle">Stof\DoctrineExtensionsBundle\StofDoctrineExtensionsBundle</parameter>
      <parameter key="LexikJWTAuthenticationBundle">Lexik\Bundle\JWTAuthenticationBundle\LexikJWTAuthenticationBundle</parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\GesdinetJWTRefreshTokenBundle</parameter>
      <parameter key="SwiftmailerBundle">Symfony\Bundle\SwiftmailerBundle\SwiftmailerBundle</parameter>
      <parameter key="SymfonyCastsVerifyEmailBundle">SymfonyCasts\Bundle\VerifyEmail\SymfonyCastsVerifyEmailBundle</parameter>
    </parameter>
    <parameter key="kernel.bundles_metadata" type="collection">
      <parameter key="FrameworkBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\framework-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\FrameworkBundle</parameter>
      </parameter>
      <parameter key="WebServerBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-server-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebServerBundle</parameter>
      </parameter>
      <parameter key="DoctrineBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\DoctrineBundle</parameter>
      </parameter>
      <parameter key="DoctrineMigrationsBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-migrations-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\MigrationsBundle</parameter>
      </parameter>
      <parameter key="MakerBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\maker-bundle\src</parameter>
        <parameter key="namespace">Symfony\Bundle\MakerBundle</parameter>
      </parameter>
      <parameter key="SecurityBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SecurityBundle</parameter>
      </parameter>
      <parameter key="DoctrineFixturesBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-fixtures-bundle</parameter>
        <parameter key="namespace">Doctrine\Bundle\FixturesBundle</parameter>
      </parameter>
      <parameter key="TwigBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\TwigBundle</parameter>
      </parameter>
      <parameter key="WebProfilerBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-profiler-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\WebProfilerBundle</parameter>
      </parameter>
      <parameter key="EasyAdminBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src</parameter>
        <parameter key="namespace">EasyCorp\Bundle\EasyAdminBundle</parameter>
      </parameter>
      <parameter key="NelmioCorsBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\nelmio\cors-bundle</parameter>
        <parameter key="namespace">Nelmio\CorsBundle</parameter>
      </parameter>
      <parameter key="ApiPlatformBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\api-platform\core\src\Bridge\Symfony\Bundle</parameter>
        <parameter key="namespace">ApiPlatform\Core\Bridge\Symfony\Bundle</parameter>
      </parameter>
      <parameter key="VichUploaderBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle</parameter>
        <parameter key="namespace">Vich\UploaderBundle</parameter>
      </parameter>
      <parameter key="FOSRestBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\friendsofsymfony\rest-bundle</parameter>
        <parameter key="namespace">FOS\RestBundle</parameter>
      </parameter>
      <parameter key="StofDoctrineExtensionsBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\stof\doctrine-extensions-bundle\src</parameter>
        <parameter key="namespace">Stof\DoctrineExtensionsBundle</parameter>
      </parameter>
      <parameter key="LexikJWTAuthenticationBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\lexik\jwt-authentication-bundle</parameter>
        <parameter key="namespace">Lexik\Bundle\JWTAuthenticationBundle</parameter>
      </parameter>
      <parameter key="GesdinetJWTRefreshTokenBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle</parameter>
        <parameter key="namespace">Gesdinet\JWTRefreshTokenBundle</parameter>
      </parameter>
      <parameter key="SwiftmailerBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\swiftmailer-bundle</parameter>
        <parameter key="namespace">Symfony\Bundle\SwiftmailerBundle</parameter>
      </parameter>
      <parameter key="SymfonyCastsVerifyEmailBundle" type="collection">
        <parameter key="path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src</parameter>
        <parameter key="namespace">SymfonyCasts\Bundle\VerifyEmail</parameter>
      </parameter>
    </parameter>
    <parameter key="kernel.charset">UTF-8</parameter>
    <parameter key="kernel.container_class">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="container.dumper.inline_class_loader">true</parameter>
    <parameter key="container.dumper.inline_factories">true</parameter>
    <parameter key="uploads_path">/uploads/files</parameter>
    <parameter key="event_dispatcher.event_aliases" type="collection">
      <parameter key="Symfony\Component\Console\Event\ConsoleCommandEvent">console.command</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleErrorEvent">console.error</parameter>
      <parameter key="Symfony\Component\Console\Event\ConsoleTerminateEvent">console.terminate</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSubmitEvent">form.pre_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\SubmitEvent">form.submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSubmitEvent">form.post_submit</parameter>
      <parameter key="Symfony\Component\Form\Event\PreSetDataEvent">form.pre_set_data</parameter>
      <parameter key="Symfony\Component\Form\Event\PostSetDataEvent">form.post_set_data</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerArgumentsEvent">kernel.controller_arguments</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ControllerEvent">kernel.controller</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ResponseEvent">kernel.response</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\FinishRequestEvent">kernel.finish_request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\RequestEvent">kernel.request</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ViewEvent">kernel.view</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\ExceptionEvent">kernel.exception</parameter>
      <parameter key="Symfony\Component\HttpKernel\Event\TerminateEvent">kernel.terminate</parameter>
      <parameter key="Symfony\Component\Workflow\Event\GuardEvent">workflow.guard</parameter>
      <parameter key="Symfony\Component\Workflow\Event\LeaveEvent">workflow.leave</parameter>
      <parameter key="Symfony\Component\Workflow\Event\TransitionEvent">workflow.transition</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnterEvent">workflow.enter</parameter>
      <parameter key="Symfony\Component\Workflow\Event\EnteredEvent">workflow.entered</parameter>
      <parameter key="Symfony\Component\Workflow\Event\CompletedEvent">workflow.completed</parameter>
      <parameter key="Symfony\Component\Workflow\Event\AnnounceEvent">workflow.announce</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationSuccessEvent">security.authentication.success</parameter>
      <parameter key="Symfony\Component\Security\Core\Event\AuthenticationFailureEvent">security.authentication.failure</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\InteractiveLoginEvent">security.interactive_login</parameter>
      <parameter key="Symfony\Component\Security\Http\Event\SwitchUserEvent">security.switch_user</parameter>
    </parameter>
    <parameter key="fragment.renderer.hinclude.global_template"></parameter>
    <parameter key="fragment.path">/_fragment</parameter>
    <parameter key="kernel.secret">%env(APP_SECRET)%</parameter>
    <parameter key="kernel.http_method_override">true</parameter>
    <parameter key="kernel.trusted_hosts" type="collection"/>
    <parameter key="kernel.default_locale">en</parameter>
    <parameter key="kernel.error_controller">error_controller</parameter>
    <parameter key="templating.helper.code.file_link_format">null</parameter>
    <parameter key="debug.file_link_format">null</parameter>
    <parameter key="session.metadata.storage_key">_sf2_meta</parameter>
    <parameter key="session.storage.options" type="collection">
      <parameter key="cache_limiter" type="string">0</parameter>
      <parameter key="cookie_secure">auto</parameter>
      <parameter key="cookie_httponly">true</parameter>
      <parameter key="cookie_samesite">lax</parameter>
      <parameter key="gc_probability">1</parameter>
    </parameter>
    <parameter key="session.save_path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/sessions</parameter>
    <parameter key="session.metadata.update_threshold">0</parameter>
    <parameter key="form.type_extension.csrf.enabled">true</parameter>
    <parameter key="form.type_extension.csrf.field_name">_token</parameter>
    <parameter key="asset.request_context.base_path"></parameter>
    <parameter key="asset.request_context.secure">false</parameter>
    <parameter key="validator.mapping.cache.file">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/validation.php</parameter>
    <parameter key="validator.translation_domain">validators</parameter>
    <parameter key="translator.logging">false</parameter>
    <parameter key="translator.default_path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption/translations</parameter>
    <parameter key="profiler_listener.only_exceptions">false</parameter>
    <parameter key="profiler_listener.only_master_requests">false</parameter>
    <parameter key="profiler.storage.dsn">file:C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/profiler</parameter>
    <parameter key="debug.error_handler.throw_at">-1</parameter>
    <parameter key="debug.container.dump">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/srcApp_KernelDevDebugContainer.xml</parameter>
    <parameter key="router.request_context.host">localhost</parameter>
    <parameter key="router.request_context.scheme">http</parameter>
    <parameter key="router.request_context.base_url"></parameter>
    <parameter key="router.resource">kernel::loadRoutes</parameter>
    <parameter key="router.cache_class_prefix">srcApp_KernelDevDebugContainer</parameter>
    <parameter key="request_listener.http_port">80</parameter>
    <parameter key="request_listener.https_port">443</parameter>
    <parameter key="serializer.mapping.cache.file">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/serialization.php</parameter>
    <parameter key="doctrine.dbal.logger.chain.class">Doctrine\DBAL\Logging\LoggerChain</parameter>
    <parameter key="doctrine.dbal.logger.profiling.class">Doctrine\DBAL\Logging\DebugStack</parameter>
    <parameter key="doctrine.dbal.logger.class">Symfony\Bridge\Doctrine\Logger\DbalLogger</parameter>
    <parameter key="doctrine.dbal.configuration.class">Doctrine\DBAL\Configuration</parameter>
    <parameter key="doctrine.data_collector.class">Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector</parameter>
    <parameter key="doctrine.dbal.connection.event_manager.class">Symfony\Bridge\Doctrine\ContainerAwareEventManager</parameter>
    <parameter key="doctrine.dbal.connection_factory.class">Doctrine\Bundle\DoctrineBundle\ConnectionFactory</parameter>
    <parameter key="doctrine.dbal.events.mysql_session_init.class">Doctrine\DBAL\Event\Listeners\MysqlSessionInit</parameter>
    <parameter key="doctrine.dbal.events.oracle_session_init.class">Doctrine\DBAL\Event\Listeners\OracleSessionInit</parameter>
    <parameter key="doctrine.class">Doctrine\Bundle\DoctrineBundle\Registry</parameter>
    <parameter key="doctrine.entity_managers" type="collection">
      <parameter key="default">doctrine.orm.default_entity_manager</parameter>
    </parameter>
    <parameter key="doctrine.default_entity_manager">default</parameter>
    <parameter key="doctrine.dbal.connection_factory.types" type="collection"/>
    <parameter key="doctrine.connections" type="collection">
      <parameter key="default">doctrine.dbal.default_connection</parameter>
    </parameter>
    <parameter key="doctrine.default_connection">default</parameter>
    <parameter key="doctrine.orm.configuration.class">Doctrine\ORM\Configuration</parameter>
    <parameter key="doctrine.orm.entity_manager.class">Doctrine\ORM\EntityManager</parameter>
    <parameter key="doctrine.orm.manager_configurator.class">Doctrine\Bundle\DoctrineBundle\ManagerConfigurator</parameter>
    <parameter key="doctrine.orm.cache.array.class">Doctrine\Common\Cache\ArrayCache</parameter>
    <parameter key="doctrine.orm.cache.apc.class">Doctrine\Common\Cache\ApcCache</parameter>
    <parameter key="doctrine.orm.cache.memcache.class">Doctrine\Common\Cache\MemcacheCache</parameter>
    <parameter key="doctrine.orm.cache.memcache_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcache_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcache_instance.class">Memcache</parameter>
    <parameter key="doctrine.orm.cache.memcached.class">Doctrine\Common\Cache\MemcachedCache</parameter>
    <parameter key="doctrine.orm.cache.memcached_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.memcached_port">11211</parameter>
    <parameter key="doctrine.orm.cache.memcached_instance.class">Memcached</parameter>
    <parameter key="doctrine.orm.cache.redis.class">Doctrine\Common\Cache\RedisCache</parameter>
    <parameter key="doctrine.orm.cache.redis_host">localhost</parameter>
    <parameter key="doctrine.orm.cache.redis_port">6379</parameter>
    <parameter key="doctrine.orm.cache.redis_instance.class">Redis</parameter>
    <parameter key="doctrine.orm.cache.xcache.class">Doctrine\Common\Cache\XcacheCache</parameter>
    <parameter key="doctrine.orm.cache.wincache.class">Doctrine\Common\Cache\WinCacheCache</parameter>
    <parameter key="doctrine.orm.cache.zenddata.class">Doctrine\Common\Cache\ZendDataCache</parameter>
    <parameter key="doctrine.orm.metadata.driver_chain.class">Doctrine\Persistence\Mapping\Driver\MappingDriverChain</parameter>
    <parameter key="doctrine.orm.metadata.annotation.class">Doctrine\ORM\Mapping\Driver\AnnotationDriver</parameter>
    <parameter key="doctrine.orm.metadata.xml.class">Doctrine\ORM\Mapping\Driver\SimplifiedXmlDriver</parameter>
    <parameter key="doctrine.orm.metadata.yml.class">Doctrine\ORM\Mapping\Driver\SimplifiedYamlDriver</parameter>
    <parameter key="doctrine.orm.metadata.php.class">Doctrine\ORM\Mapping\Driver\PHPDriver</parameter>
    <parameter key="doctrine.orm.metadata.staticphp.class">Doctrine\ORM\Mapping\Driver\StaticPHPDriver</parameter>
    <parameter key="doctrine.orm.proxy_cache_warmer.class">Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer</parameter>
    <parameter key="form.type_guesser.doctrine.class">Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</parameter>
    <parameter key="doctrine.orm.validator.unique.class">Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator</parameter>
    <parameter key="doctrine.orm.validator_initializer.class">Symfony\Bridge\Doctrine\Validator\DoctrineInitializer</parameter>
    <parameter key="doctrine.orm.security.user.provider.class">Symfony\Bridge\Doctrine\Security\User\EntityUserProvider</parameter>
    <parameter key="doctrine.orm.listeners.resolve_target_entity.class">Doctrine\ORM\Tools\ResolveTargetEntityListener</parameter>
    <parameter key="doctrine.orm.listeners.attach_entity_listeners.class">Doctrine\ORM\Tools\AttachEntityListenersListener</parameter>
    <parameter key="doctrine.orm.naming_strategy.default.class">Doctrine\ORM\Mapping\DefaultNamingStrategy</parameter>
    <parameter key="doctrine.orm.naming_strategy.underscore.class">Doctrine\ORM\Mapping\UnderscoreNamingStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.default.class">Doctrine\ORM\Mapping\DefaultQuoteStrategy</parameter>
    <parameter key="doctrine.orm.quote_strategy.ansi.class">Doctrine\ORM\Mapping\AnsiQuoteStrategy</parameter>
    <parameter key="doctrine.orm.entity_listener_resolver.class">Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_cache_factory.class">Doctrine\ORM\Cache\DefaultCacheFactory</parameter>
    <parameter key="doctrine.orm.second_level_cache.default_region.class">Doctrine\ORM\Cache\Region\DefaultRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.filelock_region.class">Doctrine\ORM\Cache\Region\FileLockRegion</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_chain.class">Doctrine\ORM\Cache\Logging\CacheLoggerChain</parameter>
    <parameter key="doctrine.orm.second_level_cache.logger_statistics.class">Doctrine\ORM\Cache\Logging\StatisticsCacheLogger</parameter>
    <parameter key="doctrine.orm.second_level_cache.cache_configuration.class">Doctrine\ORM\Cache\CacheConfiguration</parameter>
    <parameter key="doctrine.orm.second_level_cache.regions_configuration.class">Doctrine\ORM\Cache\RegionsConfiguration</parameter>
    <parameter key="doctrine.orm.auto_generate_proxy_classes">true</parameter>
    <parameter key="doctrine.orm.proxy_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/doctrine/orm/Proxies</parameter>
    <parameter key="doctrine.orm.proxy_namespace">Proxies</parameter>
    <parameter key="doctrine.migrations.preferred_em">null</parameter>
    <parameter key="doctrine.migrations.preferred_connection">null</parameter>
    <parameter key="security.authentication.trust_resolver.anonymous_class">null</parameter>
    <parameter key="security.authentication.trust_resolver.rememberme_class">null</parameter>
    <parameter key="security.role_hierarchy.roles" type="collection"/>
    <parameter key="security.access.denied_url">null</parameter>
    <parameter key="security.authentication.manager.erase_credentials">true</parameter>
    <parameter key="security.authentication.session_strategy.strategy">migrate</parameter>
    <parameter key="security.access.always_authenticate_before_granting">false</parameter>
    <parameter key="security.authentication.hide_user_not_found">true</parameter>
    <parameter key="twig.exception_listener.controller">null</parameter>
    <parameter key="twig.form.resources" type="collection">
      <parameter>@VichUploader/Form/fields.html.twig</parameter>
      <parameter>form_div_layout.html.twig</parameter>
    </parameter>
    <parameter key="twig.default_path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</parameter>
    <parameter key="web_profiler.debug_toolbar.intercept_redirects">false</parameter>
    <parameter key="web_profiler.debug_toolbar.mode">2</parameter>
    <parameter key="easyadmin.config" type="collection"/>
    <parameter key="nelmio_cors.map" type="collection">
      <parameter key="^/" type="collection"/>
    </parameter>
    <parameter key="nelmio_cors.defaults" type="collection">
      <parameter key="allow_origin">true</parameter>
      <parameter key="allow_credentials">false</parameter>
      <parameter key="allow_headers" type="collection">
        <parameter>content-type</parameter>
        <parameter>authorization</parameter>
      </parameter>
      <parameter key="expose_headers" type="collection">
        <parameter>Link</parameter>
      </parameter>
      <parameter key="allow_methods" type="collection">
        <parameter>GET</parameter>
        <parameter>OPTIONS</parameter>
        <parameter>POST</parameter>
        <parameter>PUT</parameter>
        <parameter>PATCH</parameter>
        <parameter>DELETE</parameter>
      </parameter>
      <parameter key="max_age">3600</parameter>
      <parameter key="hosts" type="collection"/>
      <parameter key="origin_regex">true</parameter>
      <parameter key="forced_allow_origin_value">null</parameter>
    </parameter>
    <parameter key="nelmio_cors.cors_listener.class">Nelmio\CorsBundle\EventListener\CorsListener</parameter>
    <parameter key="nelmio_cors.options_resolver.class">Nelmio\CorsBundle\Options\Resolver</parameter>
    <parameter key="nelmio_cors.options_provider.config.class">Nelmio\CorsBundle\Options\ConfigProvider</parameter>
    <parameter key="api_platform.enable_entrypoint">true</parameter>
    <parameter key="api_platform.enable_docs">true</parameter>
    <parameter key="api_platform.title"></parameter>
    <parameter key="api_platform.description"></parameter>
    <parameter key="api_platform.version">0.0.0</parameter>
    <parameter key="api_platform.show_webby">true</parameter>
    <parameter key="api_platform.url_generation_strategy">1</parameter>
    <parameter key="api_platform.exception_to_status" type="collection">
      <parameter key="Symfony\Component\Serializer\Exception\ExceptionInterface">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\InvalidArgumentException">400</parameter>
      <parameter key="ApiPlatform\Core\Exception\FilterValidationException">400</parameter>
      <parameter key="Doctrine\ORM\OptimisticLockException">409</parameter>
    </parameter>
    <parameter key="api_platform.formats" type="collection">
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
      <parameter key="json" type="collection">
        <parameter>application/json</parameter>
      </parameter>
      <parameter key="html" type="collection">
        <parameter>text/html</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.patch_formats" type="collection">
      <parameter key="json" type="collection">
        <parameter>application/merge-patch+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.error_formats" type="collection">
      <parameter key="jsonproblem" type="collection">
        <parameter>application/problem+json</parameter>
      </parameter>
      <parameter key="jsonld" type="collection">
        <parameter>application/ld+json</parameter>
      </parameter>
    </parameter>
    <parameter key="api_platform.allow_plain_identifiers">false</parameter>
    <parameter key="api_platform.eager_loading.enabled">true</parameter>
    <parameter key="api_platform.eager_loading.max_joins">30</parameter>
    <parameter key="api_platform.eager_loading.fetch_partial">false</parameter>
    <parameter key="api_platform.eager_loading.force_eager">true</parameter>
    <parameter key="api_platform.collection.exists_parameter_name">exists</parameter>
    <parameter key="api_platform.collection.order">ASC</parameter>
    <parameter key="api_platform.collection.order_parameter_name">order</parameter>
    <parameter key="api_platform.collection.pagination.enabled">true</parameter>
    <parameter key="api_platform.collection.pagination.partial">false</parameter>
    <parameter key="api_platform.collection.pagination.client_enabled">false</parameter>
    <parameter key="api_platform.collection.pagination.client_items_per_page">false</parameter>
    <parameter key="api_platform.collection.pagination.client_partial">false</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page">30</parameter>
    <parameter key="api_platform.collection.pagination.maximum_items_per_page">null</parameter>
    <parameter key="api_platform.collection.pagination.page_parameter_name">page</parameter>
    <parameter key="api_platform.collection.pagination.enabled_parameter_name">pagination</parameter>
    <parameter key="api_platform.collection.pagination.items_per_page_parameter_name">itemsPerPage</parameter>
    <parameter key="api_platform.collection.pagination.partial_parameter_name">partial</parameter>
    <parameter key="api_platform.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
      <parameter key="partial">false</parameter>
      <parameter key="client_enabled">false</parameter>
      <parameter key="client_items_per_page">false</parameter>
      <parameter key="client_partial">false</parameter>
      <parameter key="items_per_page">30</parameter>
      <parameter key="maximum_items_per_page">null</parameter>
      <parameter key="page_parameter_name">page</parameter>
      <parameter key="enabled_parameter_name">pagination</parameter>
      <parameter key="items_per_page_parameter_name">itemsPerPage</parameter>
      <parameter key="partial_parameter_name">partial</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.etag">true</parameter>
    <parameter key="api_platform.http_cache.max_age">null</parameter>
    <parameter key="api_platform.http_cache.shared_max_age">null</parameter>
    <parameter key="api_platform.http_cache.vary" type="collection">
      <parameter>Accept</parameter>
    </parameter>
    <parameter key="api_platform.http_cache.public">null</parameter>
    <parameter key="api_platform.http_cache.invalidation.max_header_length">7500</parameter>
    <parameter key="api_platform.asset_package">null</parameter>
    <parameter key="api_platform.defaults" type="collection">
      <parameter key="attributes" type="collection"/>
    </parameter>
    <parameter key="api_platform.resource_class_directories" type="collection">
      <parameter>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/src/Entity</parameter>
      <parameter>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle/Entity</parameter>
    </parameter>
    <parameter key="api_platform.oauth.enabled">false</parameter>
    <parameter key="api_platform.oauth.clientId"></parameter>
    <parameter key="api_platform.oauth.clientSecret"></parameter>
    <parameter key="api_platform.oauth.type">oauth2</parameter>
    <parameter key="api_platform.oauth.flow">application</parameter>
    <parameter key="api_platform.oauth.tokenUrl"></parameter>
    <parameter key="api_platform.oauth.authorizationUrl"></parameter>
    <parameter key="api_platform.oauth.refreshUrl"></parameter>
    <parameter key="api_platform.oauth.scopes" type="collection"/>
    <parameter key="api_platform.openapi.termsOfService">null</parameter>
    <parameter key="api_platform.openapi.contact.name">null</parameter>
    <parameter key="api_platform.openapi.contact.url">null</parameter>
    <parameter key="api_platform.openapi.contact.email">null</parameter>
    <parameter key="api_platform.openapi.license.name">null</parameter>
    <parameter key="api_platform.openapi.license.url">null</parameter>
    <parameter key="api_platform.swagger.versions" type="collection">
      <parameter>3</parameter>
    </parameter>
    <parameter key="api_platform.enable_swagger_ui">true</parameter>
    <parameter key="api_platform.enable_re_doc">true</parameter>
    <parameter key="api_platform.swagger.api_keys" type="collection"/>
    <parameter key="api_platform.graphql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphiql.enabled">false</parameter>
    <parameter key="api_platform.graphql.graphql_playground.enabled">false</parameter>
    <parameter key="api_platform.graphql.collection.pagination" type="collection">
      <parameter key="enabled">true</parameter>
    </parameter>
    <parameter key="api_platform.validator.serialize_payload_fields" type="collection"/>
    <parameter key="api_platform.elasticsearch.enabled">false</parameter>
    <parameter key="vich_uploader.default_filename_attribute_suffix">_name</parameter>
    <parameter key="vich_uploader.mappings" type="collection">
      <parameter key="post_images" type="collection">
        <parameter key="uri_prefix">/files</parameter>
        <parameter key="upload_destination">C:\Users\MARYEM\React\Projet_Portail\pet-adoption/public/images/uploads/files</parameter>
        <parameter key="namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="directory_namer" type="collection">
          <parameter key="service">null</parameter>
          <parameter key="options">null</parameter>
        </parameter>
        <parameter key="delete_on_remove">true</parameter>
        <parameter key="delete_on_update">true</parameter>
        <parameter key="inject_on_load">false</parameter>
        <parameter key="db_driver">orm</parameter>
      </parameter>
    </parameter>
    <parameter key="vich_uploader.file_injector.class">Vich\UploaderBundle\Injector\FileInjector</parameter>
    <parameter key="stof_doctrine_extensions.default_locale">en_US</parameter>
    <parameter key="stof_doctrine_extensions.translation_fallback">false</parameter>
    <parameter key="stof_doctrine_extensions.persist_default_translation">false</parameter>
    <parameter key="stof_doctrine_extensions.skip_translation_on_load">false</parameter>
    <parameter key="stof_doctrine_extensions.listener.translatable.class">Gedmo\Translatable\TranslatableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.timestampable.class">Gedmo\Timestampable\TimestampableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.blameable.class">Gedmo\Blameable\BlameableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sluggable.class">Gedmo\Sluggable\SluggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.tree.class">Gedmo\Tree\TreeListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.loggable.class">Gedmo\Loggable\LoggableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.sortable.class">Gedmo\Sortable\SortableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.softdeleteable.class">Gedmo\SoftDeleteable\SoftDeleteableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.uploadable.class">Gedmo\Uploadable\UploadableListener</parameter>
    <parameter key="stof_doctrine_extensions.listener.reference_integrity.class">Gedmo\ReferenceIntegrity\ReferenceIntegrityListener</parameter>
    <parameter key="lexik_jwt_authentication.pass_phrase">%env(JWT_PASSPHRASE)%</parameter>
    <parameter key="lexik_jwt_authentication.token_ttl">7200</parameter>
    <parameter key="lexik_jwt_authentication.clock_skew">0</parameter>
    <parameter key="lexik_jwt_authentication.user_identity_field">username</parameter>
    <parameter key="lexik_jwt_authentication.user_id_claim">username</parameter>
    <parameter key="lexik_jwt_authentication.encoder.signature_algorithm">RS256</parameter>
    <parameter key="lexik_jwt_authentication.encoder.crypto_engine">openssl</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl">2592000</parameter>
    <parameter key="gesdinet_jwt_refresh_token.ttl_update">true</parameter>
    <parameter key="gesdinet_jwt_refresh_token.security.firewall">api</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_provider">null</parameter>
    <parameter key="gesdinet_jwt_refresh_token.user_identity_field">username</parameter>
    <parameter key="gesdinet_jwt_refresh_token.single_use">false</parameter>
    <parameter key="gesdinet_jwt_refresh_token.token_parameter_name">refresh_token</parameter>
    <parameter key="gesdinet_jwt_refresh_token.doctrine_mappings">true</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.refresh_token.class">Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.object_manager.id">doctrine.orm.entity_manager</parameter>
    <parameter key="gesdinet.jwtrefreshtoken.user_checker.id">security.user_checker</parameter>
    <parameter key="swiftmailer.mailer.default.transport.name">dynamic</parameter>
    <parameter key="swiftmailer.spool.default.memory.path">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/swiftmailer/spool/default</parameter>
    <parameter key="swiftmailer.mailer.default.spool.enabled">true</parameter>
    <parameter key="swiftmailer.mailer.default.plugin.impersonate">null</parameter>
    <parameter key="swiftmailer.mailer.default.single_address">null</parameter>
    <parameter key="swiftmailer.mailer.default.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.spool.enabled">true</parameter>
    <parameter key="swiftmailer.delivery.enabled">true</parameter>
    <parameter key="swiftmailer.single_address">null</parameter>
    <parameter key="swiftmailer.mailers" type="collection">
      <parameter key="default">swiftmailer.mailer.default</parameter>
    </parameter>
    <parameter key="swiftmailer.default_mailer">default</parameter>
    <parameter key="data_collector.templates" type="collection">
      <parameter key="data_collector.request" type="collection">
        <parameter>request</parameter>
        <parameter>@WebProfiler/Collector/request.html.twig</parameter>
      </parameter>
      <parameter key="api_platform.data_collector.request" type="collection">
        <parameter>api_platform.data_collector.request</parameter>
        <parameter>@ApiPlatform/DataCollector/request.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.time" type="collection">
        <parameter>time</parameter>
        <parameter>@WebProfiler/Collector/time.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.memory" type="collection">
        <parameter>memory</parameter>
        <parameter>@WebProfiler/Collector/memory.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.validator" type="collection">
        <parameter>validator</parameter>
        <parameter>@WebProfiler/Collector/validator.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.ajax" type="collection">
        <parameter>ajax</parameter>
        <parameter>@WebProfiler/Collector/ajax.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.form" type="collection">
        <parameter>form</parameter>
        <parameter>@WebProfiler/Collector/form.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.exception" type="collection">
        <parameter>exception</parameter>
        <parameter>@WebProfiler/Collector/exception.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.logger" type="collection">
        <parameter>logger</parameter>
        <parameter>@WebProfiler/Collector/logger.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.events" type="collection">
        <parameter>events</parameter>
        <parameter>@WebProfiler/Collector/events.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.router" type="collection">
        <parameter>router</parameter>
        <parameter>@WebProfiler/Collector/router.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.cache" type="collection">
        <parameter>cache</parameter>
        <parameter>@WebProfiler/Collector/cache.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.translation" type="collection">
        <parameter>translation</parameter>
        <parameter>@WebProfiler/Collector/translation.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.security" type="collection">
        <parameter>security</parameter>
        <parameter>@Security/Collector/security.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.twig" type="collection">
        <parameter>twig</parameter>
        <parameter>@WebProfiler/Collector/twig.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.doctrine" type="collection">
        <parameter>db</parameter>
        <parameter>@Doctrine/Collector/db.html.twig</parameter>
      </parameter>
      <parameter key="swiftmailer.data_collector" type="collection">
        <parameter>swiftmailer</parameter>
        <parameter>@Swiftmailer/Collector/swiftmailer.html.twig</parameter>
      </parameter>
      <parameter key="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" type="collection">
        <parameter>easyadmin</parameter>
        <parameter>@EasyAdmin/inspector/data_collector.html.twig</parameter>
      </parameter>
      <parameter key="Vich\UploaderBundle\DataCollector\MappingCollector" type="collection">
        <parameter>vich_uploader.mapping_collector</parameter>
        <parameter>@VichUploader/Collector/mapping_collector.html.twig</parameter>
      </parameter>
      <parameter key="data_collector.config" type="collection">
        <parameter>config</parameter>
        <parameter>@WebProfiler/Collector/config.html.twig</parameter>
      </parameter>
    </parameter>
    <parameter key="console.command.ids" type="collection"/>
  </parameters>
  <services>
    <service id="service_container" class="Symfony\Component\DependencyInjection\ContainerInterface" public="true" synthetic="true"/>
    <service id="kernel" class="App\Kernel" public="true" synthetic="true">
      <tag name="routing.route_loader"/>
    </service>
    <service id="App\Controller\Admin\AppartementController" class="App\Controller\Admin\AppartementController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\AppartementController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\CommentaireController" class="App\Controller\Admin\CommentaireController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\CommentaireController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.dashboard_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.JEaLqsX.App\Controller\Admin\DashboardController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\MaisonController" class="App\Controller\Admin\MaisonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\MaisonController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\PhotoController" class="App\Controller\Admin\PhotoController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\PhotoController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\StudioController" class="App\Controller\Admin\StudioController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\StudioController"/>
      </call>
    </service>
    <service id="App\Controller\Admin\UserCrudController" class="App\Controller\Admin\UserCrudController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="ea.crud_controller"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.ky4eP1x.App\Controller\Admin\UserCrudController"/>
      </call>
    </service>
    <service id="App\Controller\MailerController" class="App\Controller\MailerController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.hyz4CBf.App\Controller\MailerController"/>
      </call>
    </service>
    <service id="App\Controller\MaisonController" class="App\Controller\MaisonController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\CommentaireRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\MaisonController"/>
      </call>
    </service>
    <service id="App\Controller\RatingController" class="App\Controller\RatingController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\RatingRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\RatingController"/>
      </call>
    </service>
    <service id="App\Controller\RegistrationController" class="App\Controller\RegistrationController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\UserRepository"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.hyz4CBf.App\Controller\RegistrationController"/>
      </call>
    </service>
    <service id="App\Controller\SecurityController" class="App\Controller\SecurityController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\SecurityController"/>
      </call>
    </service>
    <service id="App\Controller\UserController" class="App\Controller\UserController" public="true" autowire="true" autoconfigure="true">
      <tag name="controller.service_arguments"/>
      <tag name="container.service_subscriber"/>
      <argument type="service" id="App\Repository\ClientRepository"/>
      <call method="setContainer">
        <argument type="service" id=".service_locator.vdmMuyE.App\Controller\UserController"/>
      </call>
    </service>
    <service id="App\DataFixtures\UserFixtures" class="App\DataFixtures\UserFixtures" autowire="true" autoconfigure="true">
      <tag name="doctrine.fixture.orm"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Form\PhotoType" class="App\Form\PhotoType" autowire="true" autoconfigure="true">
      <tag name="form.type"/>
    </service>
    <service id="App\Listeners\AuthenticationSuccessListener" class="App\Listeners\AuthenticationSuccessListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="onAuthenticationSuccess" priority="-2"/>
      <argument>7200</argument>
    </service>
    <service id="App\Listeners\RefreshTokenListener" class="App\Listeners\RefreshTokenListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <argument>2592000</argument>
    </service>
    <service id="App\Listeners\RequestListener" class="App\Listeners\RequestListener" autowire="true" autoconfigure="true">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="App\Repository\AdoptionRepository" class="App\Repository\AdoptionRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AdresseRepository" class="App\Repository\AdresseRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\AppartementRepository" class="App\Repository\AppartementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\CommentaireRepository" class="App\Repository\CommentaireRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContactRepository" class="App\Repository\ContactRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\GarageRepository" class="App\Repository\GarageRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\LogementRepository" class="App\Repository\LogementRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\MaisonRepository" class="App\Repository\MaisonRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PetRepository" class="App\Repository\PetRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PhotoRepository" class="App\Repository\PhotoRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\PostvetoRepository" class="App\Repository\PostvetoRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\ProprietaireRepository" class="App\Repository\ProprietaireRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\RatingRepository" class="App\Repository\RatingRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\StudioRepository" class="App\Repository\StudioRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\TerrainRepository" class="App\Repository\TerrainRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\VeterinaryRepository" class="App\Repository\VeterinaryRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Repository\WishRepository" class="App\Repository\WishRepository" autowire="true" autoconfigure="true">
      <tag name="doctrine.repository_service"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="App\Security\LoginFormAuthenticator" class="App\Security\LoginFormAuthenticator" autowire="true" autoconfigure="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="App\Trait\TimestampTrait" class="App\Trait\TimestampTrait" autowire="true" autoconfigure="true"/>
    <service id=".legacy_controller_name_converter" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="kernel"/>
      <argument>false</argument>
    </service>
    <service id="argument_metadata_factory" class="Symfony\Component\HttpKernel\ControllerMetadata\ArgumentMetadataFactory" public="false"/>
    <service id="response_listener" class="Symfony\Component\HttpKernel\EventListener\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument>UTF-8</argument>
    </service>
    <service id="streamed_response_listener" class="Symfony\Component\HttpKernel\EventListener\StreamedResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="locale_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="request_stack"/>
      <argument>en</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
    </service>
    <service id="validate_request_listener" class="Symfony\Component\HttpKernel\EventListener\ValidateRequestListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id=".legacy_resolve_controller_name_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\ResolveControllerNameSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
      <argument>false</argument>
    </service>
    <service id="disallow_search_engine_index_response_listener" class="Symfony\Component\HttpKernel\EventListener\DisallowRobotsIndexingListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="error_controller" class="Symfony\Component\HttpKernel\Controller\ErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>error_controller</argument>
      <argument type="service" id="error_handler.error_renderer.serializer"/>
    </service>
    <service id="exception_listener" class="Symfony\Component\HttpKernel\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <argument>error_controller</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="parameter_bag" class="Symfony\Component\DependencyInjection\ParameterBag\ContainerBag" public="false">
      <argument type="service" id="service_container"/>
    </service>
    <service id="http_kernel" class="Symfony\Component\HttpKernel\HttpKernel" public="true">
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.argument_resolver"/>
    </service>
    <service id="request_stack" class="Symfony\Component\HttpFoundation\RequestStack" public="true"/>
    <service id="url_helper" class="Symfony\Component\HttpFoundation\UrlHelper" public="false">
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
    </service>
    <service id="cache_warmer" class="Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_warmer"/>
      <argument>true</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/srcApp_KernelDevDebugContainerDeprecations.log</argument>
    </service>
    <service id="cache_clearer" class="Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer" public="true">
      <argument type="tagged_iterator" tag="kernel.cache_clearer"/>
    </service>
    <service id="filesystem" class="Symfony\Component\Filesystem\Filesystem" public="true"/>
    <service id="file_locator" class="Symfony\Component\HttpKernel\Config\FileLocator" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources</argument>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src</argument>
      </argument>
      <argument>false</argument>
    </service>
    <service id="uri_signer" class="Symfony\Component\HttpKernel\UriSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="config_cache_factory" class="Symfony\Component\Config\ResourceCheckerConfigCacheFactory" public="false">
      <argument type="tagged_iterator" tag="config_cache.resource_checker"/>
    </service>
    <service id="dependency_injection.config.container_parameters_resource_checker" class="Symfony\Component\DependencyInjection\Config\ContainerParametersResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-980"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="config.resource.self_checking_resource_checker" class="Symfony\Component\Config\Resource\SelfCheckingResourceChecker" public="false">
      <tag name="config_cache.resource_checker" priority="-990"/>
    </service>
    <service id="services_resetter" class="Symfony\Component\HttpKernel\DependencyInjection\ServicesResetter" public="true">
      <argument type="iterator">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="form.choice_list_factory.cached" type="service" id="form.choice_list_factory.cached" on-invalid="ignore_uninitialized"/>
        <argument key="profiler" type="service" id="profiler" on-invalid="ignore_uninitialized"/>
        <argument key="debug.validator" type="service" id="debug.validator" on-invalid="ignore_uninitialized"/>
        <argument key="debug.stopwatch" type="service" id="debug.stopwatch" on-invalid="ignore_uninitialized"/>
        <argument key="debug.event_dispatcher" type="service" id="debug.event_dispatcher" on-invalid="ignore_uninitialized"/>
        <argument key="doctrine" type="service" id="doctrine" on-invalid="ignore_uninitialized"/>
        <argument key="form.type.entity" type="service" id="form.type.entity" on-invalid="ignore_uninitialized"/>
        <argument key="security.token_storage" type="service" id="security.token_storage" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
        <argument key="fos_rest.view_handler.default" type="service" id="fos_rest.view_handler.default" on-invalid="ignore_uninitialized"/>
        <argument key="swiftmailer.email_sender.listener" type="service" id="swiftmailer.email_sender.listener" on-invalid="ignore_uninitialized"/>
      </argument>
      <argument type="collection">
        <argument key="cache.app" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.system" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.serializer" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.annotations" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="cache.property_info" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.choice_list_factory.cached" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="profiler" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.validator" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.stopwatch" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="debug.event_dispatcher" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="doctrine" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="form.type.entity" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="security.token_storage" type="collection">
          <argument>disableUsageTracking</argument>
          <argument>setToken</argument>
        </argument>
        <argument key="cache.security_expression_language" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.route_name_resolver" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.identifiers_extractor" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.subresource_operation_factory" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.resource" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="api_platform.cache.metadata.property" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="fos_rest.view_handler.default" type="collection">
          <argument>reset</argument>
        </argument>
        <argument key="swiftmailer.email_sender.listener" type="collection">
          <argument>reset</argument>
        </argument>
      </argument>
    </service>
    <service id="reverse_container" class="Symfony\Component\DependencyInjection\ReverseContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.wnlveDj"/>
    </service>
    <service id="locale_aware_listener" class="Symfony\Component\HttpKernel\EventListener\LocaleAwareListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="iterator">
        <argument type="service" id="translator.default"/>
      </argument>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="container.env_var_processor" class="Symfony\Component\DependencyInjection\EnvVarProcessor" public="false">
      <tag name="container.env_var_processor"/>
      <argument type="service" id="service_container"/>
      <argument type="tagged_iterator" tag="container.env_var_loader"/>
    </service>
    <service id="fragment.handler" class="Symfony\Component\HttpKernel\DependencyInjection\LazyLoadingFragmentHandler" public="false">
      <argument type="service" id=".service_locator._cmka45"/>
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
    </service>
    <service id="fragment.renderer.inline" class="Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer" public="false">
      <tag name="kernel.fragment_renderer" alias="inline"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setFragmentPath">
        <argument>/_fragment</argument>
      </call>
    </service>
    <service id=".2_~BFLkqsL" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="getAndCleanOutputBuffer"/>
    </service>
    <service id=".1_~BFLkqsL" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id="error_handler.error_renderer.html" class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer">
      <argument type="service" id=".1_~BFLkqsL"/>
      <argument>UTF-8</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument type="service" id=".2_~BFLkqsL"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="console.error_listener" class="Symfony\Component\Console\EventListener\ErrorListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="console"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="console.suggest_missing_package_subscriber" class="Symfony\Bundle\FrameworkBundle\EventListener\SuggestMissingPackageSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="console.command.about" class="Symfony\Bundle\FrameworkBundle\Command\AboutCommand" public="false">
      <tag name="console.command" command="about"/>
      <call method="setName">
        <argument>about</argument>
      </call>
    </service>
    <service id="console.command.assets_install" class="Symfony\Bundle\FrameworkBundle\Command\AssetsInstallCommand" public="false">
      <tag name="console.command" command="assets:install"/>
      <argument type="service" id="filesystem"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <call method="setName">
        <argument>assets:install</argument>
      </call>
    </service>
    <service id="console.command.cache_clear" class="Symfony\Bundle\FrameworkBundle\Command\CacheClearCommand" public="false">
      <tag name="console.command" command="cache:clear"/>
      <argument type="service" id="cache_clearer"/>
      <argument type="service" id="filesystem"/>
      <call method="setName">
        <argument>cache:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_clear" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolClearCommand" public="false">
      <tag name="console.command" command="cache:pool:clear"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:clear</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_prune" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolPruneCommand" public="false">
      <tag name="console.command" command="cache:pool:prune"/>
      <argument type="iterator"/>
      <call method="setName">
        <argument>cache:pool:prune</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_delete" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolDeleteCommand" public="false">
      <tag name="console.command" command="cache:pool:delete"/>
      <argument type="service" id="cache.global_clearer"/>
      <call method="setName">
        <argument>cache:pool:delete</argument>
      </call>
    </service>
    <service id="console.command.cache_pool_list" class="Symfony\Bundle\FrameworkBundle\Command\CachePoolListCommand" public="false">
      <tag name="console.command" command="cache:pool:list"/>
      <argument type="collection">
        <argument>cache.app</argument>
        <argument>cache.system</argument>
        <argument>cache.validator</argument>
        <argument>cache.serializer</argument>
        <argument>cache.annotations</argument>
        <argument>cache.property_info</argument>
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument>cache.doctrine.orm.default.result</argument>
        <argument>cache.doctrine.orm.default.query</argument>
        <argument>cache.security_expression_language</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.metadata.property</argument>
      </argument>
      <call method="setName">
        <argument>cache:pool:list</argument>
      </call>
    </service>
    <service id="console.command.cache_warmup" class="Symfony\Bundle\FrameworkBundle\Command\CacheWarmupCommand" public="false">
      <tag name="console.command" command="cache:warmup"/>
      <argument type="service" id="cache_warmer"/>
      <call method="setName">
        <argument>cache:warmup</argument>
      </call>
    </service>
    <service id="console.command.config_debug" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDebugCommand" public="false">
      <tag name="console.command" command="debug:config"/>
      <call method="setName">
        <argument>debug:config</argument>
      </call>
    </service>
    <service id="console.command.config_dump_reference" class="Symfony\Bundle\FrameworkBundle\Command\ConfigDumpReferenceCommand" public="false">
      <tag name="console.command" command="config:dump-reference"/>
      <call method="setName">
        <argument>config:dump-reference</argument>
      </call>
    </service>
    <service id="console.command.container_debug" class="Symfony\Bundle\FrameworkBundle\Command\ContainerDebugCommand" public="false">
      <tag name="console.command" command="debug:container"/>
      <call method="setName">
        <argument>debug:container</argument>
      </call>
    </service>
    <service id="console.command.container_lint" class="Symfony\Bundle\FrameworkBundle\Command\ContainerLintCommand" public="false">
      <tag name="console.command" command="lint:container"/>
      <call method="setName">
        <argument>lint:container</argument>
      </call>
    </service>
    <service id="console.command.debug_autowiring" class="Symfony\Bundle\FrameworkBundle\Command\DebugAutowiringCommand" public="false">
      <tag name="console.command" command="debug:autowiring"/>
      <argument>null</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:autowiring</argument>
      </call>
    </service>
    <service id="console.command.event_dispatcher_debug" class="Symfony\Bundle\FrameworkBundle\Command\EventDispatcherDebugCommand" public="false">
      <tag name="console.command" command="debug:event-dispatcher"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <call method="setName">
        <argument>debug:event-dispatcher</argument>
      </call>
    </service>
    <service id="console.command.router_debug" class="Symfony\Bundle\FrameworkBundle\Command\RouterDebugCommand" public="false">
      <tag name="console.command" command="debug:router"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:router</argument>
      </call>
    </service>
    <service id="console.command.router_match" class="Symfony\Bundle\FrameworkBundle\Command\RouterMatchCommand" public="false">
      <tag name="console.command" command="router:match"/>
      <argument type="service" id="router.default"/>
      <call method="setName">
        <argument>router:match</argument>
      </call>
    </service>
    <service id="console.command.translation_debug" class="Symfony\Bundle\FrameworkBundle\Command\TranslationDebugCommand" public="false">
      <tag name="console.command" command="debug:translation"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/translations</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>debug:translation</argument>
      </call>
    </service>
    <service id="console.command.translation_update" class="Symfony\Bundle\FrameworkBundle\Command\TranslationUpdateCommand" public="false">
      <tag name="console.command" command="translation:update"/>
      <argument type="service" id="translation.writer"/>
      <argument type="service" id="translation.reader"/>
      <argument type="service" id="translation.extractor"/>
      <argument>en</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/translations</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations</argument>
      </argument>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </argument>
      <call method="setName">
        <argument>translation:update</argument>
      </call>
    </service>
    <service id="console.command.xliff_lint" class="Symfony\Bundle\FrameworkBundle\Command\XliffLintCommand" public="false">
      <tag name="console.command" command="lint:xliff"/>
      <call method="setName">
        <argument>lint:xliff</argument>
      </call>
    </service>
    <service id="console.command.yaml_lint" class="Symfony\Bundle\FrameworkBundle\Command\YamlLintCommand" public="false">
      <tag name="console.command" command="lint:yaml"/>
      <call method="setName">
        <argument>lint:yaml</argument>
      </call>
    </service>
    <service id="console.command.form_debug" class="Symfony\Component\Form\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:form"/>
      <argument type="service" id="form.registry"/>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type</argument>
        <argument>App\Form</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type</argument>
        <argument>Vich\UploaderBundle\Form\Type</argument>
      </argument>
      <argument type="collection">
        <argument>App\Form\PhotoType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FormType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\ChoiceType</argument>
        <argument>Symfony\Component\Form\Extension\Core\Type\FileType</argument>
        <argument>Symfony\Bridge\Doctrine\Form\Type\EntityType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichFileType</argument>
        <argument>Vich\UploaderBundle\Form\Type\VichImageType</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension</argument>
        <argument>Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension</argument>
        <argument>Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension</argument>
        <argument>Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension</argument>
        <argument>EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension</argument>
      </argument>
      <argument type="collection">
        <argument>Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser</argument>
        <argument>Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser</argument>
      </argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <call method="setName">
        <argument>debug:form</argument>
      </call>
    </service>
    <service id="console.command.secrets_set" class="Symfony\Bundle\FrameworkBundle\Command\SecretsSetCommand" public="false">
      <tag name="console.command" command="secrets:set"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:set</argument>
      </call>
    </service>
    <service id="console.command.secrets_remove" class="Symfony\Bundle\FrameworkBundle\Command\SecretsRemoveCommand" public="false">
      <tag name="console.command" command="secrets:remove"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:remove</argument>
      </call>
    </service>
    <service id="console.command.secrets_generate_key" class="Symfony\Bundle\FrameworkBundle\Command\SecretsGenerateKeysCommand" public="false">
      <tag name="console.command" command="secrets:generate-keys"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:generate-keys</argument>
      </call>
    </service>
    <service id="console.command.secrets_list" class="Symfony\Bundle\FrameworkBundle\Command\SecretsListCommand" public="false">
      <tag name="console.command" command="secrets:list"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:list</argument>
      </call>
    </service>
    <service id="console.command.secrets_decrypt_to_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsDecryptToLocalCommand" public="false">
      <tag name="console.command" command="secrets:decrypt-to-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:decrypt-to-local</argument>
      </call>
    </service>
    <service id="console.command.secrets_encrypt_from_local" class="Symfony\Bundle\FrameworkBundle\Command\SecretsEncryptFromLocalCommand" public="false">
      <tag name="console.command" command="secrets:encrypt-from-local"/>
      <argument type="service" id="secrets.vault"/>
      <argument type="service" id="secrets.local_vault" on-invalid="ignore"/>
      <call method="setName">
        <argument>secrets:encrypt-from-local</argument>
      </call>
    </service>
    <service id="cache.app" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.app.recorder_inner"/>
    </service>
    <service id="cache.app.simple" class="Symfony\Component\Cache\Psr16Cache" public="false">
      <argument type="service" id="cache.app"/>
      <deprecated>The "Psr\SimpleCache\CacheInterface" / "%service_id%" service is deprecated since Symfony 4.3. Use "Symfony\Contracts\Cache\CacheInterface" / "cache.app" instead.</deprecated>
    </service>
    <service id="cache.app.taggable" class="Symfony\Component\Cache\Adapter\TagAwareAdapter" public="false">
      <argument type="service" id="cache.app"/>
    </service>
    <service id="cache.system" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="true">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.system.recorder_inner"/>
    </service>
    <service id="cache.validator" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.validator.recorder_inner"/>
    </service>
    <service id="cache.serializer" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.serializer.recorder_inner"/>
    </service>
    <service id="cache.annotations" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.annotations.recorder_inner"/>
    </service>
    <service id="cache.property_info" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.property_info.recorder_inner"/>
    </service>
    <service id="cache.adapter.system" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.system_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.adapter.apcu" class="Symfony\Component\Cache\Adapter\ApcuAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.doctrine" class="Symfony\Component\Cache\Adapter\DoctrineAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_doctrine_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument>0</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.psr6" class="Symfony\Component\Cache\Adapter\ProxyAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_psr6_provider" clearer="cache.default_clearer" reset="reset"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
    </service>
    <service id="cache.adapter.redis" class="Symfony\Component\Cache\Adapter\RedisAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_redis_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.memcached" class="Symfony\Component\Cache\Adapter\MemcachedAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_memcached_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.pdo" class="Symfony\Component\Cache\Adapter\PdoAdapter" public="false" abstract="true">
      <tag name="cache.pool" provider="cache.default_pdo_provider" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument></argument>
      <argument></argument>
      <argument>0</argument>
      <argument type="collection"/>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.adapter.array" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false" abstract="true">
      <tag name="cache.pool" clearer="cache.default_clearer" reset="reset"/>
      <tag name="monolog.logger" channel="cache"/>
      <argument>0</argument>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.default_marshaller" class="Symfony\Component\Cache\Marshaller\DefaultMarshaller" public="false">
      <argument>null</argument>
    </service>
    <service id="cache.default_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="false">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.system_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <tag name="kernel.cache_clearer"/>
      <argument type="collection">
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="cache.global_clearer" class="Symfony\Component\HttpKernel\CacheClearer\Psr6CacheClearer" public="true">
      <tag name="cache.pool.clearer"/>
      <argument type="collection">
        <argument key="cache.app" type="service" id="cache.app" on-invalid="ignore_uninitialized"/>
        <argument key="cache.system" type="service" id="cache.system" on-invalid="ignore_uninitialized"/>
        <argument key="cache.validator" type="service" id="cache.validator" on-invalid="ignore_uninitialized"/>
        <argument key="cache.serializer" type="service" id="cache.serializer" on-invalid="ignore_uninitialized"/>
        <argument key="cache.annotations" type="service" id="cache.annotations" on-invalid="ignore_uninitialized"/>
        <argument key="cache.property_info" type="service" id="cache.property_info" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.metadata" type="service" id="cache.doctrine.orm.default.metadata" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.result" type="service" id="cache.doctrine.orm.default.result" on-invalid="ignore_uninitialized"/>
        <argument key="cache.doctrine.orm.default.query" type="service" id="cache.doctrine.orm.default.query" on-invalid="ignore_uninitialized"/>
        <argument key="cache.security_expression_language" type="service" id="cache.security_expression_language" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.route_name_resolver" type="service" id="api_platform.cache.route_name_resolver" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.identifiers_extractor" type="service" id="api_platform.cache.identifiers_extractor" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.subresource_operation_factory" type="service" id="api_platform.cache.subresource_operation_factory" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.resource" type="service" id="api_platform.cache.metadata.resource" on-invalid="ignore_uninitialized"/>
        <argument key="api_platform.cache.metadata.property" type="service" id="api_platform.cache.metadata.property" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id="identity_translator" class="Symfony\Component\Translation\IdentityTranslator" public="false"/>
    <service id="translator.selector" class="Symfony\Component\Translation\MessageSelector" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2, use "identity_translator" instead.</deprecated>
    </service>
    <service id=".cache_connection.GD_MSZC" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>redis://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id=".cache_connection.JKE6keX" class="Symfony\Component\Cache\Adapter\AbstractAdapter" public="false">
      <argument>memcached://localhost</argument>
      <argument type="collection">
        <argument key="lazy">true</argument>
      </argument>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createConnection"/>
    </service>
    <service id="cache.property_access" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false">
      <argument>0</argument>
      <argument>false</argument>
    </service>
    <service id=".1_NativeFileSessionHandler~ORmf.SN" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\NativeFileSessionHandler" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/sessions</argument>
    </service>
    <service id="session" class="Symfony\Component\HttpFoundation\Session\Session" public="true">
      <argument type="service" id="session.storage.native"/>
    </service>
    <service id="session.storage.metadata_bag" class="Symfony\Component\HttpFoundation\Session\Storage\MetadataBag" public="false">
      <argument>_sf2_meta</argument>
      <argument>0</argument>
    </service>
    <service id="session.storage.native" class="Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage" public="false">
      <argument>%session.storage.options%</argument>
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.storage.php_bridge" class="Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage" public="false">
      <argument>null</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.flash_bag" class="Symfony\Component\HttpFoundation\Session\Flash\FlashBag" public="false">
      <factory service="session" method="getFlashBag"/>
    </service>
    <service id="session.attribute_bag" class="Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag" public="false">
      <argument>attributes</argument>
      <factory service="session" method="getBag"/>
    </service>
    <service id="session.storage.mock_file" class="Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/sessions</argument>
      <argument>MOCKSESSID</argument>
      <argument type="service" id="session.storage.metadata_bag"/>
    </service>
    <service id="session.handler.native_file" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\StrictSessionHandler" public="false">
      <argument type="service" id=".1_NativeFileSessionHandler~ORmf.SN"/>
    </service>
    <service id="session.abstract_handler" class="Symfony\Component\HttpFoundation\Session\Storage\Handler\AbstractSessionHandler" public="false">
      <argument></argument>
      <factory class="Symfony\Component\HttpFoundation\Session\Storage\Handler\SessionHandlerFactory" method="createHandler"/>
    </service>
    <service id="session_listener" class="Symfony\Component\HttpKernel\EventListener\SessionListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id=".service_locator.Bppmeg3"/>
    </service>
    <service id="session.save_listener" class="Symfony\Component\HttpKernel\EventListener\SaveSessionListener" public="false">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1. Use the "session_listener" service instead.</deprecated>
    </service>
    <service id="security.csrf.token_generator" class="Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator" public="false"/>
    <service id="security.csrf.token_storage" class="Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage" public="false">
      <argument type="service" id="session"/>
    </service>
    <service id="security.csrf.token_manager" class="Symfony\Component\Security\Csrf\CsrfTokenManager" public="true">
      <argument type="service" id="security.csrf.token_generator"/>
      <argument type="service" id="security.csrf.token_storage"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="twig.runtime.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="twig.extension.security_csrf" class="Symfony\Bridge\Twig\Extension\CsrfExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="form.resolved_type_factory" class="Symfony\Component\Form\Extension\DataCollector\Proxy\ResolvedTypeFactoryDataCollectorProxy" public="false">
      <argument type="service" id=".1_ResolvedFormTypeFactory~yvkPhs3"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="form.registry" class="Symfony\Component\Form\FormRegistry" public="false">
      <argument type="collection">
        <argument type="service" id="form.extension"/>
      </argument>
      <argument type="service" id="form.resolved_type_factory"/>
    </service>
    <service id="form.factory" class="Symfony\Component\Form\FormFactory" public="true">
      <argument type="service" id="form.registry"/>
    </service>
    <service id="form.extension" class="Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension" public="false">
      <argument type="service" id=".service_locator.ymu9w2k"/>
      <argument type="collection">
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="iterator">
          <argument type="service" id="form.type_extension.form.transformation_failure_handling"/>
          <argument type="service" id="form.type_extension.form.http_foundation"/>
          <argument type="service" id="form.type_extension.form.validator"/>
          <argument type="service" id="form.type_extension.upload.validator"/>
          <argument type="service" id="form.type_extension.csrf"/>
          <argument type="service" id="form.type_extension.form.data_collector"/>
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\RepeatedType" type="iterator">
          <argument type="service" id="form.type_extension.repeated.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\SubmitType" type="iterator">
          <argument type="service" id="form.type_extension.submit.validator"/>
        </argument>
        <argument key="Symfony\Component\Form\Extension\Core\Type\CollectionType" type="iterator">
          <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension"/>
        </argument>
      </argument>
      <argument type="iterator">
        <argument type="service" id="form.type_guesser.validator"/>
        <argument type="service" id="form.type_guesser.doctrine"/>
      </argument>
    </service>
    <service id="form.type_guesser.validator" class="Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser" public="false">
      <tag name="form.type_guesser"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.choice_list_factory.default" class="Symfony\Component\Form\ChoiceList\Factory\DefaultChoiceListFactory" public="false"/>
    <service id="form.choice_list_factory.property_access" class="Symfony\Component\Form\ChoiceList\Factory\PropertyAccessDecorator" public="false">
      <argument type="service" id="form.choice_list_factory.default"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.choice_list_factory.cached" class="Symfony\Component\Form\ChoiceList\Factory\CachingFactoryDecorator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="form.choice_list_factory.property_access"/>
    </service>
    <service id="form.type.form" class="Symfony\Component\Form\Extension\Core\Type\FormType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="form.type.choice" class="Symfony\Component\Form\Extension\Core\Type\ChoiceType" public="false">
      <tag name="form.type"/>
      <argument type="service" id="form.choice_list_factory.cached"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type.file" class="Symfony\Component\Form\Extension\Core\Type\FileType" public="true">
      <tag name="form.type"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.transformation_failure_handling" class="Symfony\Component\Form\Extension\Core\Type\TransformationFailureExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
    </service>
    <service id="form.type_extension.form.http_foundation" class="Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="form.type_extension.form.request_handler"/>
    </service>
    <service id="form.type_extension.form.request_handler" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler" public="false">
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="form.server_params" class="Symfony\Component\Form\Util\ServerParams" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="form.type_extension.form.validator" class="Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\FormType" extended-type="Symfony\Component\Form\Extension\Core\Type\FormType"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="form.type_extension.repeated.validator" class="Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="form.type_extension.submit.validator" class="Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension" public="false">
      <tag name="form.type_extension" extended_type="Symfony\Component\Form\Extension\Core\Type\SubmitType" extended-type="Symfony\Component\Form\Extension\Core\Type\SubmitType"/>
    </service>
    <service id="form.type_extension.upload.validator" class="Symfony\Component\Form\Extension\Validator\Type\UploadValidatorExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="translator.data_collector"/>
      <argument>validators</argument>
    </service>
    <service id="form.type_extension.csrf" class="Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="security.csrf.token_manager"/>
      <argument>true</argument>
      <argument>_token</argument>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
      <argument>validators</argument>
      <argument type="service" id="form.server_params"/>
    </service>
    <service id="assets.packages" class="Symfony\Component\Asset\Packages" public="false">
      <argument type="service" id="assets._default_package"/>
      <argument type="collection"/>
    </service>
    <service id="assets.empty_package" class="Symfony\Component\Asset\Package" public="false">
      <argument type="service" id="assets.empty_version_strategy"/>
    </service>
    <service id="assets.context" class="Symfony\Component\Asset\Context\RequestStackContext" public="false">
      <argument type="service" id="request_stack"/>
      <argument></argument>
      <argument>false</argument>
    </service>
    <service id="assets.path_package" class="Symfony\Component\Asset\PathPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.url_package" class="Symfony\Component\Asset\UrlPackage" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="assets.static_version_strategy" class="Symfony\Component\Asset\VersionStrategy\StaticVersionStrategy" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="assets.empty_version_strategy" class="Symfony\Component\Asset\VersionStrategy\EmptyVersionStrategy" public="false"/>
    <service id="assets.json_manifest_version_strategy" class="Symfony\Component\Asset\VersionStrategy\JsonManifestVersionStrategy" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="assets._default_package" class="Symfony\Component\Asset\PathPackage" public="false">
      <argument></argument>
      <argument type="service" id="assets.empty_version_strategy"/>
      <argument type="service" id="assets.context"/>
    </service>
    <service id="validator.builder" class="Symfony\Component\Validator\ValidatorBuilder" public="false">
      <call method="setConstraintValidatorFactory">
        <argument type="service" id="validator.validator_factory"/>
      </call>
      <call method="setTranslator">
        <argument type="service">
          <service class="Symfony\Component\Validator\Util\LegacyTranslatorProxy">
            <argument type="service" id="translator.data_collector" on-invalid="ignore"/>
          </service>
        </argument>
      </call>
      <call method="setTranslationDomain">
        <argument>validators</argument>
      </call>
      <call method="addXmlMappings">
        <argument type="collection">
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/config/validation.xml</argument>
        </argument>
      </call>
      <call method="enableAnnotationMapping">
        <argument type="service" id="annotations.cached_reader"/>
      </call>
      <call method="addMethodMapping">
        <argument>loadValidatorMetadata</argument>
      </call>
      <call method="addObjectInitializers">
        <argument type="collection">
          <argument type="service" id="doctrine.orm.validator_initializer"/>
        </argument>
      </call>
      <call method="addLoader">
        <argument type="service" id="validator.property_info_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="doctrine.orm.default_entity_manager.validator_loader"/>
      </call>
      <factory class="Symfony\Component\Validator\Validation" method="createValidatorBuilder"/>
    </service>
    <service id="validator.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\ValidatorCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="validator.builder"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/validation.php</argument>
    </service>
    <service id="validator.mapping.cache.symfony" class="Symfony\Component\Validator\Mapping\Cache\Psr6Cache" public="false">
      <argument type="service" id="validator.mapping.cache.adapter"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4. Use validator.mapping.cache.adapter instead.</deprecated>
    </service>
    <service id="validator.mapping.cache.adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/validation.php</argument>
      <argument type="service" id="cache.validator"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="validator.validator_factory" class="Symfony\Component\Validator\ContainerConstraintValidatorFactory" public="false">
      <argument type="service" id=".service_locator.Y7gDuDN"/>
    </service>
    <service id="validator.expression" class="Symfony\Component\Validator\Constraints\ExpressionValidator" public="false">
      <tag name="validator.constraint_validator" alias="validator.expression"/>
    </service>
    <service id="validator.email" class="Symfony\Component\Validator\Constraints\EmailValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\EmailValidator"/>
      <argument>html5</argument>
    </service>
    <service id="validator.not_compromised_password" class="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator"/>
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>true</argument>
      <argument>null</argument>
    </service>
    <service id="validator.property_info_loader" class="Symfony\Component\Validator\Mapping\Loader\PropertyInfoLoader" public="false">
      <tag name="validator.auto_mapper"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument type="service" id="property_info"/>
      <argument>null</argument>
    </service>
    <service id="translator.default" class="Symfony\Bundle\FrameworkBundle\Translation\Translator" public="false">
      <tag name="kernel.locale_aware"/>
      <argument type="service" id=".service_locator.V.o0zE7"/>
      <argument type="service" id="translator.formatter.default"/>
      <argument>en</argument>
      <argument type="collection">
        <argument key="translation.loader.php" type="collection">
          <argument>php</argument>
        </argument>
        <argument key="translation.loader.yml" type="collection">
          <argument>yaml</argument>
          <argument>yml</argument>
        </argument>
        <argument key="translation.loader.xliff" type="collection">
          <argument>xlf</argument>
          <argument>xliff</argument>
        </argument>
        <argument key="translation.loader.po" type="collection">
          <argument>po</argument>
        </argument>
        <argument key="translation.loader.mo" type="collection">
          <argument>mo</argument>
        </argument>
        <argument key="translation.loader.qt" type="collection">
          <argument>ts</argument>
        </argument>
        <argument key="translation.loader.csv" type="collection">
          <argument>csv</argument>
        </argument>
        <argument key="translation.loader.res" type="collection">
          <argument>res</argument>
        </argument>
        <argument key="translation.loader.dat" type="collection">
          <argument>dat</argument>
        </argument>
        <argument key="translation.loader.ini" type="collection">
          <argument>ini</argument>
        </argument>
        <argument key="translation.loader.json" type="collection">
          <argument>json</argument>
        </argument>
      </argument>
      <argument type="collection">
        <argument key="cache_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/translations</argument>
        <argument key="debug">true</argument>
        <argument key="resource_files" type="collection">
          <argument key="af" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.af.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.af.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.af.xlf</argument>
          </argument>
          <argument key="ar" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.ar.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.ar.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ar.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.ar.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.ar.xlf</argument>
          </argument>
          <argument key="az" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.az.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.az.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.az.xlf</argument>
          </argument>
          <argument key="be" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.be.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.be.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.be.xlf</argument>
          </argument>
          <argument key="bg" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.bg.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.bg.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.bg.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.bg.yaml</argument>
          </argument>
          <argument key="bs" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.bs.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.bs.xlf</argument>
          </argument>
          <argument key="ca" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.ca.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.ca.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ca.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.ca.yaml</argument>
          </argument>
          <argument key="cs" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.cs.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.cs.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.cs.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.cs.yaml</argument>
          </argument>
          <argument key="cy" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.cy.xlf</argument>
          </argument>
          <argument key="da" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.da.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.da.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.da.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.da.php</argument>
          </argument>
          <argument key="de" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.de.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.de.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.de.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.de.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.de.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.de.xlf</argument>
          </argument>
          <argument key="el" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.el.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.el.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.el.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.el.php</argument>
          </argument>
          <argument key="en" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.en.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.en.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.en.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.en.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.en.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.en.xlf</argument>
          </argument>
          <argument key="es" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.es.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.es.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.es.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.es.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.es.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.es.xlf</argument>
          </argument>
          <argument key="et" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.et.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.et.xlf</argument>
          </argument>
          <argument key="eu" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.eu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.eu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.eu.php</argument>
          </argument>
          <argument key="fa" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.fa.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.fa.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fa.php</argument>
          </argument>
          <argument key="fi" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.fi.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.fi.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fi.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.fi.yaml</argument>
          </argument>
          <argument key="fr" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.fr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.fr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.fr.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.fr.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.fr.xlf</argument>
          </argument>
          <argument key="gl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.gl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.gl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.gl.php</argument>
          </argument>
          <argument key="he" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.he.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.he.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.he.xlf</argument>
          </argument>
          <argument key="hr" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.hr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.hr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.hr.php</argument>
          </argument>
          <argument key="hu" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.hu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.hu.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.hu.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.hu.yaml</argument>
          </argument>
          <argument key="hy" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.hy.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.hy.xlf</argument>
          </argument>
          <argument key="id" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.id.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.id.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.id.xlf</argument>
          </argument>
          <argument key="it" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.it.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.it.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.it.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.it.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.it.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.it.xlf</argument>
          </argument>
          <argument key="ja" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.ja.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.ja.xlf</argument>
          </argument>
          <argument key="lb" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.lb.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.lb.xlf</argument>
          </argument>
          <argument key="lt" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.lt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.lt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.lt.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.lt.yaml</argument>
          </argument>
          <argument key="lv" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.lv.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.lv.xlf</argument>
          </argument>
          <argument key="mn" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.mn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.mn.xlf</argument>
          </argument>
          <argument key="nb" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.nb.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.nb.xlf</argument>
          </argument>
          <argument key="nl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.nl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.nl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.nl.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.nl.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle+intl-icu.nl.xlf</argument>
          </argument>
          <argument key="nn" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.nn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.nn.xlf</argument>
          </argument>
          <argument key="no" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.no.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.no.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.no.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.no.php</argument>
          </argument>
          <argument key="pl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.pl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.pl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pl.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.pl.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.pl.xlf</argument>
          </argument>
          <argument key="pt" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.pt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.pt.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pt.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.pt.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.pt.xlf</argument>
          </argument>
          <argument key="pt_BR" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.pt_BR.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.pt_BR.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.pt_BR.php</argument>
          </argument>
          <argument key="ro" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.ro.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.ro.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ro.php</argument>
          </argument>
          <argument key="ru" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.ru.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.ru.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.ru.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.ru.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.ru.xlf</argument>
          </argument>
          <argument key="sk" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sk.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sk.xlf</argument>
          </argument>
          <argument key="sl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sl.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.sl.yaml</argument>
          </argument>
          <argument key="sq" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sq.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sq.xlf</argument>
          </argument>
          <argument key="sr_Cyrl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sr_Cyrl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sr_Cyrl.xlf</argument>
          </argument>
          <argument key="sr_Latn" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sr_Latn.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sr_Latn.xlf</argument>
          </argument>
          <argument key="sv" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.sv.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.sv.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sv.php</argument>
          </argument>
          <argument key="th" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.th.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.th.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.th.xlf</argument>
          </argument>
          <argument key="tl" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.tl.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.tl.xlf</argument>
          </argument>
          <argument key="tr" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.tr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.tr.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.tr.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.tr.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.tr.xlf</argument>
          </argument>
          <argument key="uk" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.uk.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.uk.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.uk.php</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.uk.yaml</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.uk.xlf</argument>
          </argument>
          <argument key="uz" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.uz.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.uz.xlf</argument>
          </argument>
          <argument key="vi" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.vi.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.vi.xlf</argument>
          </argument>
          <argument key="zh_CN" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.zh_CN.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.zh_CN.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.zh_CN.php</argument>
          </argument>
          <argument key="zh_TW" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations\validators.zh_TW.xlf</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations\security.zh_TW.xlf</argument>
          </argument>
          <argument key="sr_RS" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations\EasyAdminBundle.sr_RS.php</argument>
          </argument>
          <argument key="vn" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations\messages.vn.yaml</argument>
          </argument>
          <argument key="sr" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations\VerifyEmailBundle.sr.xlf</argument>
          </argument>
        </argument>
        <argument key="scanned_directories" type="collection">
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\framework-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/FrameworkBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-server-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/WebServerBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineMigrationsBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\maker-bundle\src/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/MakerBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SecurityBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-fixtures-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineFixturesBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/TwigBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-profiler-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/WebProfilerBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/EasyAdminBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\nelmio\cors-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/NelmioCorsBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\api-platform\core\src\Bridge\Symfony\Bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/ApiPlatformBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/VichUploaderBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\friendsofsymfony\rest-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/FOSRestBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\stof\doctrine-extensions-bundle\src/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/StofDoctrineExtensionsBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\lexik\jwt-authentication-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/LexikJWTAuthenticationBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/GesdinetJWTRefreshTokenBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\swiftmailer-bundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SwiftmailerBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SymfonyCastsVerifyEmailBundle/translations</argument>
          <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/translations</argument>
        </argument>
        <argument key="cache_vary" type="collection">
          <argument key="scanned_directories" type="collection">
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\validator/Resources/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\form/Resources/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-core/Resources/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfonycasts\verify-email-bundle\src/Resources/translations</argument>
            <argument>translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\framework-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/FrameworkBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-server-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/WebServerBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-migrations-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineMigrationsBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\maker-bundle\src/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/MakerBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SecurityBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-fixtures-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/DoctrineFixturesBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/TwigBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-profiler-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/WebProfilerBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/EasyAdminBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\nelmio\cors-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/NelmioCorsBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\api-platform\core\src\Bridge\Symfony\Bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/ApiPlatformBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/VichUploaderBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\friendsofsymfony\rest-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/FOSRestBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\stof\doctrine-extensions-bundle\src/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/StofDoctrineExtensionsBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\lexik\jwt-authentication-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/LexikJWTAuthenticationBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/GesdinetJWTRefreshTokenBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\swiftmailer-bundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SwiftmailerBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/SymfonyCastsVerifyEmailBundle/translations</argument>
            <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src/Resources/translations</argument>
          </argument>
        </argument>
      </argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
      <call method="setFallbackLocales">
        <argument type="collection">
          <argument>en</argument>
        </argument>
      </call>
    </service>
    <service id="translator.logging" class="Symfony\Component\Translation\LoggingTranslator" public="false">
      <tag name="monolog.logger" channel="translation"/>
      <argument type="service" id="translator.logging.inner"/>
      <argument type="service" id="logger"/>
    </service>
    <service id="translator.formatter.default" class="Symfony\Component\Translation\Formatter\MessageFormatter" public="false">
      <argument type="service" id="identity_translator"/>
    </service>
    <service id="translation.loader.php" class="Symfony\Component\Translation\Loader\PhpFileLoader" public="false">
      <tag name="translation.loader" alias="php"/>
    </service>
    <service id="translation.loader.yml" class="Symfony\Component\Translation\Loader\YamlFileLoader" public="false">
      <tag name="translation.loader" alias="yaml" legacy_alias="yml" legacy-alias="yml"/>
    </service>
    <service id="translation.loader.xliff" class="Symfony\Component\Translation\Loader\XliffFileLoader" public="false">
      <tag name="translation.loader" alias="xlf" legacy_alias="xliff" legacy-alias="xliff"/>
    </service>
    <service id="translation.loader.po" class="Symfony\Component\Translation\Loader\PoFileLoader" public="false">
      <tag name="translation.loader" alias="po"/>
    </service>
    <service id="translation.loader.mo" class="Symfony\Component\Translation\Loader\MoFileLoader" public="false">
      <tag name="translation.loader" alias="mo"/>
    </service>
    <service id="translation.loader.qt" class="Symfony\Component\Translation\Loader\QtFileLoader" public="false">
      <tag name="translation.loader" alias="ts"/>
    </service>
    <service id="translation.loader.csv" class="Symfony\Component\Translation\Loader\CsvFileLoader" public="false">
      <tag name="translation.loader" alias="csv"/>
    </service>
    <service id="translation.loader.res" class="Symfony\Component\Translation\Loader\IcuResFileLoader" public="false">
      <tag name="translation.loader" alias="res"/>
    </service>
    <service id="translation.loader.dat" class="Symfony\Component\Translation\Loader\IcuDatFileLoader" public="false">
      <tag name="translation.loader" alias="dat"/>
    </service>
    <service id="translation.loader.ini" class="Symfony\Component\Translation\Loader\IniFileLoader" public="false">
      <tag name="translation.loader" alias="ini"/>
    </service>
    <service id="translation.loader.json" class="Symfony\Component\Translation\Loader\JsonFileLoader" public="false">
      <tag name="translation.loader" alias="json"/>
    </service>
    <service id="translation.dumper.php" class="Symfony\Component\Translation\Dumper\PhpFileDumper" public="false">
      <tag name="translation.dumper" alias="php"/>
    </service>
    <service id="translation.dumper.xliff" class="Symfony\Component\Translation\Dumper\XliffFileDumper" public="false">
      <tag name="translation.dumper" alias="xlf"/>
    </service>
    <service id="translation.dumper.po" class="Symfony\Component\Translation\Dumper\PoFileDumper" public="false">
      <tag name="translation.dumper" alias="po"/>
    </service>
    <service id="translation.dumper.mo" class="Symfony\Component\Translation\Dumper\MoFileDumper" public="false">
      <tag name="translation.dumper" alias="mo"/>
    </service>
    <service id="translation.dumper.yml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yml"/>
    </service>
    <service id="translation.dumper.yaml" class="Symfony\Component\Translation\Dumper\YamlFileDumper" public="false">
      <tag name="translation.dumper" alias="yaml"/>
      <argument>yaml</argument>
    </service>
    <service id="translation.dumper.qt" class="Symfony\Component\Translation\Dumper\QtFileDumper" public="false">
      <tag name="translation.dumper" alias="ts"/>
    </service>
    <service id="translation.dumper.csv" class="Symfony\Component\Translation\Dumper\CsvFileDumper" public="false">
      <tag name="translation.dumper" alias="csv"/>
    </service>
    <service id="translation.dumper.ini" class="Symfony\Component\Translation\Dumper\IniFileDumper" public="false">
      <tag name="translation.dumper" alias="ini"/>
    </service>
    <service id="translation.dumper.json" class="Symfony\Component\Translation\Dumper\JsonFileDumper" public="false">
      <tag name="translation.dumper" alias="json"/>
    </service>
    <service id="translation.dumper.res" class="Symfony\Component\Translation\Dumper\IcuResFileDumper" public="false">
      <tag name="translation.dumper" alias="res"/>
    </service>
    <service id="translation.extractor.php" class="Symfony\Component\Translation\Extractor\PhpExtractor" public="false">
      <tag name="translation.extractor" alias="php"/>
    </service>
    <service id="translation.reader" class="Symfony\Component\Translation\Reader\TranslationReader" public="false">
      <call method="addLoader">
        <argument>php</argument>
        <argument type="service" id="translation.loader.php"/>
      </call>
      <call method="addLoader">
        <argument>yaml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>yml</argument>
        <argument type="service" id="translation.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument>xlf</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>xliff</argument>
        <argument type="service" id="translation.loader.xliff"/>
      </call>
      <call method="addLoader">
        <argument>po</argument>
        <argument type="service" id="translation.loader.po"/>
      </call>
      <call method="addLoader">
        <argument>mo</argument>
        <argument type="service" id="translation.loader.mo"/>
      </call>
      <call method="addLoader">
        <argument>ts</argument>
        <argument type="service" id="translation.loader.qt"/>
      </call>
      <call method="addLoader">
        <argument>csv</argument>
        <argument type="service" id="translation.loader.csv"/>
      </call>
      <call method="addLoader">
        <argument>res</argument>
        <argument type="service" id="translation.loader.res"/>
      </call>
      <call method="addLoader">
        <argument>dat</argument>
        <argument type="service" id="translation.loader.dat"/>
      </call>
      <call method="addLoader">
        <argument>ini</argument>
        <argument type="service" id="translation.loader.ini"/>
      </call>
      <call method="addLoader">
        <argument>json</argument>
        <argument type="service" id="translation.loader.json"/>
      </call>
    </service>
    <service id="translation.extractor" class="Symfony\Component\Translation\Extractor\ChainExtractor" public="false">
      <call method="addExtractor">
        <argument>php</argument>
        <argument type="service" id="translation.extractor.php"/>
      </call>
      <call method="addExtractor">
        <argument>twig</argument>
        <argument type="service" id="twig.translation.extractor"/>
      </call>
    </service>
    <service id="translation.writer" class="Symfony\Component\Translation\Writer\TranslationWriter" public="false">
      <call method="addDumper">
        <argument>php</argument>
        <argument type="service" id="translation.dumper.php"/>
      </call>
      <call method="addDumper">
        <argument>xlf</argument>
        <argument type="service" id="translation.dumper.xliff"/>
      </call>
      <call method="addDumper">
        <argument>po</argument>
        <argument type="service" id="translation.dumper.po"/>
      </call>
      <call method="addDumper">
        <argument>mo</argument>
        <argument type="service" id="translation.dumper.mo"/>
      </call>
      <call method="addDumper">
        <argument>yml</argument>
        <argument type="service" id="translation.dumper.yml"/>
      </call>
      <call method="addDumper">
        <argument>yaml</argument>
        <argument type="service" id="translation.dumper.yaml"/>
      </call>
      <call method="addDumper">
        <argument>ts</argument>
        <argument type="service" id="translation.dumper.qt"/>
      </call>
      <call method="addDumper">
        <argument>csv</argument>
        <argument type="service" id="translation.dumper.csv"/>
      </call>
      <call method="addDumper">
        <argument>ini</argument>
        <argument type="service" id="translation.dumper.ini"/>
      </call>
      <call method="addDumper">
        <argument>json</argument>
        <argument type="service" id="translation.dumper.json"/>
      </call>
      <call method="addDumper">
        <argument>res</argument>
        <argument type="service" id="translation.dumper.res"/>
      </call>
    </service>
    <service id="translation.warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\TranslationsCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="translator"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.XSes1R5.translation.warmer"/>
    </service>
    <service id="profiler" class="Symfony\Component\HttpKernel\Profiler\Profiler" public="true">
      <tag name="monolog.logger" channel="profiler"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="profiler.storage"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
      <call method="add">
        <argument type="service" id="data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="api_platform.data_collector.request"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.time"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.memory"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.validator"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.ajax"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.form"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.exception"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.logger"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.events"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.router"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.cache"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.translation"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.security"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.twig"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.doctrine"/>
      </call>
      <call method="add">
        <argument type="service" id="swiftmailer.data_collector"/>
      </call>
      <call method="add">
        <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector"/>
      </call>
      <call method="add">
        <argument type="service" id="Vich\UploaderBundle\DataCollector\MappingCollector"/>
      </call>
      <call method="add">
        <argument type="service" id="data_collector.config"/>
      </call>
    </service>
    <service id="profiler.storage" class="Symfony\Component\HttpKernel\Profiler\FileProfilerStorage" public="false">
      <argument>file:C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/profiler</argument>
    </service>
    <service id="profiler_listener" class="Symfony\Component\HttpKernel\EventListener\ProfilerListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="profiler"/>
      <argument type="service" id="request_stack"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>false</argument>
    </service>
    <service id="data_collector.config" class="Symfony\Component\HttpKernel\DataCollector\ConfigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/config.html.twig" id="config" priority="-255"/>
      <call method="setKernel">
        <argument type="service" id="kernel" on-invalid="ignore"/>
      </call>
    </service>
    <service id="data_collector.request" class="Symfony\Component\HttpKernel\DataCollector\RequestDataCollector" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="data_collector" template="@WebProfiler/Collector/request.html.twig" id="request" priority="335"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.ajax" class="Symfony\Component\HttpKernel\DataCollector\AjaxDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/ajax.html.twig" id="ajax" priority="315"/>
    </service>
    <service id="data_collector.exception" class="Symfony\Component\HttpKernel\DataCollector\ExceptionDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/exception.html.twig" id="exception" priority="305"/>
    </service>
    <service id="data_collector.events" class="Symfony\Component\HttpKernel\DataCollector\EventDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/events.html.twig" id="events" priority="290"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="ignore"/>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.logger" class="Symfony\Component\HttpKernel\DataCollector\LoggerDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/logger.html.twig" id="logger" priority="300"/>
      <tag name="monolog.logger" channel="profiler"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/srcApp_KernelDevDebugContainer</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
    </service>
    <service id="data_collector.time" class="Symfony\Component\HttpKernel\DataCollector\TimeDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/time.html.twig" id="time" priority="330"/>
      <argument type="service" id="kernel" on-invalid="ignore"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
    </service>
    <service id="data_collector.memory" class="Symfony\Component\HttpKernel\DataCollector\MemoryDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/memory.html.twig" id="memory" priority="325"/>
    </service>
    <service id="data_collector.router" class="Symfony\Bundle\FrameworkBundle\DataCollector\RouterDataCollector" public="false">
      <tag name="kernel.event_listener" event="kernel.controller" method="onKernelController"/>
      <tag name="data_collector" template="@WebProfiler/Collector/router.html.twig" id="router" priority="285"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="data_collector.cache" class="Symfony\Component\Cache\DataCollector\CacheDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/cache.html.twig" id="cache" priority="275"/>
      <call method="addInstance">
        <argument>cache.app</argument>
        <argument type="service" id="cache.app"/>
      </call>
      <call method="addInstance">
        <argument>cache.system</argument>
        <argument type="service" id="cache.system"/>
      </call>
      <call method="addInstance">
        <argument>cache.validator</argument>
        <argument type="service" id="cache.validator"/>
      </call>
      <call method="addInstance">
        <argument>cache.serializer</argument>
        <argument type="service" id="cache.serializer"/>
      </call>
      <call method="addInstance">
        <argument>cache.annotations</argument>
        <argument type="service" id="cache.annotations"/>
      </call>
      <call method="addInstance">
        <argument>cache.property_info</argument>
        <argument type="service" id="cache.property_info"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.metadata</argument>
        <argument type="service" id="cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.result</argument>
        <argument type="service" id="cache.doctrine.orm.default.result"/>
      </call>
      <call method="addInstance">
        <argument>cache.doctrine.orm.default.query</argument>
        <argument type="service" id="cache.doctrine.orm.default.query"/>
      </call>
      <call method="addInstance">
        <argument>cache.security_expression_language</argument>
        <argument type="service" id="cache.security_expression_language"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument type="service" id="api_platform.cache.route_name_resolver"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.resource</argument>
        <argument type="service" id="api_platform.cache.metadata.resource"/>
      </call>
      <call method="addInstance">
        <argument>api_platform.cache.metadata.property</argument>
        <argument type="service" id="api_platform.cache.metadata.property"/>
      </call>
    </service>
    <service id=".1_ResolvedFormTypeFactory~yvkPhs3" class="Symfony\Component\Form\ResolvedFormTypeFactory" public="false"/>
    <service id="form.type_extension.form.data_collector" class="Symfony\Component\Form\Extension\DataCollector\Type\DataCollectorTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="data_collector.form"/>
    </service>
    <service id="data_collector.form.extractor" class="Symfony\Component\Form\Extension\DataCollector\FormDataExtractor" public="false"/>
    <service id="data_collector.form" class="Symfony\Component\Form\Extension\DataCollector\FormDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/form.html.twig" id="form" priority="310"/>
      <argument type="service" id="data_collector.form.extractor"/>
    </service>
    <service id="debug.validator" class="Symfony\Component\Validator\Validator\TraceableValidator" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.validator.inner"/>
    </service>
    <service id="data_collector.validator" class="Symfony\Component\Validator\DataCollector\ValidatorDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/validator.html.twig" id="validator" priority="320"/>
      <argument type="service" id="debug.validator"/>
    </service>
    <service id="translator.data_collector" class="Symfony\Component\Translation\DataCollectorTranslator" public="false">
      <argument type="service" id="translator.default"/>
    </service>
    <service id="data_collector.translation" class="Symfony\Component\Translation\DataCollector\TranslationDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/translation.html.twig" id="translation" priority="275"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="debug.debug_handlers_listener" class="Symfony\Component\HttpKernel\EventListener\DebugHandlersListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="php"/>
      <tag name="container.hot_path"/>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>null</argument>
      <argument>-1</argument>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument>true</argument>
    </service>
    <service id="debug.file_link_formatter" class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" public="false">
      <argument>null</argument>
      <argument type="service" id="request_stack" on-invalid="ignore"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument type="service_closure" id="debug.file_link_formatter.url_format"/>
    </service>
    <service id="debug.stopwatch" class="Symfony\Component\Stopwatch\Stopwatch">
      <tag name="kernel.reset" method="reset"/>
      <argument>true</argument>
    </service>
    <service id="debug.event_dispatcher" class="Symfony\Component\HttpKernel\Debug\TraceableEventDispatcher" public="false">
      <tag name="container.hot_path"/>
      <tag name="monolog.logger" channel="event"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="debug.event_dispatcher.inner"/>
      <argument type="service" id="debug.stopwatch"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="request_stack" on-invalid="null"/>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Listeners\AuthenticationSuccessListener"/>
          <argument>onAuthenticationSuccess</argument>
        </argument>
        <argument>-2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.router"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>250</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cors_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="nelmio_cors.cacheable_response_vary_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.add_format"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>7</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.read"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>4</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.write"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.request.deserialize"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>2</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.serialize"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.respond"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.exception.validation"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.exception"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-96</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.swagger.listener.ui"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.hydra.listener.response.add_link_header"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.http_cache.listener.response.configure"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1</argument>
      </call>
      <call method="addListener">
        <argument>kernel.view</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.validate"/>
          <argument>onKernelView</argument>
        </argument>
        <argument>64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.listener.view.validate_query_parameters"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurity</argument>
        </argument>
        <argument>3</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="api_platform.security.listener.request.deny_access"/>
          <argument>onSecurityPostDenormalize</argument>
        </argument>
        <argument>1</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service_closure" id="gesdinet.jwtrefreshtoken.send_token"/>
          <argument>attachRefreshToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>lexik_jwt_authentication.on_authentication_success</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Listeners\RefreshTokenListener"/>
          <argument>setRefreshToken</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="App\Listeners\RequestListener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="streamed_response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>setDefaultLocale</argument>
        </argument>
        <argument>100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>16</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="validate_request_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>256</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id=".legacy_resolve_controller_name_subscriber"/>
          <argument>resolveControllerName</argument>
        </argument>
        <argument>24</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="disallow_search_engine_index_response_listener"/>
          <argument>onResponse</argument>
        </argument>
        <argument>-255</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller_arguments</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onControllerArguments</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>logKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="exception_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>15</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="locale_aware_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>-15</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="console.suggest_missing_package_subscriber"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-1000</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="session_listener"/>
          <argument>onFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-100</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="profiler_listener"/>
          <argument>onKernelTerminate</argument>
        </argument>
        <argument>-1024</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="data_collector.request"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>console.command</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.debug_handlers_listener"/>
          <argument>configure</argument>
        </argument>
        <argument>2048</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>32</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="router_listener"/>
          <argument>onKernelException</argument>
        </argument>
        <argument>-64</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_link.add_link_header_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleError</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="maker.console_error_listener"/>
          <argument>onConsoleTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="security.rememberme.response_listener"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>debug.security.authorization.vote</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.voter.vote_listener"/>
          <argument>onVoterVote</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>configureLogoutUrlGenerator</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>8</argument>
      </call>
      <call method="addListener">
        <argument>kernel.finish_request</argument>
        <argument type="collection">
          <argument type="service_closure" id="debug.security.firewall"/>
          <argument>onKernelFinishRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.response</argument>
        <argument type="collection">
          <argument type="service_closure" id="web_profiler.debug_toolbar"/>
          <argument>onKernelResponse</argument>
        </argument>
        <argument>-128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminRouterSubscriber"/>
          <argument>handleLegacyEaContext</argument>
        </argument>
        <argument>10</argument>
      </call>
      <call method="addListener">
        <argument>kernel.request</argument>
        <argument type="collection">
          <argument type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminRouterSubscriber"/>
          <argument>onKernelRequest</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.controller</argument>
        <argument type="collection">
          <argument type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminRouterSubscriber"/>
          <argument>onKernelController</argument>
        </argument>
        <argument>128</argument>
      </call>
      <call method="addListener">
        <argument>kernel.exception</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>kernel.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.error</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onException</argument>
        </argument>
        <argument>0</argument>
      </call>
      <call method="addListener">
        <argument>console.terminate</argument>
        <argument type="collection">
          <argument type="service_closure" id="swiftmailer.email_sender.listener"/>
          <argument>onTerminate</argument>
        </argument>
        <argument>0</argument>
      </call>
    </service>
    <service id="debug.controller_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableControllerResolver" public="false">
      <tag name="monolog.logger" channel="request"/>
      <argument type="service" id="debug.controller_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver" class="Symfony\Component\HttpKernel\Controller\TraceableArgumentResolver" public="false">
      <argument type="service" id="debug.argument_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".1_LegacyRouteLoaderContainer~bKJwObg" class="Symfony\Bundle\FrameworkBundle\Routing\LegacyRouteLoaderContainer" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id=".service_locator.XwZNkPh"/>
    </service>
    <service id="routing.resolver" class="Symfony\Component\Config\Loader\LoaderResolver" public="false">
      <call method="addLoader">
        <argument type="service" id="routing.loader.xml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.yml"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.php"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.glob"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.container"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="api_platform.route_loader"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.directory"/>
      </call>
      <call method="addLoader">
        <argument type="service" id="routing.loader.annotation.file"/>
      </call>
    </service>
    <service id="routing.loader.xml" class="Symfony\Component\Routing\Loader\XmlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.yml" class="Symfony\Component\Routing\Loader\YamlFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.php" class="Symfony\Component\Routing\Loader\PhpFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.glob" class="Symfony\Component\Routing\Loader\GlobFileLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.directory" class="Symfony\Component\Routing\Loader\DirectoryLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="file_locator"/>
    </service>
    <service id="routing.loader.service" class="Symfony\Component\Routing\Loader\DependencyInjection\ServiceRouterLoader" public="false">
      <argument type="service" id="service_container"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use "routing.loader.container" instead.</deprecated>
    </service>
    <service id="routing.loader.container" class="Symfony\Component\Routing\Loader\ContainerLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id=".1_LegacyRouteLoaderContainer~bKJwObg"/>
    </service>
    <service id="routing.loader" class="Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader" public="true">
      <argument type="service" id="routing.resolver"/>
      <argument type="collection"/>
      <argument type="collection">
        <argument key="utf8">true</argument>
      </argument>
    </service>
    <service id="router.default" class="Symfony\Bundle\FrameworkBundle\Routing\Router" public="false">
      <tag name="monolog.logger" channel="router"/>
      <tag name="container.service_subscriber" id="routing.loader"/>
      <argument type="service" id=".service_locator.YrZrpzt.router.default"/>
      <argument>kernel::loadRoutes</argument>
      <argument type="collection">
        <argument key="cache_dir">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev</argument>
        <argument key="debug">true</argument>
        <argument key="generator_class">Symfony\Component\Routing\Generator\CompiledUrlGenerator</argument>
        <argument key="generator_dumper_class">Symfony\Component\Routing\Generator\Dumper\CompiledUrlGeneratorDumper</argument>
        <argument key="matcher_class">Symfony\Bundle\FrameworkBundle\Routing\RedirectableCompiledUrlMatcher</argument>
        <argument key="matcher_dumper_class">Symfony\Component\Routing\Matcher\Dumper\CompiledUrlMatcherDumper</argument>
        <argument key="strict_requirements">true</argument>
        <argument key="resource_type">service</argument>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="parameter_bag" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>en</argument>
      <call method="setConfigCacheFactory">
        <argument type="service" id="config_cache_factory"/>
      </call>
    </service>
    <service id="router.request_context" class="Symfony\Component\Routing\RequestContext" public="false">
      <argument></argument>
      <argument>GET</argument>
      <argument>localhost</argument>
      <argument>http</argument>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="router.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer" public="false">
      <tag name="container.service_subscriber" id="router"/>
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id=".service_locator.m90YCjy.router.cache_warmer"/>
    </service>
    <service id="router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="monolog.logger" channel="request"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="router.request_context" on-invalid="ignore"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument>true</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" class="Symfony\Bundle\FrameworkBundle\Controller\RedirectController" public="true">
      <argument type="service" id="router.default"/>
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" class="Symfony\Bundle\FrameworkBundle\Controller\TemplateController" public="true">
      <argument type="service" id="twig" on-invalid="ignore"/>
      <argument>null</argument>
    </service>
    <service id="routing.loader.annotation" class="Symfony\Bundle\FrameworkBundle\Routing\AnnotatedRouteControllerLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="routing.loader.annotation.directory" class="Symfony\Component\Routing\Loader\AnnotationDirectoryLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id="routing.loader.annotation.file" class="Symfony\Component\Routing\Loader\AnnotationFileLoader" public="false">
      <tag name="routing.loader" priority="-10"/>
      <argument type="service" id="file_locator"/>
      <argument type="service" id="routing.loader.annotation"/>
    </service>
    <service id=".2_ArrayAdapter~aGFiqW8" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id=".1_DoctrineProvider~aGFiqW8" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id=".2_ArrayAdapter~aGFiqW8"/>
    </service>
    <service id="annotations.reader" class="Doctrine\Common\Annotations\AnnotationReader" public="false">
      <call method="addGlobalIgnoredName">
        <argument>required</argument>
        <argument type="service" id="annotations.dummy_registry"/>
      </call>
    </service>
    <service id="annotations.dummy_registry" class="Doctrine\Common\Annotations\AnnotationRegistry" public="false">
      <call method="registerUniqueLoader">
        <argument>class_exists</argument>
      </call>
    </service>
    <service id="annotations.cached_reader" class="Doctrine\Common\Annotations\PsrCachedReader" public="false">
      <tag name="annotations.cached_reader"/>
      <argument type="service" id="annotations.reader"/>
      <argument type="service">
        <service class="Symfony\Component\Cache\Adapter\ArrayAdapter"/>
      </argument>
      <argument>true</argument>
      <property name="cacheProviderBackup" type="service_closure" id="annotations.cache_adapter"/>
    </service>
    <service id="annotations.filesystem_cache_adapter" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument></argument>
      <argument>0</argument>
      <argument></argument>
    </service>
    <service id="annotations.filesystem_cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <argument type="service" id="annotations.filesystem_cache_adapter"/>
    </service>
    <service id="annotations.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\AnnotationsCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="annotations.reader"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/annotations.php</argument>
      <argument>#^Symfony\\(?:Component\\HttpKernel\\|Bundle\\FrameworkBundle\\Controller\\(?!.*Controller$))#</argument>
      <argument>true</argument>
    </service>
    <service id="annotations.cache_adapter" class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" public="false">
      <tag name="container.hot_path"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/annotations.php</argument>
      <argument type="service" id="cache.annotations"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="annotations.cache" class="Symfony\Component\Cache\DoctrineProvider" public="false">
      <tag name="container.hot_path"/>
      <argument type="service" id="annotations.cache_adapter"/>
    </service>
    <service id="property_accessor" class="Symfony\Component\PropertyAccess\PropertyAccessor" public="false">
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="cache.property_access" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="secrets.vault" class="Symfony\Bundle\FrameworkBundle\Secrets\SodiumVault">
      <tag name="container.env_var_loader"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/config/secrets/dev</argument>
      <argument>%env(base64:default::SYMFONY_DECRYPTION_SECRET)%</argument>
    </service>
    <service id="secrets.local_vault" class="Symfony\Bundle\FrameworkBundle\Secrets\DotenvVault">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/.env.dev.local</argument>
    </service>
    <service id=".2_~JNIrVFq" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\HtmlErrorRenderer" method="isDebug"/>
    </service>
    <service id=".1_~JNIrVFq" public="false">
      <argument type="service" id="request_stack"/>
      <factory class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" method="getPreferredFormat"/>
    </service>
    <service id="serializer" class="Symfony\Component\Serializer\Serializer" public="true">
      <argument type="collection">
        <argument type="service" id="fos_rest.serializer.form_error_normalizer"/>
        <argument type="service" id="api_platform.openapi.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.problem.normalizer.constraint_violation_list"/>
        <argument type="service" id="api_platform.swagger.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.openapi.normalizer.api_gateway"/>
        <argument type="service" id="api_platform.hydra.normalizer.documentation"/>
        <argument type="service" id="api_platform.hydra.normalizer.entrypoint"/>
        <argument type="service" id="api_platform.hydra.normalizer.error"/>
        <argument type="service" id="api_platform.problem.normalizer.error"/>
        <argument type="service" id="serializer.normalizer.problem"/>
        <argument type="service" id="api_platform.jsonld.normalizer.item"/>
        <argument type="service" id="api_platform.serializer.normalizer.item"/>
        <argument type="service" id="serializer.normalizer.json_serializable"/>
        <argument type="service" id="serializer.normalizer.datetime"/>
        <argument type="service" id="serializer.normalizer.constraint_violation_list"/>
        <argument type="service" id="serializer.normalizer.datetimezone"/>
        <argument type="service" id="serializer.normalizer.dateinterval"/>
        <argument type="service" id="serializer.normalizer.data_uri"/>
        <argument type="service" id="api_platform.hydra.normalizer.collection_filters"/>
        <argument type="service" id="serializer.denormalizer.array"/>
        <argument type="service" id="api_platform.jsonld.normalizer.object"/>
        <argument type="service" id="serializer.normalizer.object"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.xml"/>
        <argument type="service" id="serializer.encoder.json"/>
        <argument type="service" id="serializer.encoder.yaml"/>
        <argument type="service" id="serializer.encoder.csv"/>
        <argument type="service" id="api_platform.jsonld.encoder"/>
        <argument type="service" id="api_platform.problem.encoder"/>
      </argument>
    </service>
    <service id="serializer.mapping.class_discriminator_resolver" class="Symfony\Component\Serializer\Mapping\ClassDiscriminatorFromClassMetadata" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="serializer.normalizer.constraint_violation_list" class="Symfony\Component\Serializer\Normalizer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
    </service>
    <service id="serializer.normalizer.datetimezone" class="Symfony\Component\Serializer\Normalizer\DateTimeZoneNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.dateinterval" class="Symfony\Component\Serializer\Normalizer\DateIntervalNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-915"/>
    </service>
    <service id="serializer.normalizer.data_uri" class="Symfony\Component\Serializer\Normalizer\DataUriNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-920"/>
      <argument type="service" id="mime_types" on-invalid="null"/>
    </service>
    <service id="serializer.normalizer.datetime" class="Symfony\Component\Serializer\Normalizer\DateTimeNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-910"/>
    </service>
    <service id="serializer.normalizer.json_serializable" class="Symfony\Component\Serializer\Normalizer\JsonSerializableNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-900"/>
    </service>
    <service id="serializer.normalizer.problem" class="Symfony\Component\Serializer\Normalizer\ProblemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument>true</argument>
    </service>
    <service id="serializer.normalizer.object" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-1000"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="serializer.name_converter.metadata_aware"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_discriminator_resolver" on-invalid="ignore"/>
      <argument>null</argument>
      <argument type="collection"/>
    </service>
    <service id="serializer.denormalizer.array" class="Symfony\Component\Serializer\Normalizer\ArrayDenormalizer" public="false">
      <tag name="serializer.normalizer" priority="-990"/>
    </service>
    <service id="serializer.mapping.chain_loader" class="Symfony\Component\Serializer\Mapping\Loader\LoaderChain" public="false">
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
    </service>
    <service id="serializer.mapping.class_metadata_factory" class="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactory" public="false">
      <argument type="service" id="serializer.mapping.chain_loader"/>
    </service>
    <service id="serializer.mapping.cache_warmer" class="Symfony\Bundle\FrameworkBundle\CacheWarmer\SerializerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="collection">
        <argument type="service">
          <service class="Symfony\Component\Serializer\Mapping\Loader\AnnotationLoader" public="false">
            <argument type="service" id="annotations.cached_reader"/>
          </service>
        </argument>
      </argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/serialization.php</argument>
    </service>
    <service id="serializer.mapping.cache.symfony" class="Psr\Cache\CacheItemPoolInterface" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/serialization.php</argument>
      <argument type="service" id="cache.serializer"/>
      <factory class="Symfony\Component\Cache\Adapter\PhpArrayAdapter" method="create"/>
    </service>
    <service id="serializer.encoder.xml" class="Symfony\Component\Serializer\Encoder\XmlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.json" class="Symfony\Component\Serializer\Encoder\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.yaml" class="Symfony\Component\Serializer\Encoder\YamlEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.encoder.csv" class="Symfony\Component\Serializer\Encoder\CsvEncoder" public="false">
      <tag name="serializer.encoder"/>
    </service>
    <service id="serializer.name_converter.camel_case_to_snake_case" class="Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter" public="false"/>
    <service id="serializer.name_converter.metadata_aware" class="Symfony\Component\Serializer\NameConverter\MetadataAwareNameConverter" public="false">
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="property_info.serializer_extractor" class="Symfony\Component\PropertyInfo\Extractor\SerializerExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-999"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="error_handler.error_renderer.serializer" class="Symfony\Component\ErrorHandler\ErrorRenderer\SerializerErrorRenderer" public="false">
      <argument type="service" id="serializer"/>
      <argument type="service" id=".1_~JNIrVFq"/>
      <argument type="service" id="twig.error_renderer.html"/>
      <argument type="service" id=".2_~JNIrVFq"/>
    </service>
    <service id="property_info" class="Symfony\Component\PropertyInfo\PropertyInfoExtractor" public="false">
      <argument type="iterator">
        <argument type="service" id="property_info.serializer_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.php_doc_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.php_doc_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="doctrine.orm.default_entity_manager.property_info_extractor"/>
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
      <argument type="iterator">
        <argument type="service" id="property_info.reflection_extractor"/>
      </argument>
    </service>
    <service id="property_info.reflection_extractor" class="Symfony\Component\PropertyInfo\Extractor\ReflectionExtractor" public="false">
      <tag name="property_info.list_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1002"/>
      <tag name="property_info.access_extractor" priority="-1000"/>
      <tag name="property_info.initializable_extractor" priority="-1000"/>
    </service>
    <service id="property_info.php_doc_extractor" class="Symfony\Component\PropertyInfo\Extractor\PhpDocExtractor">
      <tag name="property_info.description_extractor" priority="-1000"/>
      <tag name="property_info.type_extractor" priority="-1001"/>
    </service>
    <service id="web_link.add_link_header_listener" class="Symfony\Component\WebLink\EventListener\AddLinkHeaderListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="mime_types" class="Symfony\Component\Mime\MimeTypes" public="false">
      <call method="setDefault">
        <argument type="service" id="mime_types"/>
      </call>
    </service>
    <service id="web_server.command.server_run" class="Symfony\Bundle\WebServerBundle\Command\ServerRunCommand" public="false">
      <tag name="console.command" command="server:run"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/public</argument>
      <argument>dev</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache</argument>
      <call method="setName">
        <argument>server:run</argument>
      </call>
    </service>
    <service id="web_server.command.server_start" class="Symfony\Bundle\WebServerBundle\Command\ServerStartCommand" public="false">
      <tag name="console.command" command="server:start"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/public</argument>
      <argument>dev</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache</argument>
      <call method="setName">
        <argument>server:start</argument>
      </call>
    </service>
    <service id="web_server.command.server_stop" class="Symfony\Bundle\WebServerBundle\Command\ServerStopCommand" public="false">
      <tag name="console.command" command="server:stop"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache</argument>
      <call method="setName">
        <argument>server:stop</argument>
      </call>
    </service>
    <service id="web_server.command.server_status" class="Symfony\Bundle\WebServerBundle\Command\ServerStatusCommand" public="false">
      <tag name="console.command" command="server:status"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache</argument>
      <call method="setName">
        <argument>server:status</argument>
      </call>
    </service>
    <service id="doctrine.dbal.logger.chain" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.logger.profiling" class="Doctrine\DBAL\Logging\DebugStack" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger.backtrace" class="Doctrine\Bundle\DoctrineBundle\Dbal\Logging\BacktraceLogger" public="false" abstract="true"/>
    <service id="doctrine.dbal.logger" class="Symfony\Bridge\Doctrine\Logger\DbalLogger" public="false">
      <tag name="monolog.logger" channel="doctrine"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="data_collector.doctrine" class="Doctrine\Bundle\DoctrineBundle\DataCollector\DoctrineDataCollector" public="false">
      <tag name="data_collector" template="@Doctrine/Collector/db.html.twig" id="db" priority="250"/>
      <argument type="service" id="doctrine"/>
      <argument>true</argument>
      <call method="addLogger">
        <argument>default</argument>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.connection_factory" class="Doctrine\Bundle\DoctrineBundle\ConnectionFactory">
      <argument type="collection"/>
    </service>
    <service id="doctrine.dbal.connection" class="Doctrine\DBAL\Connection" abstract="true">
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="doctrine.dbal.connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false" abstract="true">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.dbal.connection.configuration" class="Doctrine\DBAL\Configuration" public="false" abstract="true"/>
    <service id="doctrine" class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument>%doctrine.connections%</argument>
      <argument>%doctrine.entity_managers%</argument>
      <argument>default</argument>
      <argument>default</argument>
    </service>
    <service id="doctrine.twig.doctrine_extension" class="Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="doctrine.dbal.schema_asset_filter_manager" class="Doctrine\Bundle\DoctrineBundle\Dbal\SchemaAssetsFilterManager" public="false" abstract="true"/>
    <service id="doctrine.dbal.well_known_schema_asset_filter" class="Doctrine\Bundle\DoctrineBundle\Dbal\BlacklistSchemaAssetFilter" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.database_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\CreateDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:create"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:create</argument>
      </call>
    </service>
    <service id="doctrine.database_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\DropDatabaseDoctrineCommand">
      <tag name="console.command" command="doctrine:database:drop"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>doctrine:database:drop</argument>
      </call>
    </service>
    <service id="doctrine.query_sql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunSqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:sql"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>doctrine:query:sql</argument>
      </call>
    </service>
    <service id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" class="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand">
      <tag name="console.command" command="dbal:run-sql"/>
      <argument type="service" id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" on-invalid="null"/>
      <call method="setName">
        <argument>dbal:run-sql</argument>
      </call>
    </service>
    <service id="doctrine.database_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ImportDoctrineCommand">
      <tag name="console.command" command="doctrine:database:import"/>
      <call method="setName">
        <argument>doctrine:database:import</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection.configuration" class="Doctrine\DBAL\Configuration" public="false">
      <call method="setSQLLogger">
        <argument type="service" id="doctrine.dbal.logger.chain.default"/>
      </call>
    </service>
    <service id="doctrine.dbal.logger.profiling.default" class="Doctrine\DBAL\Logging\DebugStack" public="false"/>
    <service id="doctrine.dbal.logger.chain.default" class="Doctrine\DBAL\Logging\LoggerChain">
      <argument type="collection">
        <argument type="service" id="doctrine.dbal.logger"/>
        <argument type="service" id="doctrine.dbal.logger.profiling.default"/>
      </argument>
    </service>
    <service id="doctrine.dbal.default_connection.event_manager" class="Symfony\Bridge\Doctrine\ContainerAwareEventManager" public="false">
      <argument type="service" id=".service_locator.YVO.bOF"/>
      <argument type="collection">
        <argument>vich_uploader.listener.clean.post_images</argument>
        <argument>vich_uploader.listener.remove.post_images</argument>
        <argument>vich_uploader.listener.upload.post_images</argument>
      </argument>
      <call method="addEventListener">
        <argument type="collection">
          <argument>loadClassMetadata</argument>
        </argument>
        <argument>doctrine.orm.default_listeners.attach_entity_listeners</argument>
      </call>
    </service>
    <service id="doctrine.dbal.default_connection" class="Doctrine\DBAL\Connection" public="true">
      <argument type="collection">
        <argument key="connection_override_options" type="collection"/>
        <argument key="url">%env(resolve:DATABASE_URL)%</argument>
        <argument key="driver">pdo_pgsql</argument>
        <argument key="charset">utf8</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="user">root</argument>
        <argument key="password">null</argument>
        <argument key="driverOptions" type="collection"/>
        <argument key="defaultTableOptions" type="collection"/>
      </argument>
      <argument type="service" id="doctrine.dbal.default_connection.configuration"/>
      <argument type="service" id="doctrine.dbal.default_connection.event_manager"/>
      <argument type="collection"/>
      <factory service="doctrine.dbal.connection_factory" method="createConnection"/>
    </service>
    <service id="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider" class="Doctrine\Bundle\DoctrineBundle\Dbal\ManagerRegistryAwareConnectionProvider">
      <argument type="service">
        <service class="Doctrine\Bundle\DoctrineBundle\Registry" public="true">
          <tag name="kernel.reset" method="reset"/>
          <argument type="service" id="service_container"/>
          <argument>%doctrine.connections%</argument>
          <argument>%doctrine.entity_managers%</argument>
          <argument>default</argument>
          <argument>default</argument>
        </service>
      </argument>
    </service>
    <service id=".1_ServiceLocator~P58jCL." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.proxy_cache_warmer" class="Symfony\Bridge\Doctrine\CacheWarmer\ProxyCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type_guesser.doctrine" class="Symfony\Bridge\Doctrine\Form\DoctrineOrmTypeGuesser">
      <tag name="form.type_guesser"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="form.type.entity" class="Symfony\Bridge\Doctrine\Form\Type\EntityType">
      <tag name="form.type" alias="entity"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.configuration" class="Doctrine\ORM\Configuration" public="false" abstract="true"/>
    <service id="doctrine.orm.entity_manager.abstract" class="Doctrine\ORM\EntityManager" lazy="true" abstract="true">
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
    </service>
    <service id="doctrine.orm.container_repository_factory" class="Doctrine\Bundle\DoctrineBundle\Repository\ContainerRepositoryFactory" public="false">
      <argument type="service" id=".service_locator.TSprido"/>
    </service>
    <service id="doctrine.orm.manager_configurator.abstract" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator" abstract="true">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.validator.unique" class="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator">
      <tag name="validator.constraint_validator" alias="doctrine.orm.validator.unique"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.validator_initializer" class="Symfony\Bridge\Doctrine\Validator\DoctrineInitializer">
      <tag name="validator.initializer"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.security.user.provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
    </service>
    <service id="doctrine.orm.listeners.resolve_target_entity" class="Doctrine\ORM\Tools\ResolveTargetEntityListener" public="false"/>
    <service id="doctrine.orm.naming_strategy.default" class="Doctrine\ORM\Mapping\DefaultNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false"/>
    <service id="doctrine.orm.naming_strategy.underscore_number_aware" class="Doctrine\ORM\Mapping\UnderscoreNamingStrategy" public="false">
      <argument>0</argument>
      <argument>true</argument>
    </service>
    <service id="doctrine.orm.quote_strategy.default" class="Doctrine\ORM\Mapping\DefaultQuoteStrategy" public="false"/>
    <service id="doctrine.orm.quote_strategy.ansi" class="Doctrine\ORM\Mapping\AnsiQuoteStrategy" public="false"/>
    <service id="doctrine.cache_clear_metadata_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearMetadataCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-metadata"/>
      <call method="setName">
        <argument>doctrine:cache:clear-metadata</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_query_cache_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearQueryCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query</argument>
      </call>
    </service>
    <service id="doctrine.cache_clear_result_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ClearResultCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-result"/>
      <call method="setName">
        <argument>doctrine:cache:clear-result</argument>
      </call>
    </service>
    <service id="doctrine.cache_collection_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CollectionRegionDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-collection-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-collection-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_convert_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ConvertMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:convert"/>
      <call method="setName">
        <argument>doctrine:mapping:convert</argument>
      </call>
    </service>
    <service id="doctrine.schema_create_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\CreateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:create"/>
      <call method="setName">
        <argument>doctrine:schema:create</argument>
      </call>
    </service>
    <service id="doctrine.schema_drop_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\DropSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:drop"/>
      <call method="setName">
        <argument>doctrine:schema:drop</argument>
      </call>
    </service>
    <service id="doctrine.ensure_production_settings_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EnsureProductionSettingsDoctrineCommand">
      <tag name="console.command" command="doctrine:ensure-production-settings"/>
      <call method="setName">
        <argument>doctrine:ensure-production-settings</argument>
      </call>
    </service>
    <service id="doctrine.clear_entity_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\EntityRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-entity-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-entity-region</argument>
      </call>
    </service>
    <service id="doctrine.mapping_info_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\InfoDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:info"/>
      <call method="setName">
        <argument>doctrine:mapping:info</argument>
      </call>
    </service>
    <service id="doctrine.clear_query_region_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\QueryRegionCacheDoctrineCommand">
      <tag name="console.command" command="doctrine:cache:clear-query-region"/>
      <call method="setName">
        <argument>doctrine:cache:clear-query-region</argument>
      </call>
    </service>
    <service id="doctrine.query_dql_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\RunDqlDoctrineCommand">
      <tag name="console.command" command="doctrine:query:dql"/>
      <call method="setName">
        <argument>doctrine:query:dql</argument>
      </call>
    </service>
    <service id="doctrine.schema_update_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\UpdateSchemaDoctrineCommand">
      <tag name="console.command" command="doctrine:schema:update"/>
      <call method="setName">
        <argument>doctrine:schema:update</argument>
      </call>
    </service>
    <service id="doctrine.schema_validate_command" class="Doctrine\Bundle\DoctrineBundle\Command\Proxy\ValidateSchemaCommand">
      <tag name="console.command" command="doctrine:schema:validate"/>
      <call method="setName">
        <argument>doctrine:schema:validate</argument>
      </call>
    </service>
    <service id="doctrine.mapping_import_command" class="Doctrine\Bundle\DoctrineBundle\Command\ImportMappingDoctrineCommand">
      <tag name="console.command" command="doctrine:mapping:import"/>
      <argument type="service" id="doctrine"/>
      <argument>%kernel.bundles%</argument>
      <call method="setName">
        <argument>doctrine:mapping:import</argument>
      </call>
    </service>
    <service id="doctrine.orm.default_configuration" class="Doctrine\ORM\Configuration" public="false">
      <tag name="doctrine.orm.configuration"/>
      <call method="setEntityNamespaces">
        <argument type="collection">
          <argument key="App">App\Entity</argument>
          <argument key="VichUploaderBundle">Vich\UploaderBundle\Entity</argument>
          <argument key="GesdinetJWTRefreshTokenBundle">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
        </argument>
      </call>
      <call method="setMetadataCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata"/>
      </call>
      <call method="setQueryCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query"/>
      </call>
      <call method="setResultCacheImpl">
        <argument type="service" id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result"/>
      </call>
      <call method="setMetadataDriverImpl">
        <argument type="service" id="doctrine.orm.default_metadata_driver"/>
      </call>
      <call method="setProxyDir">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/doctrine/orm/Proxies</argument>
      </call>
      <call method="setProxyNamespace">
        <argument>Proxies</argument>
      </call>
      <call method="setAutoGenerateProxyClasses">
        <argument>true</argument>
      </call>
      <call method="setClassMetadataFactoryName">
        <argument>Doctrine\ORM\Mapping\ClassMetadataFactory</argument>
      </call>
      <call method="setDefaultRepositoryClassName">
        <argument>Doctrine\ORM\EntityRepository</argument>
      </call>
      <call method="setNamingStrategy">
        <argument type="service" id="doctrine.orm.naming_strategy.underscore_number_aware"/>
      </call>
      <call method="setQuoteStrategy">
        <argument type="service" id="doctrine.orm.quote_strategy.default"/>
      </call>
      <call method="setEntityListenerResolver">
        <argument type="service" id="doctrine.orm.default_entity_listener_resolver"/>
      </call>
      <call method="setRepositoryFactory">
        <argument type="service" id="doctrine.orm.container_repository_factory"/>
      </call>
    </service>
    <service id="doctrine.orm.default_annotation_metadata_driver" class="Doctrine\ORM\Mapping\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="collection">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src\Entity</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle\src\Entity</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle\Entity</argument>
      </argument>
    </service>
    <service id="doctrine.orm.default_metadata_driver" class="Doctrine\Persistence\Mapping\Driver\MappingDriverChain" public="false">
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>App\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Vich\UploaderBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle\Resources\config\orm\doctrine-orm">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                  <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle\Resources\config\orm\doctrine-entity">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
      <call method="addDriver">
        <argument type="service">
          <service class="Doctrine\ORM\Mapping\Driver\XmlDriver">
            <argument type="service">
              <service class="Doctrine\Persistence\Mapping\Driver\SymfonyFileLocator">
                <argument type="collection">
                  <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle\Resources\config\orm\doctrine-orm">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                  <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\gesdinet\jwt-refresh-token-bundle\Resources\config\orm\doctrine-entity">Gesdinet\JWTRefreshTokenBundle\Entity</argument>
                </argument>
                <argument>.orm.xml</argument>
              </service>
            </argument>
          </service>
        </argument>
        <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
      </call>
    </service>
    <service id="cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.metadata.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.metadata"/>
    </service>
    <service id="cache.doctrine.orm.default.result" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.result.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.result"/>
    </service>
    <service id="cache.doctrine.orm.default.query" class="Symfony\Component\Cache\Adapter\TraceableAdapter">
      <tag name="cache.pool"/>
      <argument type="service" id="cache.doctrine.orm.default.query.recorder_inner"/>
    </service>
    <service id="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" class="Symfony\Component\Cache\DoctrineProvider">
      <argument type="service" id="cache.doctrine.orm.default.query"/>
    </service>
    <service id="doctrine.orm.default_entity_listener_resolver" class="Doctrine\Bundle\DoctrineBundle\Mapping\ContainerEntityListenerResolver">
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine.orm.default_listeners.attach_entity_listeners" class="Doctrine\ORM\Tools\AttachEntityListenersListener">
      <tag name="doctrine.event_listener" event="loadClassMetadata"/>
    </service>
    <service id="doctrine.orm.default_manager_configurator" class="Doctrine\Bundle\DoctrineBundle\ManagerConfigurator">
      <argument type="collection"/>
      <argument type="collection"/>
    </service>
    <service id="doctrine.orm.default_entity_manager" class="Doctrine\ORM\EntityManager" public="true" lazy="true">
      <tag name="container.preload" class="Doctrine\ORM\Proxy\Autoloader"/>
      <argument type="service" id="doctrine.dbal.default_connection"/>
      <argument type="service" id="doctrine.orm.default_configuration"/>
      <factory class="Doctrine\ORM\EntityManager" method="create"/>
      <configurator service="doctrine.orm.default_manager_configurator" method="configure"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.property_info_extractor" class="Symfony\Bridge\Doctrine\PropertyInfo\DoctrineExtractor">
      <tag name="property_info.list_extractor" priority="-1001"/>
      <tag name="property_info.type_extractor" priority="-999"/>
      <tag name="property_info.access_extractor" priority="-999"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
    </service>
    <service id="doctrine.orm.default_entity_manager.validator_loader" class="Symfony\Bridge\Doctrine\Validator\DoctrineLoader">
      <tag name="validator.auto_mapper" priority="-100"/>
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>null</argument>
    </service>
    <service id="doctrine.migrations.dependency_factory" class="Doctrine\Migrations\DependencyFactory" public="false">
      <argument type="service" id="doctrine.migrations.configuration_loader"/>
      <argument type="service" id="doctrine.migrations.entity_manager_registry_loader"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <call method="setDefinition">
        <argument>Doctrine\Migrations\Version\MigrationFactory</argument>
        <argument type="service_closure" id="doctrine.migrations.container_aware_migrations_factory"/>
      </call>
      <factory class="Doctrine\Migrations\DependencyFactory" method="fromEntityManager"/>
    </service>
    <service id="doctrine.migrations.configuration_loader" class="Doctrine\Migrations\Configuration\Migration\ExistingConfiguration" public="false">
      <argument type="service" id="doctrine.migrations.configuration"/>
    </service>
    <service id="doctrine.migrations.connection_loader" class="Doctrine\Migrations\Configuration\Connection\ExistingConnection" public="false"/>
    <service id="doctrine.migrations.em_loader" class="Doctrine\Migrations\Configuration\EntityManager\ExistingEntityManager" public="false"/>
    <service id="doctrine.migrations.entity_manager_registry_loader" class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" public="false">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\EntityManager\ManagerRegistryEntityManager" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.connection_registry_loader" class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" public="false">
      <argument type="service" id="doctrine"/>
      <factory class="Doctrine\Migrations\Configuration\Connection\ConnectionRegistryConnection" method="withSimpleDefault"/>
    </service>
    <service id="doctrine.migrations.configuration" class="Doctrine\Migrations\Configuration\Configuration" public="false">
      <call method="addMigrationsDirectory">
        <argument>DoctrineMigrations</argument>
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/migrations</argument>
      </call>
      <call method="setAllOrNothing">
        <argument>false</argument>
      </call>
      <call method="setCheckDatabasePlatform">
        <argument>true</argument>
      </call>
      <call method="setMetadataStorageConfiguration">
        <argument type="service" id="doctrine.migrations.storage.table_storage"/>
      </call>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory" class="Doctrine\Bundle\MigrationsBundle\MigrationsFactory\ContainerAwareMigrationFactory">
      <argument type="service" id="doctrine.migrations.container_aware_migrations_factory.inner"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="doctrine_migrations.diff_command" class="Doctrine\Migrations\Tools\Console\Command\DiffCommand">
      <tag name="console.command" command="doctrine:migrations:diff"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:diff</argument>
      <call method="setName">
        <argument>doctrine:migrations:diff</argument>
      </call>
    </service>
    <service id="doctrine_migrations.sync_metadata_command" class="Doctrine\Migrations\Tools\Console\Command\SyncMetadataCommand">
      <tag name="console.command" command="doctrine:migrations:sync-metadata-storage"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:sync-metadata-storage</argument>
      <call method="setName">
        <argument>doctrine:migrations:sync-metadata-storage</argument>
      </call>
    </service>
    <service id="doctrine_migrations.versions_command" class="Doctrine\Migrations\Tools\Console\Command\ListCommand">
      <tag name="console.command" command="doctrine:migrations:list"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:versions</argument>
      <call method="setName">
        <argument>doctrine:migrations:list</argument>
      </call>
    </service>
    <service id="doctrine_migrations.current_command" class="Doctrine\Migrations\Tools\Console\Command\CurrentCommand">
      <tag name="console.command" command="doctrine:migrations:current"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:current</argument>
      <call method="setName">
        <argument>doctrine:migrations:current</argument>
      </call>
    </service>
    <service id="doctrine_migrations.dump_schema_command" class="Doctrine\Migrations\Tools\Console\Command\DumpSchemaCommand">
      <tag name="console.command" command="doctrine:migrations:dump-schema"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:dump-schema</argument>
      <call method="setName">
        <argument>doctrine:migrations:dump-schema</argument>
      </call>
    </service>
    <service id="doctrine_migrations.execute_command" class="Doctrine\Migrations\Tools\Console\Command\ExecuteCommand">
      <tag name="console.command" command="doctrine:migrations:execute"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:execute</argument>
      <call method="setName">
        <argument>doctrine:migrations:execute</argument>
      </call>
    </service>
    <service id="doctrine_migrations.generate_command" class="Doctrine\Migrations\Tools\Console\Command\GenerateCommand">
      <tag name="console.command" command="doctrine:migrations:generate"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:generate</argument>
      <call method="setName">
        <argument>doctrine:migrations:generate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.latest_command" class="Doctrine\Migrations\Tools\Console\Command\LatestCommand">
      <tag name="console.command" command="doctrine:migrations:latest"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:latest</argument>
      <call method="setName">
        <argument>doctrine:migrations:latest</argument>
      </call>
    </service>
    <service id="doctrine_migrations.migrate_command" class="Doctrine\Migrations\Tools\Console\Command\MigrateCommand">
      <tag name="console.command" command="doctrine:migrations:migrate"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:migrate</argument>
      <call method="setName">
        <argument>doctrine:migrations:migrate</argument>
      </call>
    </service>
    <service id="doctrine_migrations.rollup_command" class="Doctrine\Migrations\Tools\Console\Command\RollupCommand">
      <tag name="console.command" command="doctrine:migrations:rollup"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:rollup</argument>
      <call method="setName">
        <argument>doctrine:migrations:rollup</argument>
      </call>
    </service>
    <service id="doctrine_migrations.status_command" class="Doctrine\Migrations\Tools\Console\Command\StatusCommand">
      <tag name="console.command" command="doctrine:migrations:status"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:status</argument>
      <call method="setName">
        <argument>doctrine:migrations:status</argument>
      </call>
    </service>
    <service id="doctrine_migrations.up_to_date_command" class="Doctrine\Migrations\Tools\Console\Command\UpToDateCommand">
      <tag name="console.command" command="doctrine:migrations:up-to-date"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:up-to-date</argument>
      <call method="setName">
        <argument>doctrine:migrations:up-to-date</argument>
      </call>
    </service>
    <service id="doctrine_migrations.version_command" class="Doctrine\Migrations\Tools\Console\Command\VersionCommand">
      <tag name="console.command" command="doctrine:migrations:version"/>
      <argument type="service" id="doctrine.migrations.dependency_factory"/>
      <argument>doctrine:migrations:version</argument>
      <call method="setName">
        <argument>doctrine:migrations:version</argument>
      </call>
    </service>
    <service id="doctrine.migrations.storage.table_storage" class="Doctrine\Migrations\Metadata\Storage\TableMetadataStorageConfiguration"/>
    <service id="maker.file_manager" class="Symfony\Bundle\MakerBundle\FileManager" public="false">
      <argument type="service" id="filesystem"/>
      <argument type="service" id="maker.autoloader_util"/>
      <argument type="service" id="maker.file_link_formatter"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
    </service>
    <service id="maker.autoloader_finder" class="Symfony\Bundle\MakerBundle\Util\ComposerAutoloaderFinder" public="false">
      <argument>App</argument>
    </service>
    <service id="maker.autoloader_util" class="Symfony\Bundle\MakerBundle\Util\AutoloaderUtil" public="false">
      <argument type="service" id="maker.autoloader_finder"/>
    </service>
    <service id="maker.file_link_formatter" class="Symfony\Bundle\MakerBundle\Util\MakerFileLinkFormatter" public="false">
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
    </service>
    <service id="maker.event_registry" class="Symfony\Bundle\MakerBundle\EventRegistry" public="false">
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="maker.console_error_listener" class="Symfony\Bundle\MakerBundle\Event\ConsoleErrorSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
    </service>
    <service id="maker.doctrine_helper" class="Symfony\Bundle\MakerBundle\Doctrine\DoctrineHelper" public="false">
      <argument>App\Entity</argument>
      <argument type="service" id="doctrine" on-invalid="ignore"/>
      <argument type="collection">
        <argument key="default" type="collection">
          <argument type="collection">
            <argument>App\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Vich\UploaderBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
          <argument type="collection">
            <argument>Gesdinet\JWTRefreshTokenBundle\Entity</argument>
            <argument type="service" id="doctrine.orm.default_annotation_metadata_driver"/>
          </argument>
        </argument>
      </argument>
    </service>
    <service id="maker.auto_command.abstract" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false" abstract="true">
      <argument></argument>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.generator" class="Symfony\Bundle\MakerBundle\Generator" public="false">
      <argument type="service" id="maker.file_manager"/>
      <argument>App</argument>
      <argument type="service" id="maker.php_compat_util"/>
    </service>
    <service id="maker.entity_class_generator" class="Symfony\Bundle\MakerBundle\Doctrine\EntityClassGenerator" public="false">
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <call method="setMangerRegistryClassName">
        <argument>Doctrine\Persistence\ManagerRegistry</argument>
      </call>
    </service>
    <service id="maker.user_class_builder" class="Symfony\Bundle\MakerBundle\Security\UserClassBuilder" public="false"/>
    <service id="maker.security_config_updater" class="Symfony\Bundle\MakerBundle\Security\SecurityConfigUpdater" public="false"/>
    <service id="maker.renderer.form_type_renderer" class="Symfony\Bundle\MakerBundle\Renderer\FormTypeRenderer" public="false">
      <argument type="service" id="maker.generator"/>
    </service>
    <service id="maker.php_compat_util" class="Symfony\Bundle\MakerBundle\Util\PhpCompatUtil" public="false">
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_authenticator" class="Symfony\Bundle\MakerBundle\Maker\MakeAuthenticator" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_command" class="Symfony\Bundle\MakerBundle\Maker\MakeCommand" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_controller" class="Symfony\Bundle\MakerBundle\Maker\MakeController" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_crud" class="Symfony\Bundle\MakerBundle\Maker\MakeCrud" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_docker_database" class="Symfony\Bundle\MakerBundle\Maker\MakeDockerDatabase" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_entity" class="Symfony\Bundle\MakerBundle\Maker\MakeEntity" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument type="service" id="maker.generator"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_fixtures" class="Symfony\Bundle\MakerBundle\Maker\MakeFixtures" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_form" class="Symfony\Bundle\MakerBundle\Maker\MakeForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
    </service>
    <service id="maker.maker.make_functional_test" class="Symfony\Bundle\MakerBundle\Maker\MakeFunctionalTest" public="false">
      <tag name="maker.command"/>
      <deprecated>The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_message" class="Symfony\Bundle\MakerBundle\Maker\MakeMessage" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
    </service>
    <service id="maker.maker.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Maker\MakeMessengerMiddleware" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_registration_form" class="Symfony\Bundle\MakerBundle\Maker\MakeRegistrationForm" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.renderer.form_type_renderer"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="maker.doctrine_helper"/>
    </service>
    <service id="maker.maker.make_reset_password" class="Symfony\Bundle\MakerBundle\Maker\MakeResetPassword" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.doctrine_helper"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerEncoder" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Maker\MakeSerializerNormalizer" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_subscriber" class="Symfony\Bundle\MakerBundle\Maker\MakeSubscriber" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.event_registry"/>
    </service>
    <service id="maker.maker.make_twig_extension" class="Symfony\Bundle\MakerBundle\Maker\MakeTwigExtension" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_test" class="Symfony\Bundle\MakerBundle\Maker\MakeTest" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_unit_test" class="Symfony\Bundle\MakerBundle\Maker\MakeUnitTest" public="false">
      <tag name="maker.command"/>
      <deprecated>The "%service_id%" service is deprecated, use "maker.maker.make_test" instead.</deprecated>
    </service>
    <service id="maker.maker.make_validator" class="Symfony\Bundle\MakerBundle\Maker\MakeValidator" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_voter" class="Symfony\Bundle\MakerBundle\Maker\MakeVoter" public="false">
      <tag name="maker.command"/>
    </service>
    <service id="maker.maker.make_user" class="Symfony\Bundle\MakerBundle\Maker\MakeUser" public="false">
      <tag name="maker.command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.user_class_builder"/>
      <argument type="service" id="maker.security_config_updater"/>
      <argument type="service" id="maker.entity_class_generator"/>
    </service>
    <service id="maker.maker.make_migration" class="Symfony\Bundle\MakerBundle\Maker\MakeMigration" public="false">
      <tag name="maker.command"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
    </service>
    <service id="security.authorization_checker" class="Symfony\Component\Security\Core\Authorization\AuthorizationChecker" public="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument>false</argument>
    </service>
    <service id="security.token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\UsageTrackingTokenStorage" public="true">
      <tag name="kernel.reset" method="disableUsageTracking"/>
      <tag name="kernel.reset" method="setToken"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id=".service_locator.XjnY8xG"/>
    </service>
    <service id="security.untracked_token_storage" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="security.helper" class="Symfony\Component\Security\Core\Security" public="false">
      <argument type="service" id=".service_locator.6zQlgQt"/>
    </service>
    <service id="security.authentication.manager" class="Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager" public="false">
      <argument type="iterator">
        <argument type="service" id="security.authentication.provider.dao.login"/>
        <argument type="service" id="security.authentication.provider.anonymous.login"/>
        <argument type="service" id="security.authentication.provider.anonymous.register"/>
        <argument type="service" id="security.authentication.provider.anonymous.refresh"/>
        <argument type="service" id="security.authentication.provider.guard.api"/>
        <argument type="service" id="security.authentication.provider.anonymous.main"/>
      </argument>
      <argument>true</argument>
      <call method="setEventDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
    </service>
    <service id="security.authentication.trust_resolver" class="Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver" public="false">
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="security.authentication.session_strategy" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>migrate</argument>
    </service>
    <service id="security.authentication.session_strategy_noop" class="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy" public="false">
      <argument>none</argument>
    </service>
    <service id="security.encoder_factory.generic" class="Symfony\Component\Security\Core\Encoder\EncoderFactory" public="false">
      <argument type="collection">
        <argument key="App\Entity\User" type="collection">
          <argument key="algorithm">auto</argument>
          <argument key="migrate_from" type="collection"/>
          <argument key="hash_algorithm">sha512</argument>
          <argument key="key_length">40</argument>
          <argument key="ignore_case">false</argument>
          <argument key="encode_as_base64">true</argument>
          <argument key="iterations">5000</argument>
          <argument key="cost">null</argument>
          <argument key="memory_cost">null</argument>
          <argument key="time_cost">null</argument>
          <argument key="threads">null</argument>
        </argument>
      </argument>
    </service>
    <service id="security.user_password_encoder.generic" class="Symfony\Component\Security\Core\Encoder\UserPasswordEncoder" public="false">
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="security.user_checker" class="Symfony\Component\Security\Core\User\UserChecker" public="false"/>
    <service id="security.expression_language" class="Symfony\Component\Security\Core\Authorization\ExpressionLanguage" public="false">
      <argument type="service" id="cache.security_expression_language" on-invalid="null"/>
      <call method="registerProvider">
        <argument type="service" id="api_platform.security.expression_language_provider"/>
      </call>
    </service>
    <service id="security.authentication_utils" class="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" public="true">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="security.role_hierarchy" class="Symfony\Component\Security\Core\Role\RoleHierarchy" public="false">
      <argument type="collection"/>
    </service>
    <service id="security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\RoleVoter" public="false">
      <tag name="security.voter" priority="245"/>
    </service>
    <service id="security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter" public="false">
      <tag name="security.voter" priority="250"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
    </service>
    <service id="security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter" public="false">
      <tag name="security.voter" priority="245"/>
      <argument type="service" id="security.expression_language"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.authorization_checker"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
    </service>
    <service id="security.firewall.map" class="Symfony\Bundle\SecurityBundle\Security\FirewallMap" public="false">
      <argument type="service" id=".service_locator.Ian_E1w"/>
      <argument type="iterator">
        <argument key="security.firewall.map.context.dev" type="service" id=".security.request_matcher.Iy.T22O"/>
        <argument key="security.firewall.map.context.login" type="service" id=".security.request_matcher.HeUdK73"/>
        <argument key="security.firewall.map.context.register" type="service" id=".security.request_matcher.PMgOS9I"/>
        <argument key="security.firewall.map.context.refresh" type="service" id=".security.request_matcher.UQgI.UV"/>
        <argument key="security.firewall.map.context.api" type="service" id=".security.request_matcher.p4VlLPC"/>
        <argument key="security.firewall.map.context.main">null</argument>
      </argument>
    </service>
    <service id="security.firewall.context" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.firewall.lazy_context" class="Symfony\Bundle\SecurityBundle\Security\LazyFirewallContext" public="false" abstract="true">
      <argument type="collection"/>
      <argument type="service" id="security.exception_listener"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.untracked_token_storage"/>
    </service>
    <service id="security.firewall.config" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id="security.logout_url_generator" class="Symfony\Component\Security\Http\Logout\LogoutUrlGenerator" public="false">
      <argument type="service" id="request_stack" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="security.token_storage"/>
      <call method="registerListener">
        <argument>api</argument>
        <argument>app_logout</argument>
        <argument>logout</argument>
        <argument>_csrf_token</argument>
        <argument>null</argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.user.provider.missing" class="Symfony\Component\Security\Core\User\MissingUserProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.user.provider.in_memory" class="Symfony\Component\Security\Core\User\InMemoryUserProvider" public="false" abstract="true"/>
    <service id="security.user.provider.in_memory.user" class="Symfony\Component\Security\Core\User\User" public="false" abstract="true">
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.1.</deprecated>
    </service>
    <service id="security.user.provider.ldap" class="Symfony\Component\Ldap\Security\LdapUserProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.user.provider.chain" class="Symfony\Component\Security\Core\User\ChainUserProvider" public="false" abstract="true"/>
    <service id="security.http_utils" class="Symfony\Component\Security\Http\HttpUtils" public="false">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>{^https?://%%s$}i</argument>
      <argument>{^https://%%s$}i</argument>
    </service>
    <service id="security.validator.user_password" class="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" public="false">
      <tag name="validator.constraint_validator" alias="security.validator.user_password"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.encoder_factory.generic"/>
    </service>
    <service id="cache.security_expression_language" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="cache.security_expression_language.recorder_inner"/>
    </service>
    <service id="security.authentication.listener.anonymous" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument></argument>
    </service>
    <service id="security.authentication.retry_entry_point" class="Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint" public="false">
      <argument>80</argument>
      <argument>443</argument>
    </service>
    <service id="security.authentication.basic_entry_point" class="Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint" public="false"/>
    <service id="security.channel_listener" class="Symfony\Component\Security\Http\Firewall\ChannelListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.retry_entry_point"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.access_map" class="Symfony\Component\Security\Http\AccessMap" public="false">
      <call method="add">
        <argument type="service" id=".security.request_matcher.Ud1TEPV"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.RHM.hIp"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.GIg_k0H"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.i0nnAHt"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_ANONYMOUSLY</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.5dJADCx"/>
        <argument type="collection">
          <argument>ROLE_ADMIN</argument>
        </argument>
        <argument>null</argument>
      </call>
      <call method="add">
        <argument type="service" id=".security.request_matcher.PhQgZ9B"/>
        <argument type="collection">
          <argument>IS_AUTHENTICATED_FULLY</argument>
        </argument>
        <argument>null</argument>
      </call>
    </service>
    <service id="security.context_listener" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.logout_listener" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler"/>
      <argument></argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.handler.session" class="Symfony\Component\Security\Http\Logout\SessionLogoutHandler" public="false"/>
    <service id="security.logout.handler.cookie_clearing" class="Symfony\Component\Security\Http\Logout\CookieClearingLogoutHandler" public="false" abstract="true"/>
    <service id="security.logout.success_handler" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.form_entry_point" class="Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint" public="false" abstract="true">
      <argument type="service" id="http_kernel"/>
    </service>
    <service id="security.authentication.listener.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.custom_success_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
      <argument></argument>
    </service>
    <service id="security.authentication.success_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationSuccessHandler" public="false" abstract="true">
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.custom_failure_handler" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false" abstract="true">
      <argument></argument>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.failure_handler" class="Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="http_kernel"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.form" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.simple_form" class="Symfony\Component\Security\Http\Firewall\SimpleFormAuthenticationListener" public="false" abstract="true">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.authentication.session_strategy"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.simple_success_failure_handler" class="Symfony\Component\Security\Http\Authentication\SimpleAuthenticationHandler" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument></argument>
      <argument type="service" id="security.authentication.success_handler"/>
      <argument type="service" id="security.authentication.failure_handler"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.simple_preauth" class="Symfony\Component\Security\Http\Firewall\SimplePreAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.listener.x509" class="Symfony\Component\Security\Http\Firewall\X509AuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.json" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.remote_user" class="Symfony\Component\Security\Http\Firewall\RemoteUserAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
    </service>
    <service id="security.authentication.listener.basic" class="Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.provider.dao" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.provider.ldap_bind" class="Symfony\Component\Security\Core\Authentication\Provider\LdapBindAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>true</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.authentication.provider.simple" class="Symfony\Component\Security\Core\Authentication\Provider\SimpleAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.2.</deprecated>
    </service>
    <service id="security.authentication.provider.pre_authenticated" class="Symfony\Component\Security\Core\Authentication\Provider\PreAuthenticatedAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
    </service>
    <service id="security.exception_listener" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument></argument>
      <argument type="service" id="security.authentication.entry_point" on-invalid="null"/>
      <argument>null</argument>
      <argument type="service" id="security.access.denied_handler" on-invalid="null"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.authentication.switchuser_listener" class="Symfony\Component\Security\Http\Firewall\SwitchUserListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>_switch_user</argument>
      <argument>ROLE_ALLOWED_TO_SWITCH</argument>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.access_listener" class="Symfony\Component\Security\Http\Firewall\AccessListener" public="false">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.access_map"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.listener.rememberme" class="Symfony\Component\Security\Http\Firewall\RememberMeListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.authentication.rememberme"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument></argument>
      <argument type="service" id="security.authentication.session_strategy"/>
    </service>
    <service id="security.authentication.provider.rememberme" class="Symfony\Component\Security\Core\Authentication\Provider\RememberMeAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="security.rememberme.token.provider.in_memory" class="Symfony\Component\Security\Core\Authentication\RememberMe\InMemoryTokenProvider" public="false"/>
    <service id="security.authentication.rememberme.services.abstract" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.persistent" class="Symfony\Component\Security\Http\RememberMe\PersistentTokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.authentication.rememberme.services.simplehash" class="Symfony\Component\Security\Http\RememberMe\TokenBasedRememberMeServices" public="false" abstract="true">
      <argument type="collection"/>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="security.rememberme.response_listener" class="Symfony\Component\Security\Http\RememberMe\ResponseListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="twig.extension.logout_url" class="Symfony\Bridge\Twig\Extension\LogoutUrlExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="twig.extension.security" class="Symfony\Bridge\Twig\Extension\SecurityExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="security.authorization_checker" on-invalid="ignore"/>
    </service>
    <service id="data_collector.security" class="Symfony\Bundle\SecurityBundle\DataCollector\SecurityDataCollector" public="false">
      <tag name="data_collector" template="@Security/Collector/security.html.twig" id="security" priority="270"/>
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="service" id="security.role_hierarchy"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.security.firewall" on-invalid="null"/>
    </service>
    <service id="security.authentication.guard_handler" class="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="collection">
        <argument>login</argument>
        <argument>register</argument>
        <argument>refresh</argument>
        <argument>api</argument>
      </argument>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy"/>
      </call>
    </service>
    <service id="security.authentication.provider.guard" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false" abstract="true">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <argument></argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="debug.security.access.decision_manager" class="Symfony\Component\Security\Core\Authorization\TraceableAccessDecisionManager" public="false">
      <argument type="service" id="debug.security.access.decision_manager.inner"/>
    </service>
    <service id="debug.security.voter.vote_listener" class="Symfony\Bundle\SecurityBundle\EventListener\VoteListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <argument type="service" id="debug.security.access.decision_manager"/>
    </service>
    <service id="debug.security.firewall" class="Symfony\Bundle\SecurityBundle\Debug\TraceableFirewallListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="security.firewall.map"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="security.logout_url_generator"/>
    </service>
    <service id="security.user.provider.concrete.app_user_provider" class="Symfony\Bridge\Doctrine\Security\User\EntityUserProvider" public="false">
      <argument type="service" id="doctrine"/>
      <argument>App\Entity\User</argument>
      <argument>username</argument>
      <argument>null</argument>
    </service>
    <service id="security.firewall.map.config.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>dev</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.Iy.T22O</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.Iy.T22O" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/(_(profiler|wdt)|css|images|js)/</argument>
    </service>
    <service id="security.firewall.map.context.dev" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.dev"/>
    </service>
    <service id="security.firewall.map.config.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>login</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.HeUdK73</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>json_login</argument>
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.HeUdK73" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/login</argument>
    </service>
    <service id="security.authentication.provider.dao.login" class="Symfony\Component\Security\Core\Authentication\Provider\DaoAuthenticationProvider" public="false">
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.user_checker"/>
      <argument>login</argument>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument>true</argument>
    </service>
    <service id="security.authentication.success_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationSuccessHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="collection"/>
      <argument>login</argument>
    </service>
    <service id="security.authentication.failure_handler.login.json_login" class="Symfony\Component\Security\Http\Authentication\CustomAuthenticationFailureHandler" public="false">
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="collection"/>
    </service>
    <service id="security.authentication.listener.json.login" class="Symfony\Component\Security\Http\Firewall\UsernamePasswordJsonAuthenticationListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument type="service" id="security.authentication.success_handler.login.json_login"/>
      <argument type="service" id="security.authentication.failure_handler.login.json_login"/>
      <argument type="collection">
        <argument key="check_path">/api/login</argument>
        <argument key="use_forward">false</argument>
        <argument key="require_previous_session">false</argument>
        <argument key="username_path">username</argument>
        <argument key="password_path">password</argument>
      </argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <call method="setSessionAuthenticationStrategy">
        <argument type="service" id="security.authentication.session_strategy_noop"/>
      </call>
    </service>
    <service id="security.authentication.listener.anonymous.login" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.login" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.login" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>login</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.login" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.json.login"/>
        <argument type="service" id="security.authentication.listener.anonymous.login"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.login"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.login"/>
    </service>
    <service id="security.firewall.map.config.register" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>register</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.PMgOS9I</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.PMgOS9I" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/register</argument>
    </service>
    <service id="security.authentication.listener.anonymous.register" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.register" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.register" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>register</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.register" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.anonymous.register"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.register"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.register"/>
    </service>
    <service id="security.firewall.map.config.refresh" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>refresh</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.UQgI.UV</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.UQgI.UV" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/token/refresh</argument>
    </service>
    <service id="security.authentication.listener.anonymous.refresh" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.refresh" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.refresh" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>refresh</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.refresh" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.anonymous.refresh"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.refresh"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.refresh"/>
    </service>
    <service id="security.firewall.map.config.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>api</argument>
      <argument>security.user_checker</argument>
      <argument>.security.request_matcher.p4VlLPC</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>null</argument>
      <argument>lexik_jwt_authentication.jwt_token_authenticator</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>guard</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id=".security.request_matcher.p4VlLPC" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api</argument>
    </service>
    <service id="security.logout_listener.api" class="Symfony\Component\Security\Http\Firewall\LogoutListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.http_utils"/>
      <argument type="service" id="security.logout.success_handler.api"/>
      <argument type="collection">
        <argument key="csrf_parameter">_csrf_token</argument>
        <argument key="csrf_token_id">logout</argument>
        <argument key="logout_path">app_logout</argument>
      </argument>
      <call method="addHandler">
        <argument type="service" id="security.logout.handler.csrf_token_clearing"/>
      </call>
    </service>
    <service id="security.logout.success_handler.api" class="Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler" public="false">
      <argument type="service" id="security.http_utils"/>
      <argument>/</argument>
    </service>
    <service id="security.authentication.provider.guard.api" class="Symfony\Component\Security\Guard\Provider\GuardAuthenticationProvider" public="false">
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      <argument>api</argument>
      <argument type="service" id="security.user_checker"/>
      <argument type="service" id="security.user_password_encoder.generic"/>
    </service>
    <service id="security.authentication.listener.guard.api" class="Symfony\Component\Security\Guard\Firewall\GuardAuthenticationListener" public="false">
      <tag name="security.remember_me_aware" id="api" provider="security.user.provider.concrete.app_user_provider"/>
      <argument type="service" id="security.authentication.guard_handler"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument>api</argument>
      <argument type="iterator">
        <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      </argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.exception_listener.api" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>api</argument>
      <argument type="service" id="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>true</argument>
    </service>
    <service id="security.firewall.map.context.api" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.authentication.listener.guard.api"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.api"/>
      <argument type="service" id="security.logout_listener.api"/>
      <argument type="service" id="security.firewall.map.config.api"/>
    </service>
    <service id="security.firewall.map.config.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallConfig" public="false">
      <argument>main</argument>
      <argument>security.user_checker</argument>
      <argument>null</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>security.user.provider.concrete.app_user_provider</argument>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="collection">
        <argument>anonymous</argument>
      </argument>
      <argument>null</argument>
    </service>
    <service id="security.context_listener.0" class="Symfony\Component\Security\Http\Firewall\ContextListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <argument>main</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="debug.event_dispatcher" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="collection">
        <argument type="service" id="security.token_storage"/>
        <argument>enableUsageTracking</argument>
      </argument>
    </service>
    <service id="security.authentication.listener.anonymous.main" class="Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener" public="false">
      <argument type="service" id="security.untracked_token_storage"/>
      <argument>%container.build_hash%</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument type="service" id="security.authentication.manager"/>
    </service>
    <service id="security.authentication.provider.anonymous.main" class="Symfony\Component\Security\Core\Authentication\Provider\AnonymousAuthenticationProvider" public="false">
      <argument>%container.build_hash%</argument>
    </service>
    <service id="security.exception_listener.main" class="Symfony\Component\Security\Http\Firewall\ExceptionListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.trust_resolver"/>
      <argument type="service" id="security.http_utils"/>
      <argument>main</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>false</argument>
    </service>
    <service id="security.firewall.map.context.main" class="Symfony\Bundle\SecurityBundle\Security\FirewallContext" public="false">
      <argument type="iterator">
        <argument type="service" id="security.channel_listener"/>
        <argument type="service" id="security.context_listener.0"/>
        <argument type="service" id="security.authentication.listener.anonymous.main"/>
        <argument type="service" id="security.access_listener"/>
      </argument>
      <argument type="service" id="security.exception_listener.main"/>
      <argument>null</argument>
      <argument type="service" id="security.firewall.map.config.main"/>
    </service>
    <service id=".service_locator.Ian_E1w" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.firewall.map.context.api" type="service_closure" id="security.firewall.map.context.api"/>
        <argument key="security.firewall.map.context.dev" type="service_closure" id="security.firewall.map.context.dev"/>
        <argument key="security.firewall.map.context.login" type="service_closure" id="security.firewall.map.context.login"/>
        <argument key="security.firewall.map.context.main" type="service_closure" id="security.firewall.map.context.main"/>
        <argument key="security.firewall.map.context.refresh" type="service_closure" id="security.firewall.map.context.refresh"/>
        <argument key="security.firewall.map.context.register" type="service_closure" id="security.firewall.map.context.register"/>
      </argument>
    </service>
    <service id=".security.request_matcher.Ud1TEPV" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/login</argument>
    </service>
    <service id=".security.request_matcher.RHM.hIp" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/register</argument>
    </service>
    <service id=".security.request_matcher.GIg_k0H" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/verify</argument>
    </service>
    <service id=".security.request_matcher.i0nnAHt" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/api/token/refresh</argument>
    </service>
    <service id=".security.request_matcher.5dJADCx" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/admin</argument>
    </service>
    <service id=".security.request_matcher.PhQgZ9B" class="Symfony\Component\HttpFoundation\RequestMatcher" public="false">
      <argument>^/</argument>
    </service>
    <service id="security.command.user_password_encoder" class="Symfony\Bundle\SecurityBundle\Command\UserPasswordEncoderCommand" public="false">
      <tag name="console.command" command="security:encode-password"/>
      <argument type="service" id="security.encoder_factory.generic"/>
      <argument type="collection">
        <argument>App\Entity\User</argument>
      </argument>
      <call method="setName">
        <argument>security:encode-password</argument>
      </call>
    </service>
    <service id="doctrine.fixtures_load_command" class="Doctrine\Bundle\FixturesBundle\Command\LoadDataFixturesDoctrineCommand">
      <tag name="console.command" command="doctrine:fixtures:load"/>
      <argument type="service" id="doctrine.fixtures.loader"/>
      <argument type="service" id="doctrine"/>
      <argument type="collection">
        <argument key="default" type="service" id="doctrine.fixtures.purger.orm_purger_factory"/>
      </argument>
      <call method="setName">
        <argument>doctrine:fixtures:load</argument>
      </call>
    </service>
    <service id="doctrine.fixtures.loader" class="Doctrine\Bundle\FixturesBundle\Loader\SymfonyFixturesLoader" public="false">
      <argument type="service" id="service_container"/>
      <call method="addFixtures">
        <argument type="collection">
          <argument type="collection">
            <argument key="fixture" type="service" id="App\DataFixtures\UserFixtures"/>
            <argument key="groups" type="collection"/>
          </argument>
        </argument>
      </call>
    </service>
    <service id="doctrine.fixtures.purger.orm_purger_factory" class="Doctrine\Bundle\FixturesBundle\Purger\ORMPurgerFactory" public="false">
      <tag name="doctrine.fixtures.purger_factory" alias="default"/>
    </service>
    <service id=".1_~BXeeS03" public="false">
      <argument type="service" id="request_stack"/>
      <argument>true</argument>
      <factory class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" method="isDebug"/>
    </service>
    <service id="twig" class="Twig\Environment" public="true">
      <argument type="service" id="twig.loader.native_filesystem"/>
      <argument type="collection">
        <argument key="debug">true</argument>
        <argument key="strict_variables">true</argument>
        <argument key="autoescape">name</argument>
        <argument key="cache">C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/twig</argument>
        <argument key="charset">UTF-8</argument>
      </argument>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security_csrf"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.logout_url"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.security"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.profiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.trans"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.assets"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.code"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.routing"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.yaml"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug.stopwatch"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.expression"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpkernel"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.httpfoundation"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.weblink"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.form"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="doctrine.twig.doctrine_extension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.debug"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="twig.extension.webprofiler"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension"/>
      </call>
      <call method="addExtension">
        <argument type="service" id="Vich\UploaderBundle\Twig\Extension\UploaderExtension"/>
      </call>
      <call method="addGlobal">
        <argument>app</argument>
        <argument type="service" id="twig.app_variable"/>
      </call>
      <call method="addRuntimeLoader">
        <argument type="service" id="twig.runtime_loader"/>
      </call>
      <configurator service="twig.configurator.environment" method="configure"/>
    </service>
    <service id="twig.app_variable" class="Symfony\Bridge\Twig\AppVariable" public="false">
      <call method="setEnvironment">
        <argument>dev</argument>
      </call>
      <call method="setDebug">
        <argument>true</argument>
      </call>
      <call method="setTokenStorage">
        <argument type="service" id="security.token_storage" on-invalid="ignore"/>
      </call>
      <call method="setRequestStack">
        <argument type="service" id="request_stack" on-invalid="ignore"/>
      </call>
    </service>
    <service id="twig.template_iterator" class="Symfony\Bundle\TwigBundle\TemplateIterator" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src</argument>
      <argument type="collection">
        <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Email">email</argument>
        <argument key="C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Form">null</argument>
      </argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
    </service>
    <service id="twig.template_cache_warmer" class="Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <tag name="container.service_subscriber" id="twig"/>
      <argument type="service" id=".service_locator.o9nGMXB.twig.template_cache_warmer"/>
      <argument type="service" id="twig.template_iterator"/>
    </service>
    <service id="twig.loader.native_filesystem" class="Symfony\Bundle\TwigBundle\Loader\NativeFilesystemLoader" public="false">
      <tag name="twig.loader"/>
      <argument type="collection"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\framework-bundle/Resources/views</argument>
        <argument>!Framework</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-bundle/Resources/views</argument>
        <argument>!Doctrine</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-migrations-bundle/Resources/views</argument>
        <argument>DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\doctrine\doctrine-migrations-bundle/Resources/views</argument>
        <argument>!DoctrineMigrations</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\security-bundle/Resources/views</argument>
        <argument>!Security</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bundle/Resources/views</argument>
        <argument>!Twig</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\web-profiler-bundle/Resources/views</argument>
        <argument>!WebProfiler</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/views</argument>
        <argument>EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\easycorp\easyadmin-bundle\src/Resources/views</argument>
        <argument>!EasyAdmin</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\api-platform\core\src\Bridge\Symfony\Bundle/Resources/views</argument>
        <argument>ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\api-platform\core\src\Bridge\Symfony\Bundle/Resources/views</argument>
        <argument>!ApiPlatform</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/templates</argument>
        <argument>VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\vich\uploader-bundle/templates</argument>
        <argument>!VichUploader</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\swiftmailer-bundle/Resources/views</argument>
        <argument>!Swiftmailer</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>email</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Email</argument>
        <argument>!email</argument>
      </call>
      <call method="addPath">
        <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\vendor\symfony\twig-bridge/Resources/views/Form</argument>
      </call>
    </service>
    <service id="twig.loader.chain" class="Twig\Loader\ChainLoader" public="false"/>
    <service id="twig.extension.profiler" class="Symfony\Bridge\Twig\Extension\ProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="debug.stopwatch" on-invalid="null"/>
    </service>
    <service id="twig.profile" class="Twig\Profiler\Profile" public="false"/>
    <service id="data_collector.twig" class="Symfony\Bridge\Twig\DataCollector\TwigDataCollector" public="false">
      <tag name="data_collector" template="@WebProfiler/Collector/twig.html.twig" id="twig" priority="257"/>
      <argument type="service" id="twig.profile"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.extension.trans" class="Symfony\Bridge\Twig\Extension\TranslationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="translator.data_collector" on-invalid="null"/>
    </service>
    <service id="twig.extension.assets" class="Symfony\Bridge\Twig\Extension\AssetExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="twig.extension.code" class="Symfony\Bridge\Twig\Extension\CodeExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.file_link_formatter" on-invalid="ignore"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument>UTF-8</argument>
    </service>
    <service id="twig.extension.routing" class="Symfony\Bridge\Twig\Extension\RoutingExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="twig.extension.yaml" class="Symfony\Bridge\Twig\Extension\YamlExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.debug.stopwatch" class="Symfony\Bridge\Twig\Extension\StopwatchExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="debug.stopwatch" on-invalid="ignore"/>
      <argument>true</argument>
    </service>
    <service id="twig.extension.expression" class="Symfony\Bridge\Twig\Extension\ExpressionExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.runtime.httpkernel" class="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="fragment.handler"/>
    </service>
    <service id="twig.extension.httpfoundation" class="Symfony\Bridge\Twig\Extension\HttpFoundationExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="url_helper"/>
    </service>
    <service id="twig.extension.debug" class="Twig\Extension\DebugExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.extension.weblink" class="Symfony\Bridge\Twig\Extension\WebLinkExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="request_stack"/>
    </service>
    <service id="twig.translation.extractor" class="Symfony\Bridge\Twig\Translation\TwigExtractor" public="false">
      <tag name="translation.extractor" alias="twig"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.controller.exception" class="Symfony\Bundle\TwigBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.controller.preview_error" class="Symfony\Bundle\TwigBundle\Controller\PreviewErrorController" public="true">
      <argument type="service" id="http_kernel"/>
      <argument>null</argument>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4.</deprecated>
    </service>
    <service id="twig.configurator.environment" class="Symfony\Bundle\TwigBundle\DependencyInjection\Configurator\EnvironmentConfigurator" public="false">
      <argument>F j, Y H:i</argument>
      <argument>%d days</argument>
      <argument>null</argument>
      <argument>0</argument>
      <argument>.</argument>
      <argument>,</argument>
    </service>
    <service id="twig.runtime_loader" class="Twig\RuntimeLoader\ContainerRuntimeLoader" public="false">
      <argument type="service" id=".service_locator.7YWluy."/>
    </service>
    <service id="twig.error_renderer.html" class="Symfony\Bridge\Twig\ErrorRenderer\TwigErrorRenderer" public="false">
      <argument type="service" id="twig"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id=".1_~BXeeS03"/>
    </service>
    <service id="twig.extension.form" class="Symfony\Bridge\Twig\Extension\FormExtension" public="false">
      <tag name="twig.extension"/>
    </service>
    <service id="twig.form.engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine" public="false">
      <argument>%twig.form.resources%</argument>
      <argument type="service" id="twig"/>
    </service>
    <service id="twig.form.renderer" class="Symfony\Component\Form\FormRenderer" public="false">
      <tag name="twig.runtime"/>
      <argument type="service" id="twig.form.engine"/>
      <argument type="service" id="security.csrf.token_manager" on-invalid="null"/>
    </service>
    <service id="twig.command.debug" class="Symfony\Bridge\Twig\Command\DebugCommand" public="false">
      <tag name="console.command" command="debug:twig"/>
      <argument type="service" id="twig"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument>%kernel.bundles_metadata%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption/templates</argument>
      <argument type="service" id="debug.file_link_formatter" on-invalid="null"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\src</argument>
      <call method="setName">
        <argument>debug:twig</argument>
      </call>
    </service>
    <service id="twig.command.lint" class="Symfony\Bundle\TwigBundle\Command\LintCommand" public="false">
      <tag name="console.command" command="lint:twig"/>
      <argument type="service" id="twig"/>
      <call method="setName">
        <argument>lint:twig</argument>
      </call>
    </service>
    <service id=".2_HtmlDumper~Q63V.mP" class="Symfony\Component\VarDumper\Dumper\HtmlDumper" public="false">
      <argument>null</argument>
      <argument>UTF-8</argument>
      <argument>1</argument>
      <call method="setDisplayOptions">
        <argument type="collection">
          <argument key="maxStringLength">4096</argument>
          <argument key="fileLinkFormat" type="service" id="debug.file_link_formatter"/>
        </argument>
      </call>
    </service>
    <service id=".1_NonceGenerator~Q63V.mP" class="Symfony\Bundle\WebProfilerBundle\Csp\NonceGenerator" public="false"/>
    <service id="web_profiler.controller.profiler" class="Symfony\Bundle\WebProfilerBundle\Controller\ProfilerController" public="true">
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>%data_collector.templates%</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
    </service>
    <service id="web_profiler.controller.router" class="Symfony\Bundle\WebProfilerBundle\Controller\RouterController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="router.default" on-invalid="null"/>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="routing.expression_language_provider"/>
    </service>
    <service id="web_profiler.controller.exception" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionController" public="true">
      <argument type="service" id="profiler" on-invalid="null"/>
      <argument type="service" id="twig"/>
      <argument>true</argument>
      <argument type="service" id="debug.file_link_formatter"/>
      <argument type="service" id="error_handler.error_renderer.html"/>
      <deprecated>The "%service_id%" service is deprecated since Symfony 4.4, use the "web_profiler.controller.exception_panel" service instead.</deprecated>
    </service>
    <service id="web_profiler.controller.exception_panel" class="Symfony\Bundle\WebProfilerBundle\Controller\ExceptionPanelController" public="true">
      <argument type="service" id="error_handler.error_renderer.html"/>
      <argument type="service" id="profiler" on-invalid="null"/>
    </service>
    <service id="web_profiler.csp.handler" class="Symfony\Bundle\WebProfilerBundle\Csp\ContentSecurityPolicyHandler" public="false">
      <argument type="service" id=".1_NonceGenerator~Q63V.mP"/>
    </service>
    <service id="twig.extension.webprofiler" class="Symfony\Bundle\WebProfilerBundle\Twig\WebProfilerExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id=".2_HtmlDumper~Q63V.mP"/>
    </service>
    <service id="debug.file_link_formatter.url_format" class="string" public="false">
      <argument type="service" id="router.default"/>
      <argument>_profiler_open_file</argument>
      <argument>?file=%%f&amp;line=%%l#line%%l</argument>
      <factory class="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" method="generateUrlFormat"/>
    </service>
    <service id="web_profiler.debug_toolbar" class="Symfony\Bundle\WebProfilerBundle\EventListener\WebDebugToolbarListener" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="twig"/>
      <argument>false</argument>
      <argument>2</argument>
      <argument type="service" id="router.default" on-invalid="ignore"/>
      <argument>^/((index|app(_[\w]+)?)\.php/)?_wdt</argument>
      <argument type="service" id="web_profiler.csp.handler"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" public="true">
      <tag name="console.command"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <call method="setName">
        <argument>make:admin:migration</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" public="true">
      <tag name="console.command"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <call method="setName">
        <argument>make:admin:dashboard</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" class="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" public="true">
      <tag name="console.command"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker"/>
      <argument type="service" id="doctrine"/>
      <call method="setName">
        <argument>make:admin:crud</argument>
      </call>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker" class="EasyCorp\Bundle\EasyAdminBundle\Maker\ClassMaker" public="false">
      <argument type="service" id="kernel"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator" class="EasyCorp\Bundle\EasyAdminBundle\Maker\Migrator" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" class="EasyCorp\Bundle\EasyAdminBundle\Cache\CacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument type="service" id="router.default"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" class="EasyCorp\Bundle\EasyAdminBundle\Inspector\DataCollector" public="false">
      <tag name="data_collector" id="easyadmin" template="@EasyAdmin/inspector/data_collector.html.twig"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\ExceptionListener" public="false">
      <tag name="kernel.event_listener" event="kernel.exception" priority="-64"/>
      <argument>true</argument>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" class="EasyCorp\Bundle\EasyAdminBundle\Twig\EasyAdminTwigExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="service_locator_EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\EaCrudFormTypeExtension" public="false">
      <tag name="form.type_extension"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension" class="EasyCorp\Bundle\EasyAdminBundle\Form\Extension\CollectionTypeExtension" public="false">
      <tag name="form.type_extension"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" class="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker" public="false">
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter" class="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" class="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" public="false">
      <argument type="service" id="request_stack"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminRouterSubscriber" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\AdminRouterSubscriber" public="false">
      <tag name="kernel.event_subscriber"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory"/>
      <argument type="service" id="debug.controller_resolver"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="twig"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\UrlSigner"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="debug.controller_resolver"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener" class="EasyCorp\Bundle\EasyAdminBundle\EventListener\CrudResponseListener" public="false">
      <tag name="kernel.event_listener" event="Symfony\Component\HttpKernel\Event\ViewEvent"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="twig"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\AdminContextFactory" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev</argument>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" class="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" shared="false" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\UrlSigner"/>
    </service>
    <service id="service_locator_EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
      </argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Router\UrlSigner" class="EasyCorp\Bundle\EasyAdminBundle\Router\UrlSigner" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\MenuFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="security.logout_url_generator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" class="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" public="false">
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityPaginator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" public="false">
      <argument type="service" id="form.factory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FieldFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="tagged_iterator" tag="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" class="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="tagged_iterator" tag="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" public="false">
      <tag name="form.type" alias="ea_filters"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType" public="false">
      <tag name="form.type"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false">
      <tag name="ea.filter_configurator" priority="9999"/>
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false">
      <tag name="ea.filter_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" class="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
      <argument type="service" id="security.csrf.token_manager"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" class="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" public="false">
      <tag name="security.voter"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\AuthorizationChecker"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" class="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" public="false">
      <tag name="form.type" alias="ea_crud"/>
      <argument type="service" id="form.type_guesser.doctrine"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false">
      <tag name="ea.field_configurator" priority="-9999"/>
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument>UTF-8</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false">
      <tag name="ea.field_configurator" priority="9999"/>
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.data_collector"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="assets.packages"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption</argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Intl\IntlFormatter"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false">
      <tag name="ea.field_configurator"/>
      <argument type="service" id="translator.data_collector"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false">
      <tag name="ea.field_configurator"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" class="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\UrlSigner"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry"/>
      <deprecated>Since easycorp/easyadmin-bundle 3.2.0: The "%service_id% service is deprecated, use "EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" instead.</deprecated>
    </service>
    <service id="nelmio_cors.cors_listener" class="Nelmio\CorsBundle\EventListener\CorsListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="250"/>
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="0"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="nelmio_cors.options_resolver"/>
    </service>
    <service id="nelmio_cors.options_resolver" class="Nelmio\CorsBundle\Options\Resolver" public="false">
      <argument type="collection">
        <argument type="service" id="nelmio_cors.options_provider.config"/>
      </argument>
    </service>
    <service id="nelmio_cors.options_provider.config" class="Nelmio\CorsBundle\Options\ConfigProvider">
      <tag name="nelmio_cors.options_provider" priority="-1"/>
      <argument>%nelmio_cors.map%</argument>
      <argument>%nelmio_cors.defaults%</argument>
    </service>
    <service id="nelmio_cors.cacheable_response_vary_listener" class="Nelmio\CorsBundle\EventListener\CacheableResponseVaryListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onResponse"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.negotiator" class="Negotiation\Negotiator" public="false"/>
    <service id="api_platform.resource_class_resolver" class="ApiPlatform\Core\Api\ResourceClassResolver" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.operation_method_resolver" class="ApiPlatform\Core\Bridge\Symfony\Routing\OperationMethodResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.route_name_resolver.cached" class="ApiPlatform\Core\Bridge\Symfony\Routing\CachedRouteNameResolver" public="false">
      <argument type="service" id="api_platform.cache.route_name_resolver"/>
      <argument type="service" id="api_platform.route_name_resolver.cached.inner"/>
    </service>
    <service id="api_platform.route_loader" class="ApiPlatform\Core\Bridge\Symfony\Routing\ApiLoader" public="false">
      <tag name="routing.loader"/>
      <argument type="service" id="kernel"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="service_container"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>false</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
    </service>
    <service id="api_platform.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\Router" public="false">
      <argument type="service" id="router.default"/>
      <argument>1</argument>
    </service>
    <service id="api_platform.iri_converter" class="ApiPlatform\Core\Bridge\Symfony\Routing\IriConverter" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="api_platform.route_name_resolver.cached"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider" on-invalid="ignore"/>
      <argument type="service" id="api_platform.identifier.converter" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.formats_provider" class="ApiPlatform\Core\Api\FormatsProvider">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="api_platform.serializer.context_builder.filter" class="ApiPlatform\Core\Serializer\SerializerFilterContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter.inner"/>
    </service>
    <service id="api_platform.serializer.property_filter" class="ApiPlatform\Core\Serializer\Filter\PropertyFilter" public="false" abstract="true">
      <argument>properties</argument>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.serializer.group_filter" class="ApiPlatform\Core\Serializer\Filter\GroupFilter" public="false" abstract="true"/>
    <service id="api_platform.serializer.normalizer.item" class="ApiPlatform\Core\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-895"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="service" id="debug.api_platform.item_data_provider" on-invalid="ignore"/>
      <argument>false</argument>
      <argument>null</argument>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached" on-invalid="ignore"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="api_platform.operation_path_resolver.router" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouterOperationPathResolver" public="false">
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.operation_path_resolver.custom"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
    </service>
    <service id="api_platform.operation_path_resolver.custom" class="ApiPlatform\Core\PathResolver\CustomOperationPathResolver" public="false">
      <argument type="service" id="api_platform.operation_path_resolver.generator"/>
    </service>
    <service id="api_platform.operation_path_resolver.generator" class="ApiPlatform\Core\PathResolver\OperationPathResolver" public="false">
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
    </service>
    <service id="api_platform.operation_path_resolver.underscore" class="ApiPlatform\Core\PathResolver\UnderscoreOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.underscore" instead.</deprecated>
    </service>
    <service id="api_platform.operation_path_resolver.dash" class="ApiPlatform\Core\PathResolver\DashOperationPathResolver" public="false">
      <deprecated>The "%service_id%" service is deprecated since API Platform 2.1 and will be removed in 3.0. Use "api_platform.path_segment_name_generator.dash" instead.</deprecated>
    </service>
    <service id="api_platform.path_segment_name_generator.underscore" class="ApiPlatform\Core\Operation\UnderscorePathSegmentNameGenerator" public="false"/>
    <service id="api_platform.path_segment_name_generator.dash" class="ApiPlatform\Core\Operation\DashPathSegmentNameGenerator" public="false"/>
    <service id="api_platform.listener.request.add_format" class="ApiPlatform\Core\EventListener\AddFormatListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="7"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.negotiator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.formats%</argument>
    </service>
    <service id="api_platform.listener.request.read" class="ApiPlatform\Core\EventListener\ReadListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="4"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.identifier.converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.write" class="ApiPlatform\Core\EventListener\WriteListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="32"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.listener.request.deserialize" class="ApiPlatform\Core\EventListener\DeserializeListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="2"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.serialize" class="ApiPlatform\Core\EventListener\SerializeListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="16"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.serializer.context_builder.filter"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.view.respond" class="ApiPlatform\Core\EventListener\RespondListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="8"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.listener.exception.validation" class="ApiPlatform\Core\Bridge\Symfony\Validator\EventListener\ValidationExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException"/>
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.listener.exception" class="ApiPlatform\Core\EventListener\ExceptionListener">
      <tag name="kernel.event_listener" event="kernel.exception" method="onKernelException" priority="-96"/>
      <tag name="monolog.logger" channel="request"/>
      <argument>api_platform.action.exception</argument>
      <argument type="service" id="logger" on-invalid="null"/>
      <argument>false</argument>
      <argument type="service" id="exception_listener" on-invalid="null"/>
    </service>
    <service id="api_platform.action.placeholder" class="ApiPlatform\Core\Action\PlaceholderAction" public="true"/>
    <service id="api_platform.action.not_found" class="ApiPlatform\Core\Action\NotFoundAction" public="true"/>
    <service id="api_platform.action.entrypoint" class="ApiPlatform\Core\Action\EntrypointAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
    </service>
    <service id="api_platform.action.documentation" class="ApiPlatform\Core\Documentation\Action\DocumentationAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
      <argument type="service" id="api_platform.openapi.factory" on-invalid="null"/>
    </service>
    <service id="api_platform.action.exception" class="ApiPlatform\Core\Action\ExceptionAction" public="true">
      <argument type="service" id="serializer"/>
      <argument>%api_platform.error_formats%</argument>
      <argument>%api_platform.exception_to_status%</argument>
    </service>
    <service id="api_platform.identifiers_extractor.cached" class="ApiPlatform\Core\Api\CachedIdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.cache.identifiers_extractor"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached.inner"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.identifier.converter" class="ApiPlatform\Core\Identifier\IdentifierConverter" public="false">
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.integer" class="ApiPlatform\Core\Identifier\Normalizer\IntegerDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer" priority="-100"/>
    </service>
    <service id="api_platform.identifier.date_normalizer" class="ApiPlatform\Core\Identifier\Normalizer\DateTimeIdentifierDenormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer" priority="-100"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached" class="ApiPlatform\Core\Operation\Factory\CachedSubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.cache.subresource_operation_factory"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached.inner"/>
    </service>
    <service id="api_platform.cache.route_name_resolver" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.route_name_resolver.recorder_inner"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.identifiers_extractor.recorder_inner"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.subresource_operation_factory.recorder_inner"/>
    </service>
    <service id="api_platform.cache_warmer.cache_pool_clearer" class="ApiPlatform\Core\Bridge\Symfony\Bundle\CacheWarmer\CachePoolClearerCacheWarmer" public="false">
      <tag name="kernel.cache_warmer" priority="64"/>
      <argument type="service" id="cache.system_clearer"/>
      <argument type="collection">
        <argument>api_platform.cache.metadata.property</argument>
        <argument>api_platform.cache.metadata.resource</argument>
        <argument>api_platform.cache.route_name_resolver</argument>
        <argument>api_platform.cache.identifiers_extractor</argument>
        <argument>api_platform.cache.subresource_operation_factory</argument>
        <argument>api_platform.elasticsearch.cache.metadata.document</argument>
      </argument>
    </service>
    <service id="api_platform.serializer_locator" class="Symfony\Component\DependencyInjection\ServiceLocator">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="serializer" type="service_closure" id="serializer"/>
      </argument>
    </service>
    <service id="api_platform.pagination" class="ApiPlatform\Core\DataProvider\Pagination">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>%api_platform.collection.pagination%</argument>
      <argument>%api_platform.graphql.collection.pagination%</argument>
    </service>
    <service id="api_platform.pagination_options" class="ApiPlatform\Core\DataProvider\PaginationOptions">
      <argument>true</argument>
      <argument>page</argument>
      <argument>false</argument>
      <argument>itemsPerPage</argument>
      <argument>false</argument>
      <argument>pagination</argument>
    </service>
    <service id="api_platform.filter_locator" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection"/>
    </service>
    <service id="api_platform.filter_collection_factory" class="ApiPlatform\Core\Api\FilterCollectionFactory" public="false">
      <argument type="collection"/>
    </service>
    <service id="api_platform.filters" class="ApiPlatform\Core\Api\FilterCollection" public="false">
      <argument type="service" id="api_platform.filter_locator"/>
      <factory service="api_platform.filter_collection_factory" method="createFilterCollectionFromLocator"/>
      <deprecated>The "%service_id%" service is deprecated since 2.1 and will be removed in 3.0. Use the "api_platform.filter_locator" service instead.</deprecated>
    </service>
    <service id="api_platform.identifier.symfony_ulid_normalizer" class="ApiPlatform\Core\Bridge\Symfony\Identifier\Normalizer\UlidNormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.identifier.symfony_uuid_normalizer" class="ApiPlatform\Core\Bridge\Symfony\Identifier\Normalizer\UuidNormalizer" public="false">
      <tag name="api_platform.identifier.denormalizer"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.input_output" class="ApiPlatform\Core\Metadata\Resource\Factory\InputOutputResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.short_name" class="ApiPlatform\Core\Metadata\Resource\Factory\ShortNameResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.php_doc"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.operation" class="ApiPlatform\Core\Metadata\Resource\Factory\OperationResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.filter_metadata_factory.annotation"/>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.formats" class="ApiPlatform\Core\Metadata\Resource\Factory\FormatsResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.operation"/>
      <argument>%api_platform.formats%</argument>
      <argument>%api_platform.patch_formats%</argument>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Resource\Factory\CachedResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.resource"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.formats"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyNameCollectionFactory" public="false">
      <argument type="service" id="property_info"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.yaml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.property_info" class="ApiPlatform\Core\Bridge\Symfony\PropertyInfo\Metadata\Property\PropertyInfoPropertyMetadataFactory" public="false">
      <argument type="service" id="property_info"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.serializer" class="ApiPlatform\Core\Metadata\Property\Factory\SerializerPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
      <argument type="service" id="api_platform.doctrine.orm.metadata.property.metadata_factory"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.cached" class="ApiPlatform\Core\Metadata\Property\Factory\CachedPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.cache.metadata.property"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.validator"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.default_property" class="ApiPlatform\Core\Metadata\Property\Factory\DefaultPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.property.metadata_factory.serializer"/>
    </service>
    <service id="api_platform.cache.metadata.resource" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.resource.recorder_inner"/>
    </service>
    <service id="api_platform.cache.metadata.property" class="Symfony\Component\Cache\Adapter\TraceableAdapter" public="false">
      <tag name="cache.pool"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="api_platform.cache.metadata.property.recorder_inner"/>
    </service>
    <service id="api_platform.metadata.extractor.xml" class="ApiPlatform\Core\Metadata\Extractor\XmlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.property_info"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.xml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.xml"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceNameCollectionFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument>%api_platform.resource_class_directories%</argument>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.xml"/>
      <argument>%api_platform.defaults%</argument>
    </service>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Resource\Factory\AnnotationResourceFilterMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.short_name"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationPropertyMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.subresource.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation" class="ApiPlatform\Core\Metadata\Property\Factory\AnnotationSubresourceMetadataFactory" public="false">
      <argument type="service" id="annotations.cached_reader"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.default_property"/>
    </service>
    <service id="api_platform.metadata.extractor.yaml" class="ApiPlatform\Core\Metadata\Extractor\YamlExtractor" public="false">
      <argument type="collection"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Resource\Factory\ExtractorResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.annotation"/>
      <argument>%api_platform.defaults%</argument>
    </service>
    <service id="api_platform.metadata.property.name_collection_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyNameCollectionFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.xml"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.yaml" class="ApiPlatform\Core\Metadata\Property\Factory\ExtractorPropertyMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.extractor.yaml"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.annotation"/>
    </service>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc" class="ApiPlatform\Core\Metadata\Resource\Factory\PhpDocResourceMetadataFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.input_output"/>
    </service>
    <service id="api_platform.json_schema.type_factory" class="ApiPlatform\Core\JsonSchema\TypeFactory" public="false">
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <call method="setSchemaFactory">
        <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      </call>
    </service>
    <service id="api_platform.json_schema.json_schema_generate_command" class="ApiPlatform\Core\JsonSchema\Command\JsonSchemaGenerateCommand" public="false">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument>%api_platform.formats%</argument>
      <call method="setName">
        <argument>api:json-schema:generate</argument>
      </call>
    </service>
    <service id=".2_ObjectNormalizer~7uWSGdj" class="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" public="false">
      <argument>null</argument>
      <argument>null</argument>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="property_info"/>
    </service>
    <service id=".1_Serializer~7uWSGdj" class="Symfony\Component\Serializer\Serializer" public="false">
      <argument type="collection">
        <argument type="service" id=".2_ObjectNormalizer~7uWSGdj"/>
      </argument>
      <argument type="collection">
        <argument type="service" id="serializer.encoder.json"/>
      </argument>
    </service>
    <service id="api_platform.openapi.options" class="ApiPlatform\Core\OpenApi\Options">
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument></argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.openapi.factory" class="ApiPlatform\Core\OpenApi\Factory\OpenApiFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.operation_path_resolver.router"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument>%api_platform.formats%</argument>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.pagination_options"/>
    </service>
    <service id="api_platform.openapi.command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\OpenApiCommand">
      <tag name="console.command"/>
      <argument type="service" id="api_platform.openapi.factory"/>
      <argument type="service" id="serializer"/>
      <call method="setName">
        <argument>api:openapi:export</argument>
      </call>
    </service>
    <service id="api_platform.openapi.normalizer.api_gateway" class="ApiPlatform\Core\Swagger\Serializer\ApiGatewayNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.openapi.normalizer.api_gateway.inner"/>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway" class="ApiPlatform\Core\Swagger\Serializer\ApiGatewayNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.swagger.normalizer.api_gateway.inner"/>
    </service>
    <service id="api_platform.swagger.command.swagger_command" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Command\SwaggerCommand">
      <tag name="console.command"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>null</argument>
      <argument>%api_platform.swagger.versions%</argument>
      <call method="setName">
        <argument>api:swagger:export</argument>
      </call>
    </service>
    <service id="api_platform.swagger.listener.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\EventListener\SwaggerUiListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest"/>
      <tag name="container.hot_path"/>
    </service>
    <service id="api_platform.swagger.action.ui" class="ApiPlatform\Core\Bridge\Symfony\Bundle\Action\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="router.default"/>
      <argument></argument>
      <argument></argument>
      <argument>0.0.0</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument></argument>
      <argument></argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>%api_platform.swagger.versions%</argument>
      <argument type="service" id="api_platform.swagger_ui.action"/>
      <argument>null</argument>
    </service>
    <service id="api_platform.swagger_ui.context" class="ApiPlatform\Core\Bridge\Symfony\Bundle\SwaggerUi\SwaggerUiContext">
      <argument>true</argument>
      <argument>true</argument>
      <argument>true</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>false</argument>
      <argument>null</argument>
    </service>
    <service id="api_platform.swagger_ui.action" class="ApiPlatform\Core\Bridge\Symfony\Bundle\SwaggerUi\SwaggerUiAction" public="true">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="twig" on-invalid="null"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="serializer"/>
      <argument type="service" id="api_platform.openapi.factory"/>
      <argument type="service" id="api_platform.openapi.options"/>
      <argument type="service" id="api_platform.swagger_ui.context"/>
      <argument>%api_platform.formats%</argument>
      <argument></argument>
      <argument></argument>
    </service>
    <service id="api_platform.jsonld.context_builder" class="ApiPlatform\Core\JsonLd\ContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.jsonld.normalizer.item" class="ApiPlatform\Core\JsonLd\Serializer\ItemNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-890"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="serializer.mapping.class_metadata_factory" on-invalid="ignore"/>
      <argument type="collection"/>
      <argument type="tagged_iterator" tag="api_platform.data_transformer"/>
      <argument type="service" id="api_platform.security.resource_access_checker" on-invalid="ignore"/>
    </service>
    <service id="api_platform.jsonld.normalizer.object" class="ApiPlatform\Core\JsonLd\Serializer\ObjectNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-995"/>
      <argument type="service" id="serializer.normalizer.object"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.jsonld.context_builder"/>
    </service>
    <service id="api_platform.jsonld.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonld</argument>
    </service>
    <service id="api_platform.jsonld.action.context" class="ApiPlatform\Core\JsonLd\Action\ContextAction" public="true">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.metadata.resource.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.hydra.normalizer.documentation" class="ApiPlatform\Core\Hydra\Serializer\DocumentationNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.router"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.listener.response.add_link_header" class="ApiPlatform\Core\Hydra\EventListener\AddLinkHeaderListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.constraint_violation_list" class="ApiPlatform\Core\Hydra\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="service" id="api_platform.router"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.hydra.normalizer.entrypoint" class="ApiPlatform\Core\Hydra\Serializer\EntrypointNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.iri_converter"/>
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.hydra.normalizer.error" class="ApiPlatform\Core\Hydra\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-800"/>
      <argument type="service" id="api_platform.router"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view" class="ApiPlatform\Core\Hydra\Serializer\PartialCollectionViewNormalizer" public="false">
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view.inner"/>
      <argument>page</argument>
      <argument>pagination</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="api_platform.hydra.normalizer.collection_filters" class="ApiPlatform\Core\Hydra\Serializer\CollectionFiltersNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-985"/>
      <argument type="service" id="api_platform.hydra.normalizer.partial_collection_view"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory" class="ApiPlatform\Core\Hydra\JsonSchema\SchemaFactory">
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory.inner"/>
    </service>
    <service id="api_platform.problem.encoder" class="ApiPlatform\Core\Serializer\JsonEncoder" public="false">
      <tag name="serializer.encoder"/>
      <argument>jsonproblem</argument>
    </service>
    <service id="api_platform.problem.normalizer.constraint_violation_list" class="ApiPlatform\Core\Problem\Serializer\ConstraintViolationListNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-780"/>
      <argument type="collection"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.problem.normalizer.error" class="ApiPlatform\Core\Problem\Serializer\ErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-810"/>
      <argument>true</argument>
    </service>
    <service id="api_platform.doctrine.metadata_factory" class="Doctrine\Persistence\Mapping\ClassMetadataFactory" public="false">
      <factory service="doctrine.orm.default_entity_manager" method="getMetadataFactory"/>
    </service>
    <service id="api_platform.doctrine.orm.data_persister" class="ApiPlatform\Core\Bridge\Doctrine\Common\DataPersister" public="false">
      <tag name="api_platform.data_persister" priority="-1000"/>
      <argument type="service" id="doctrine"/>
    </service>
    <service id="api_platform.doctrine.orm.collection_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.item_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.subresource_data_provider" public="false" abstract="true">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.collection_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\CollectionDataProvider" public="false">
      <tag name="api_platform.collection_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
    </service>
    <service id="api_platform.doctrine.orm.default.item_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\ItemDataProvider" public="false">
      <tag name="api_platform.item_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.default.subresource_data_provider" class="ApiPlatform\Core\Bridge\Doctrine\Orm\SubresourceDataProvider" public="false">
      <tag name="api_platform.subresource_data_provider"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.collection"/>
      <argument type="tagged_iterator" tag="api_platform.doctrine.orm.query_extension.item"/>
    </service>
    <service id="api_platform.doctrine.orm.search_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="api_platform.iri_converter"/>
      <argument key="3" type="service" id="property_accessor"/>
      <argument key="4" type="service" id="logger" on-invalid="ignore"/>
      <argument key="6" type="service" id="api_platform.identifiers_extractor.cached" on-invalid="ignore"/>
      <argument key="7" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.order_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2">order</argument>
      <argument key="3" type="service" id="logger" on-invalid="ignore"/>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.range_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.date_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.boolean_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.numeric_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="logger" on-invalid="ignore"/>
      <argument key="4" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.exists_filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" public="false" abstract="true">
      <argument key="0" type="service" id="doctrine"/>
      <argument key="1">null</argument>
      <argument key="2" type="service" id="logger" on-invalid="ignore"/>
      <argument key="4">exists</argument>
      <argument key="5" type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
    </service>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Metadata\Property\DoctrineOrmPropertyMetadataFactory" public="false">
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.property_info"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.item" priority="-8"/>
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-18"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>30</argument>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>false</argument>
      <argument type="service" id="serializer.mapping.class_metadata_factory"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-16"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.filter_eager_loading" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-17"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument>true</argument>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.pagination" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-64"/>
      <argument type="service" id="doctrine"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.pagination"/>
    </service>
    <service id="api_platform.doctrine.orm.query_extension.order" class="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" public="false">
      <tag name="api_platform.doctrine.orm.query_extension.collection" priority="-32"/>
      <argument>ASC</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.http_cache.listener.response.configure" class="ApiPlatform\Core\HttpCache\EventListener\AddHeadersListener">
      <tag name="kernel.event_listener" event="kernel.response" method="onKernelResponse" priority="-1"/>
      <tag name="container.hot_path"/>
      <argument>true</argument>
      <argument>null</argument>
      <argument>null</argument>
      <argument>%api_platform.http_cache.vary%</argument>
      <argument>null</argument>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Validator">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="api_platform.metadata.property.metadata_factory.validator" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\ValidatorPropertyMetadataFactory" public="false">
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.yaml"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.length_restriction" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaLengthRestriction" public="false">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.one_of_restriction" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaOneOfRestriction" public="false">
      <tag name="api_platform.metadata.property_schema_restriction"/>
      <argument type="tagged_iterator" tag="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.regex_restriction" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaRegexRestriction" public="false">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.metadata.property_schema.format_restriction" class="ApiPlatform\Core\Bridge\Symfony\Validator\Metadata\Property\Restriction\PropertySchemaFormat" public="false">
      <tag name="api_platform.metadata.property_schema_restriction"/>
    </service>
    <service id="api_platform.listener.view.validate" class="ApiPlatform\Core\Validator\EventListener\ValidateListener">
      <tag name="kernel.event_listener" event="kernel.view" method="onKernelView" priority="64"/>
      <argument type="service" id="api_platform.validator"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.validator.query_parameter_validator" class="ApiPlatform\Core\Filter\QueryParameterValidator" public="false">
      <argument type="service" id="api_platform.filter_locator"/>
    </service>
    <service id="api_platform.listener.view.validate_query_parameters" class="ApiPlatform\Core\EventListener\QueryParameterValidateListener" public="false">
      <tag name="kernel.event_listener" event="kernel.request" method="onKernelRequest" priority="16"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.validator.query_parameter_validator"/>
    </service>
    <service id="api_platform.data_collector.request" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataCollector\RequestDataCollector" public="false">
      <tag name="data_collector" template="@ApiPlatform/DataCollector/request.html.twig" id="api_platform.data_collector.request" priority="334"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument type="service" id="debug.api_platform.collection_data_provider"/>
      <argument type="service" id="debug.api_platform.item_data_provider"/>
      <argument type="service" id="debug.api_platform.subresource_data_provider"/>
      <argument type="service" id="debug.api_platform.data_persister"/>
    </service>
    <service id="debug.api_platform.collection_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainCollectionDataProvider">
      <argument type="service" id="debug.api_platform.collection_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.item_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainItemDataProvider">
      <argument type="service" id="debug.api_platform.item_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataProvider\TraceableChainSubresourceDataProvider">
      <argument type="service" id="debug.api_platform.subresource_data_provider.inner"/>
    </service>
    <service id="debug.api_platform.data_persister" class="ApiPlatform\Core\Bridge\Symfony\Bundle\DataPersister\TraceableChainDataPersister">
      <argument type="service" id="debug.api_platform.data_persister.inner"/>
    </service>
    <service id="api_platform.security.resource_access_checker" class="ApiPlatform\Core\Security\ResourceAccessChecker" public="false">
      <argument type="service" id="security.expression_language" on-invalid="null"/>
      <argument type="service" id="security.authentication.trust_resolver" on-invalid="null"/>
      <argument type="service" id="security.role_hierarchy" on-invalid="null"/>
      <argument type="service" id="security.token_storage" on-invalid="null"/>
      <argument type="service" id="security.authorization_checker" on-invalid="null"/>
    </service>
    <service id="api_platform.security.listener.request.deny_access" class="ApiPlatform\Core\Security\EventListener\DenyAccessListener">
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurity" priority="3"/>
      <tag name="kernel.event_listener" event="kernel.request" method="onSecurityPostDenormalize" priority="1"/>
      <tag name="container.hot_path"/>
      <tag name="container.hot_path"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.security.resource_access_checker"/>
    </service>
    <service id="api_platform.security.expression_language_provider" class="ApiPlatform\Core\Security\Core\Authorization\ExpressionLanguageProvider" public="false">
      <tag name="security.expression_language_provider"/>
    </service>
    <service id="vich_uploader.adapter.mongodb" class="Vich\UploaderBundle\Adapter\ODM\MongoDB\MongoDBAdapter" public="false"/>
    <service id="vich_uploader.adapter.orm" class="Vich\UploaderBundle\Adapter\ORM\DoctrineORMAdapter" public="false"/>
    <service id="vich_uploader.adapter.phpcr" class="Vich\UploaderBundle\Adapter\PHPCR\PHPCRAdapter" public="false"/>
    <service id="vich_uploader.listener.doctrine.base" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.orm" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.orm" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.orm" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.orm" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.mongodb" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.inject.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\InjectListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.clean.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.phpcr" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <argument></argument>
      <argument></argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.storage.file_system" class="Vich\UploaderBundle\Storage\FileSystemStorage" public="false">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
    </service>
    <service id="vich_uploader.file_injector" class="Vich\UploaderBundle\Injector\FileInjector" public="false">
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="vich_uploader.metadata.file_locator" class="Metadata\Driver\FileLocator" public="false">
      <argument type="collection"/>
    </service>
    <service id="vich_uploader.metadata_driver.annotation" class="Vich\UploaderBundle\Metadata\Driver\AnnotationDriver" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="vich_uploader.metadata_driver.xml" class="Vich\UploaderBundle\Metadata\Driver\XmlDriver" public="false">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.yaml" class="Vich\UploaderBundle\Metadata\Driver\YamlDriver" public="false">
      <argument type="service" id="vich_uploader.metadata.file_locator"/>
    </service>
    <service id="vich_uploader.metadata_driver.chain" class="Metadata\Driver\DriverChain" public="false">
      <argument type="collection">
        <argument type="service" id="vich_uploader.metadata_driver.xml"/>
        <argument type="service" id="vich_uploader.metadata_driver.annotation"/>
        <argument type="service" id="vich_uploader.metadata_driver.yaml"/>
      </argument>
    </service>
    <service id="vich_uploader.metadata.cache.file_cache" class="Metadata\Cache\FileCache" public="false">
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/vich_uploader</argument>
    </service>
    <service id="vich_uploader.metadata_factory" class="Metadata\MetadataFactory" public="false">
      <argument type="service" id="vich_uploader.metadata_driver.chain"/>
      <argument>Metadata\ClassHierarchyMetadata</argument>
      <argument>true</argument>
      <call method="setCache">
        <argument type="service" id="vich_uploader.metadata.cache.file_cache" on-invalid="ignore"/>
      </call>
    </service>
    <service id="vich_uploader.metadata_reader" class="Vich\UploaderBundle\Metadata\MetadataReader" public="false">
      <argument type="service" id="vich_uploader.metadata_factory"/>
    </service>
    <service id="Vich\UploaderBundle\Metadata\CacheWarmer" class="Vich\UploaderBundle\Metadata\CacheWarmer" public="false">
      <tag name="kernel.cache_warmer"/>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/vich_uploader</argument>
      <argument type="service" id="vich_uploader.metadata_reader"/>
    </service>
    <service id="vich_uploader.property_mapping_factory" class="Vich\UploaderBundle\Mapping\PropertyMappingFactory" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument>%vich_uploader.mappings%</argument>
      <argument>_name</argument>
    </service>
    <service id="Vich\UploaderBundle\Naming\UniqidNamer" class="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyNamer" class="Vich\UploaderBundle\Naming\PropertyNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\OrignameNamer" class="Vich\UploaderBundle\Naming\OrignameNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\HashNamer" class="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\Base64Namer" class="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" class="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" class="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true">
      <argument type="service" id="property_accessor" on-invalid="null"/>
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="vich_uploader.current_date_time_helper" class="Vich\UploaderBundle\Naming\CurrentDateTimeHelper" public="false"/>
    <service id="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" class="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true">
      <argument type="service" id="vich_uploader.current_date_time_helper" on-invalid="null"/>
      <argument type="service" id="property_accessor" on-invalid="null"/>
    </service>
    <service id="Vich\UploaderBundle\Naming\SmartUniqueNamer" class="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true">
      <argument type="service" id="Vich\UploaderBundle\Util\Transliterator"/>
    </service>
    <service id="Vich\UploaderBundle\Util\Transliterator" class="Vich\UploaderBundle\Util\Transliterator" public="false">
      <argument type="service" id="slugger"/>
    </service>
    <service id="vich_uploader.download_handler" class="Vich\UploaderBundle\Handler\DownloadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="vich_uploader.upload_handler" class="Vich\UploaderBundle\Handler\UploadHandler" public="true">
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.file_injector"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="vich_uploader.command.mapping_debug_class" class="Vich\UploaderBundle\Command\MappingDebugClassCommand" public="false">
      <tag name="console.command" command="vich:mapping:debug-class"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:debug-class</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_debug" class="Vich\UploaderBundle\Command\MappingDebugCommand" public="false">
      <tag name="console.command" command="vich:mapping:debug"/>
      <argument>%vich_uploader.mappings%</argument>
      <call method="setName">
        <argument>vich:mapping:debug</argument>
      </call>
    </service>
    <service id="vich_uploader.command.mapping_list_classes" class="Vich\UploaderBundle\Command\MappingListClassesCommand" public="false">
      <tag name="console.command" command="vich:mapping:list-classes"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <call method="setName">
        <argument>vich:mapping:list-classes</argument>
      </call>
    </service>
    <service id="Vich\UploaderBundle\DataCollector\MappingCollector" class="Vich\UploaderBundle\DataCollector\MappingCollector" public="false">
      <tag name="data_collector" template="@VichUploader/Collector/mapping_collector.html.twig" id="vich_uploader.mapping_collector"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
    </service>
    <service id="vich_uploader.form.type.file" class="Vich\UploaderBundle\Form\Type\VichFileType" public="true">
      <tag name="form.type" alias="vich_file"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
    </service>
    <service id="vich_uploader.form.type.image" class="Vich\UploaderBundle\Form\Type\VichImageType" public="true">
      <tag name="form.type" alias="vich_image"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
      <argument type="service" id="vich_uploader.property_mapping_factory"/>
      <argument type="service" id="property_accessor"/>
      <argument>null</argument>
    </service>
    <service id="Vich\UploaderBundle\Templating\Helper\UploaderHelper" class="Vich\UploaderBundle\Templating\Helper\UploaderHelper" public="false">
      <tag name="templating.helper" alias="vich_uploader"/>
      <argument type="service" id="vich_uploader.storage.file_system"/>
    </service>
    <service id="Vich\UploaderBundle\Twig\Extension\UploaderExtension" class="Vich\UploaderBundle\Twig\Extension\UploaderExtension" public="false">
      <tag name="twig.extension"/>
      <argument type="service" id="Vich\UploaderBundle\Templating\Helper\UploaderHelper"/>
    </service>
    <service id="vich_uploader.listener.clean.post_images" class="Vich\UploaderBundle\EventListener\Doctrine\CleanListener" public="false">
      <tag name="doctrine.event_subscriber" priority="50"/>
      <argument>post_images</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.remove.post_images" class="Vich\UploaderBundle\EventListener\Doctrine\RemoveListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>post_images</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="vich_uploader.listener.upload.post_images" class="Vich\UploaderBundle\EventListener\Doctrine\UploadListener" public="false">
      <tag name="doctrine.event_subscriber" priority="0"/>
      <argument>post_images</argument>
      <argument type="service" id="vich_uploader.adapter.orm"/>
      <argument type="service" id="vich_uploader.metadata_reader"/>
      <argument type="service" id="vich_uploader.upload_handler"/>
    </service>
    <service id="fos_rest.view_handler.default" class="FOS\RestBundle\View\ViewHandler" public="false">
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="router.default"/>
      <argument type="service" id="fos_rest.serializer.symfony"/>
      <argument type="service" id="request_stack"/>
      <argument type="collection">
        <argument key="json">false</argument>
        <argument key="xml">false</argument>
      </argument>
      <argument>400</argument>
      <argument>204</argument>
      <argument>false</argument>
      <argument type="collection">
        <argument key="serializeNullStrategy">false</argument>
      </argument>
      <factory class="FOS\RestBundle\View\ViewHandler" method="create"/>
    </service>
    <service id="fos_rest.view_handler.jsonp" class="FOS\RestBundle\View\JsonpHandler" public="false">
      <argument></argument>
    </service>
    <service id="fos_rest.request.param_fetcher" class="FOS\RestBundle\Request\ParamFetcher">
      <argument type="service" id="service_container"/>
      <argument type="service" id="fos_rest.request.param_fetcher.reader"/>
      <argument type="service" id="request_stack"/>
      <argument type="service" id="debug.validator" on-invalid="null"/>
    </service>
    <service id="fos_rest.request.param_fetcher.reader" class="FOS\RestBundle\Request\ParamReader" public="false">
      <argument type="service" id="annotations.cached_reader"/>
    </service>
    <service id="fos_rest.serializer.jms" class="FOS\RestBundle\Serializer\JMSSerializerAdapter" public="false">
      <argument type="service" id="jms_serializer.serializer"/>
      <argument type="service" id="jms_serializer.serialization_context_factory"/>
      <argument type="service" id="jms_serializer.deserialization_context_factory"/>
    </service>
    <service id="fos_rest.serializer.symfony" class="FOS\RestBundle\Serializer\SymfonySerializerAdapter" public="false">
      <argument type="service" id="serializer"/>
    </service>
    <service id="fos_rest.serializer.form_error_normalizer" class="FOS\RestBundle\Serializer\Normalizer\FormErrorNormalizer" public="false">
      <tag name="serializer.normalizer" priority="-10"/>
    </service>
    <service id="lexik_jwt_authentication.check_config_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\CheckConfigCommand">
      <tag name="console.command" command="lexik:jwt:check-config"/>
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:check-config</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_token_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateTokenCommand" public="true">
      <tag name="console.command" command="lexik:jwt:generate-token"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="iterator">
        <argument type="service" id="security.user.provider.concrete.app_user_provider"/>
      </argument>
      <call method="setName">
        <argument>lexik:jwt:generate-token</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.generate_keypair_command" class="Lexik\Bundle\JWTAuthenticationBundle\Command\GenerateKeyPairCommand">
      <tag name="console.command" command="lexik:jwt:generate-keypair"/>
      <argument type="service" id="filesystem"/>
      <argument>%env(resolve:JWT_SECRET_KEY)%</argument>
      <argument>%env(resolve:JWT_PUBLIC_KEY)%</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <argument>RS256</argument>
      <call method="setName">
        <argument>lexik:jwt:generate-keypair</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Authentication\Provider\JWTProvider" public="false">
      <argument></argument>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.listener" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Firewall\JWTListener" public="false">
      <argument type="service" id="security.token_storage"/>
      <argument type="service" id="security.authentication.manager"/>
      <argument></argument>
      <call method="setDispatcher">
        <argument type="service" id="debug.event_dispatcher"/>
      </call>
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.security.authentication.entry_point" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\EntryPoint\JWTEntryPoint" public="false">
      <deprecated>The "%service_id%" service is deprecated since LexikJWTAuthenticationBundle version 2.0 and will be removed in 3.0</deprecated>
    </service>
    <service id="lexik_jwt_authentication.key_loader.openssl" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\OpenSSLKeyLoader" public="false">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
      <deprecated>The "%service_id%" service is deprecated since version 2.5 and will be removed in 3.0. Use lexik_jwt_authentication.key_loader.raw instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.default" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\DefaultJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>7200</argument>
      <argument>0</argument>
      <deprecated>The "%service_id%" is deprecated since version 2.5 and will be removed in 5.0, use "lexik_jwt_authentication.jws_provider.lcobucci" instead.</deprecated>
    </service>
    <service id="lexik_jwt_authentication.jwt_manager" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTManager" public="true">
      <argument type="service" id="lexik_jwt_authentication.encoder.lcobucci"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument>username</argument>
      <call method="setUserIdentityField">
        <argument>username</argument>
      </call>
    </service>
    <service id="lexik_jwt_authentication.key_loader.abstract" public="false" abstract="true">
      <argument></argument>
      <argument></argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.key_loader.raw" class="Lexik\Bundle\JWTAuthenticationBundle\Services\KeyLoader\RawKeyLoader" public="false">
      <argument>%env(resolve:JWT_SECRET_KEY)%</argument>
      <argument>%env(resolve:JWT_PUBLIC_KEY)%</argument>
      <argument>%env(JWT_PASSPHRASE)%</argument>
    </service>
    <service id="lexik_jwt_authentication.encoder.default" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\DefaultEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.default"/>
    </service>
    <service id="lexik_jwt_authentication.encoder.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Encoder\LcobucciJWTEncoder">
      <argument type="service" id="lexik_jwt_authentication.jws_provider.lcobucci"/>
    </service>
    <service id="lexik_jwt_authentication.jws_provider.lcobucci" class="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\LcobucciJWSProvider" public="false">
      <argument type="service" id="lexik_jwt_authentication.key_loader.raw"/>
      <argument>openssl</argument>
      <argument>RS256</argument>
      <argument>7200</argument>
      <argument>0</argument>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_success" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="collection"/>
    </service>
    <service id="lexik_jwt_authentication.handler.authentication_failure" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler">
      <tag name="monolog.logger" channel="security"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id=".1_TokenStorage~ZDDj_Zv" class="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorage" public="false"/>
    <service id="lexik_jwt_authentication.security.guard.jwt_token_authenticator" class="Lexik\Bundle\JWTAuthenticationBundle\Security\Guard\JWTTokenAuthenticator">
      <argument type="service" id="lexik_jwt_authentication.jwt_manager"/>
      <argument type="service" id="debug.event_dispatcher"/>
      <argument type="service" id="lexik_jwt_authentication.extractor.chain_extractor"/>
      <argument type="service" id=".1_TokenStorage~ZDDj_Zv"/>
    </service>
    <service id="lexik_jwt_authentication.extractor.chain_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\ChainTokenExtractor" public="false">
      <argument type="collection">
        <argument type="service" id="lexik_jwt_authentication.extractor.authorization_header_extractor"/>
      </argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.authorization_header_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\AuthorizationHeaderTokenExtractor">
      <argument>Bearer</argument>
      <argument>Authorization</argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.query_parameter_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\QueryParameterTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\CookieTokenExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.extractor.split_cookie_extractor" class="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\SplitCookieExtractor">
      <argument></argument>
    </service>
    <service id="lexik_jwt_authentication.security.jwt_user_provider" class="Lexik\Bundle\JWTAuthenticationBundle\Security\User\JWTUserProvider" public="false">
      <argument></argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.send_token" class="Gesdinet\JWTRefreshTokenBundle\EventListener\AttachRefreshTokenOnSuccessListener">
      <tag name="kernel.event_listener" event="lexik_jwt_authentication.on_authentication_success" method="attachRefreshToken"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>2592000</argument>
      <argument type="service" id="debug.validator"/>
      <argument type="service" id="request_stack"/>
      <argument>username</argument>
      <argument>refresh_token</argument>
      <argument>false</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken.refresh_token_manager" class="Gesdinet\JWTRefreshTokenBundle\Doctrine\RefreshTokenManager" public="true">
      <argument type="service" id="doctrine.orm.default_entity_manager"/>
      <argument>Gesdinet\JWTRefreshTokenBundle\Entity\RefreshToken</argument>
    </service>
    <service id="gesdinet.jwtrefreshtoken" class="Gesdinet\JWTRefreshTokenBundle\Service\RefreshToken" public="true">
      <argument type="service" id="gesdinet.jwtrefreshtoken.authenticator"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.user_provider"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_success"/>
      <argument type="service" id="lexik_jwt_authentication.handler.authentication_failure"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <argument>2592000</argument>
      <argument>api</argument>
      <argument>true</argument>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.user_provider" class="Gesdinet\JWTRefreshTokenBundle\Security\Provider\RefreshTokenProvider">
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    </service>
    <service id="gesdinet.jwtrefreshtoken.authenticator" class="Gesdinet\JWTRefreshTokenBundle\Security\Authenticator\RefreshTokenAuthenticator">
      <argument type="service" id="security.user_checker"/>
      <argument>refresh_token</argument>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand">
      <tag name="console.command"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:clear</argument>
      </call>
    </service>
    <service id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" class="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand">
      <tag name="console.command"/>
      <argument type="service" id="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
      <call method="setName">
        <argument>gesdinet:jwt:revoke</argument>
      </call>
    </service>
    <service id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~7fZs9Wt" class="Swift_Transport_Esmtp_Auth_NTLMAuthenticator" public="false"/>
    <service id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~7fZs9Wt" class="Swift_Transport_Esmtp_Auth_PlainAuthenticator" public="false"/>
    <service id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~7fZs9Wt" class="Swift_Transport_Esmtp_Auth_LoginAuthenticator" public="false"/>
    <service id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~7fZs9Wt" class="Swift_Transport_Esmtp_Auth_CramMd5Authenticator" public="false"/>
    <service id="swiftmailer.mailer.abstract" class="Swift_Mailer" public="true" abstract="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.transport.smtp.configurator.abstract" class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SmtpTransportConfigurator" public="false" abstract="true"/>
    <service id="swiftmailer.transport.sendmail.abstract" class="Swift_Transport_SendmailTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.null.abstract" class="Swift_Transport_NullTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.failover" class="Swift_Transport_FailoverTransport" public="false"/>
    <service id="swiftmailer.transport.buffer.abstract" class="Swift_Transport_StreamBuffer" public="false" abstract="true">
      <argument type="service" id="swiftmailer.transport.replacementfactory"/>
    </service>
    <service id="swiftmailer.transport.authhandler.abstract" class="Swift_Transport_Esmtp_AuthHandler" public="false" abstract="true">
      <argument type="collection">
        <argument type="service" id=".1_Swift_Transport_Esmtp_Auth_CramMd5Authenticator~7fZs9Wt"/>
        <argument type="service" id=".2_Swift_Transport_Esmtp_Auth_LoginAuthenticator~7fZs9Wt"/>
        <argument type="service" id=".3_Swift_Transport_Esmtp_Auth_PlainAuthenticator~7fZs9Wt"/>
        <argument type="service" id=".4_Swift_Transport_Esmtp_Auth_NTLMAuthenticator~7fZs9Wt"/>
      </argument>
    </service>
    <service id="swiftmailer.transport.eventdispatcher.abstract" class="Swift_Events_SimpleEventDispatcher" public="false" abstract="true"/>
    <service id="swiftmailer.transport.replacementfactory" class="Swift_StreamFilters_StringReplacementFilterFactory" public="false"/>
    <service id="swiftmailer.plugin.redirecting.abstract" class="Swift_Plugins_RedirectingPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.antiflood.abstract" class="Swift_Plugins_AntiFloodPlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.impersonate.abstract" class="Swift_Plugins_ImpersonatePlugin" public="false" abstract="true"/>
    <service id="swiftmailer.plugin.messagelogger.abstract" class="Swift_Plugins_MessageLogger" abstract="true"/>
    <service id="swiftmailer.transport.smtp.abstract" class="Swift_Transport_EsmtpTransport" public="false" abstract="true"/>
    <service id="swiftmailer.transport.spool.abstract" class="Swift_Transport_SpoolTransport" public="false" abstract="true"/>
    <service id="swiftmailer.spool.file.abstract" class="Swift_FileSpool" public="false" abstract="true">
      <argument></argument>
    </service>
    <service id="swiftmailer.spool.memory.abstract" class="Swift_MemorySpool" public="false" abstract="true"/>
    <service id="swiftmailer.email_sender.listener" class="Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener">
      <tag name="kernel.event_subscriber"/>
      <tag name="kernel.reset" method="reset"/>
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="null"/>
    </service>
    <service id="swiftmailer.data_collector" class="Symfony\Bundle\SwiftmailerBundle\DataCollector\MessageDataCollector" public="false">
      <tag name="data_collector" template="@Swiftmailer/Collector/swiftmailer.html.twig" id="swiftmailer" priority="245"/>
      <argument type="service" id="service_container"/>
    </service>
    <service id="swiftmailer.command.debug" class="Symfony\Bundle\SwiftmailerBundle\Command\DebugCommand">
      <tag name="console.command" command="debug:swiftmailer"/>
      <call method="setName">
        <argument>debug:swiftmailer</argument>
      </call>
    </service>
    <service id="swiftmailer.command.new_email" class="Symfony\Bundle\SwiftmailerBundle\Command\NewEmailCommand">
      <tag name="console.command" command="swiftmailer:email:send"/>
      <call method="setName">
        <argument>swiftmailer:email:send</argument>
      </call>
    </service>
    <service id="swiftmailer.command.send_email" class="Symfony\Bundle\SwiftmailerBundle\Command\SendEmailCommand">
      <tag name="console.command" command="swiftmailer:spool:send"/>
      <call method="setName">
        <argument>swiftmailer:spool:send</argument>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.transport.eventdispatcher" class="Swift_Events_SimpleEventDispatcher" public="false"/>
    <service id="swiftmailer.mailer.default.transport.dynamic" class="Swift_Transport">
      <argument type="collection">
        <argument key="transport">smtp</argument>
        <argument key="url">%env(MAILER_URL)%</argument>
        <argument key="username">null</argument>
        <argument key="password">null</argument>
        <argument key="host">localhost</argument>
        <argument key="port">null</argument>
        <argument key="timeout">30</argument>
        <argument key="source_ip">null</argument>
        <argument key="local_domain">null</argument>
        <argument key="encryption">null</argument>
        <argument key="auth_mode">null</argument>
        <argument key="command">/usr/sbin/sendmail -bs</argument>
        <argument key="stream_options" type="collection"/>
      </argument>
      <argument type="service" id="router.request_context" on-invalid="null"/>
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <factory class="Symfony\Bundle\SwiftmailerBundle\DependencyInjection\SwiftmailerTransportFactory" method="createTransport"/>
    </service>
    <service id="swiftmailer.mailer.default" class="Swift_Mailer" public="true">
      <argument type="service" id="swiftmailer.mailer.default.transport.spool"/>
    </service>
    <service id="swiftmailer.mailer.default.spool.memory" class="Swift_MemorySpool" public="false"/>
    <service id="swiftmailer.mailer.default.transport.spool" class="Swift_Transport_SpoolTransport" public="false">
      <argument type="service" id="swiftmailer.mailer.default.transport.eventdispatcher"/>
      <argument type="service" id="swiftmailer.mailer.default.spool.memory"/>
      <call method="registerPlugin">
        <argument type="service" id="swiftmailer.mailer.default.plugin.messagelogger"/>
      </call>
    </service>
    <service id="swiftmailer.mailer.default.plugin.messagelogger" class="Swift_Plugins_MessageLogger" public="true">
      <tag name="swiftmailer.default.plugin"/>
    </service>
    <service id="symfonycasts.verify_email.token_generator" class="SymfonyCasts\Bundle\VerifyEmail\Generator\VerifyEmailTokenGenerator" public="false">
      <argument>%env(APP_SECRET)%</argument>
    </service>
    <service id="symfonycasts.verify_email.query_utility" class="SymfonyCasts\Bundle\VerifyEmail\Util\VerifyEmailQueryUtility" public="false"/>
    <service id="symfonycasts.verify_email.uri_signer" class="Symfony\Component\HttpKernel\UriSigner">
      <argument>%env(APP_SECRET)%</argument>
      <argument>signature</argument>
    </service>
    <service id="symfonycasts.verify_email.helper" class="SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelper">
      <argument type="service" id="router.default"/>
      <argument type="service" id="symfonycasts.verify_email.uri_signer"/>
      <argument type="service" id="symfonycasts.verify_email.query_utility"/>
      <argument type="service" id="symfonycasts.verify_email.token_generator"/>
      <argument>3600</argument>
    </service>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\AppartementController" class="App\Controller\Admin\AppartementController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\AppartementController" class="App\Controller\Admin\AppartementController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\AppartementController" class="App\Controller\Admin\AppartementController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\AppartementController" class="App\Controller\Admin\AppartementController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\CommentaireController" class="App\Controller\Admin\CommentaireController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\CommentaireController" class="App\Controller\Admin\CommentaireController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\CommentaireController" class="App\Controller\Admin\CommentaireController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\CommentaireController" class="App\Controller\Admin\CommentaireController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\DashboardControllerInterface.0.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\DashboardController" class="App\Controller\Admin\DashboardController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\MaisonController" class="App\Controller\Admin\MaisonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\MaisonController" class="App\Controller\Admin\MaisonController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\MaisonController" class="App\Controller\Admin\MaisonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\MaisonController" class="App\Controller\Admin\MaisonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\PhotoController" class="App\Controller\Admin\PhotoController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\PhotoController" class="App\Controller\Admin\PhotoController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\PhotoController" class="App\Controller\Admin\PhotoController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\PhotoController" class="App\Controller\Admin\PhotoController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\StudioController" class="App\Controller\Admin\StudioController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\StudioController" class="App\Controller\Admin\StudioController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\StudioController" class="App\Controller\Admin\StudioController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\StudioController" class="App\Controller\Admin\StudioController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\Admin\UserCrudController" class="App\Controller\Admin\UserCrudController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\Admin\UserCrudController" class="App\Controller\Admin\UserCrudController" autowire="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Controller\CrudControllerInterface.0.App\Controller\Admin\UserCrudController" class="App\Controller\Admin\UserCrudController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\Admin\UserCrudController" class="App\Controller\Admin\UserCrudController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\MailerController" class="App\Controller\MailerController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\MailerController" class="App\Controller\MailerController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MailerController" class="App\Controller\MailerController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\MaisonController" class="App\Controller\MaisonController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\MaisonController" class="App\Controller\MaisonController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\MaisonController" class="App\Controller\MaisonController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RatingController" class="App\Controller\RatingController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RatingController" class="App\Controller\RatingController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RatingController" class="App\Controller\RatingController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\RegistrationController" class="App\Controller\RegistrationController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\SecurityController" class="App\Controller\SecurityController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Contracts\Service\ServiceSubscriberInterface.0.App\Controller\UserController" class="App\Controller\UserController" autowire="true" abstract="true"/>
    <service id=".instanceof.Symfony\Bundle\FrameworkBundle\Controller\AbstractController.0.App\Controller\UserController" class="App\Controller\UserController" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Controller\UserController" class="App\Controller\UserController" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\FixturesBundle\ORMFixtureInterface.0.App\DataFixtures\UserFixtures" class="App\DataFixtures\UserFixtures" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\DataFixtures\UserFixtures" class="App\DataFixtures\UserFixtures" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\Form\FormTypeInterface.0.App\Form\PhotoType" class="App\Form\PhotoType" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Form\PhotoType" class="App\Form\PhotoType" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Listeners\RefreshTokenListener" class="App\Listeners\RefreshTokenListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Listeners\RefreshTokenListener" class="App\Listeners\RefreshTokenListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Symfony\Component\EventDispatcher\EventSubscriberInterface.0.App\Listeners\RequestListener" class="App\Listeners\RequestListener" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Listeners\RequestListener" class="App\Listeners\RequestListener" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AdoptionRepository" class="App\Repository\AdoptionRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AdoptionRepository" class="App\Repository\AdoptionRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AdresseRepository" class="App\Repository\AdresseRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AdresseRepository" class="App\Repository\AdresseRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\AppartementRepository" class="App\Repository\AppartementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\AppartementRepository" class="App\Repository\AppartementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CategorieRepository" class="App\Repository\CategorieRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ClientRepository" class="App\Repository\ClientRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\CommentaireRepository" class="App\Repository\CommentaireRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\CommentaireRepository" class="App\Repository\CommentaireRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContactRepository" class="App\Repository\ContactRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContactRepository" class="App\Repository\ContactRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ContratRepository" class="App\Repository\ContratRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\GarageRepository" class="App\Repository\GarageRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\GarageRepository" class="App\Repository\GarageRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\LogementRepository" class="App\Repository\LogementRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\LogementRepository" class="App\Repository\LogementRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\MaisonRepository" class="App\Repository\MaisonRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\MaisonRepository" class="App\Repository\MaisonRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PetRepository" class="App\Repository\PetRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PetRepository" class="App\Repository\PetRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PhotoRepository" class="App\Repository\PhotoRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PhotoRepository" class="App\Repository\PhotoRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\PostvetoRepository" class="App\Repository\PostvetoRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\PostvetoRepository" class="App\Repository\PostvetoRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\ProprietaireRepository" class="App\Repository\ProprietaireRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\ProprietaireRepository" class="App\Repository\ProprietaireRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\RatingRepository" class="App\Repository\RatingRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\RatingRepository" class="App\Repository\RatingRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\StudioRepository" class="App\Repository\StudioRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\StudioRepository" class="App\Repository\StudioRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\TerrainRepository" class="App\Repository\TerrainRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\TerrainRepository" class="App\Repository\TerrainRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\UserRepository" class="App\Repository\UserRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\VeterinaryRepository" class="App\Repository\VeterinaryRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\VeterinaryRepository" class="App\Repository\VeterinaryRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.Doctrine\Bundle\DoctrineBundle\Repository\ServiceEntityRepositoryInterface.0.App\Repository\WishRepository" class="App\Repository\WishRepository" autowire="true" abstract="true"/>
    <service id=".abstract.instanceof.App\Repository\WishRepository" class="App\Repository\WishRepository" autowire="true" autoconfigure="true" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\CommonConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\ComparisonConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\EntityConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NullConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\NumericConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Filter\FilterConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Filter\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ArrayConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AssociationConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\AvatarConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\BooleanConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CodeEditorConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CollectionConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPostConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CommonPreConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CountryConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\CurrencyConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\DateTimeConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\EmailConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\FormConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\IdConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ImageConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LanguageConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\LocaleConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\MoneyConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\NumberConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\PercentConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\ChoiceConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\SlugConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TelephoneConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TextEditorConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\TimezoneConfigurator" public="false" abstract="true"/>
    <service id=".instanceof.EasyCorp\Bundle\EasyAdminBundle\Contracts\Field\FieldConfiguratorInterface.0.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false" abstract="true"/>
    <service id=".abstract.instanceof.EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" class="EasyCorp\Bundle\EasyAdminBundle\Field\Configurator\UrlConfigurator" public="false" abstract="true"/>
    <service id=".service_locator.CmORmuK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="base64" type="service_closure" id="container.env_var_processor"/>
        <argument key="bool" type="service_closure" id="container.env_var_processor"/>
        <argument key="const" type="service_closure" id="container.env_var_processor"/>
        <argument key="csv" type="service_closure" id="container.env_var_processor"/>
        <argument key="default" type="service_closure" id="container.env_var_processor"/>
        <argument key="file" type="service_closure" id="container.env_var_processor"/>
        <argument key="float" type="service_closure" id="container.env_var_processor"/>
        <argument key="int" type="service_closure" id="container.env_var_processor"/>
        <argument key="json" type="service_closure" id="container.env_var_processor"/>
        <argument key="key" type="service_closure" id="container.env_var_processor"/>
        <argument key="query_string" type="service_closure" id="container.env_var_processor"/>
        <argument key="require" type="service_closure" id="container.env_var_processor"/>
        <argument key="resolve" type="service_closure" id="container.env_var_processor"/>
        <argument key="string" type="service_closure" id="container.env_var_processor"/>
        <argument key="trim" type="service_closure" id="container.env_var_processor"/>
        <argument key="url" type="service_closure" id="container.env_var_processor"/>
      </argument>
    </service>
    <service id="maker.auto_command.make_auth" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:auth"/>
      <argument type="service" id="maker.maker.make_authenticator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a Guard authenticator of different flavors</argument>
      </call>
      <call method="setName">
        <argument>make:auth</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_command" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:command"/>
      <argument type="service" id="maker.maker.make_command"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new console command class</argument>
      </call>
      <call method="setName">
        <argument>make:command</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_controller" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:controller"/>
      <argument type="service" id="maker.maker.make_controller"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new controller class</argument>
      </call>
      <call method="setName">
        <argument>make:controller</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_crud" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:crud"/>
      <argument type="service" id="maker.maker.make_crud"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates CRUD for Doctrine entity class</argument>
      </call>
      <call method="setName">
        <argument>make:crud</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_docker_database" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:docker:database"/>
      <argument type="service" id="maker.maker.make_docker_database"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Adds a database container to your docker-compose.yaml file</argument>
      </call>
      <call method="setName">
        <argument>make:docker:database</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_entity" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:entity"/>
      <argument type="service" id="maker.maker.make_entity"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates or updates a Doctrine entity class, and optionally an API Platform resource</argument>
      </call>
      <call method="setName">
        <argument>make:entity</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_fixtures" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:fixtures"/>
      <argument type="service" id="maker.maker.make_fixtures"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new class to load Doctrine fixtures</argument>
      </call>
      <call method="setName">
        <argument>make:fixtures</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:form"/>
      <argument type="service" id="maker.maker.make_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new form class</argument>
      </call>
      <call method="setName">
        <argument>make:form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_message" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:message"/>
      <argument type="service" id="maker.maker.make_message"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new message and handler</argument>
      </call>
      <call method="setName">
        <argument>make:message</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_messenger_middleware" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:messenger-middleware"/>
      <argument type="service" id="maker.maker.make_messenger_middleware"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new messenger middleware</argument>
      </call>
      <call method="setName">
        <argument>make:messenger-middleware</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_registration_form" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:registration-form"/>
      <argument type="service" id="maker.maker.make_registration_form"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new registration form system</argument>
      </call>
      <call method="setName">
        <argument>make:registration-form</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_reset_password" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:reset-password"/>
      <argument type="service" id="maker.maker.make_reset_password"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Create controller, entity, and repositories for use with symfonycasts/reset-password-bundle</argument>
      </call>
      <call method="setName">
        <argument>make:reset-password</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_encoder" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:encoder"/>
      <argument type="service" id="maker.maker.make_serializer_encoder"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new serializer encoder class</argument>
      </call>
      <call method="setName">
        <argument>make:serializer:encoder</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_serializer_normalizer" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:serializer:normalizer"/>
      <argument type="service" id="maker.maker.make_serializer_normalizer"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new serializer normalizer class</argument>
      </call>
      <call method="setName">
        <argument>make:serializer:normalizer</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_subscriber" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:subscriber"/>
      <argument type="service" id="maker.maker.make_subscriber"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new event subscriber class</argument>
      </call>
      <call method="setName">
        <argument>make:subscriber</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_twig_extension" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:twig-extension"/>
      <argument type="service" id="maker.maker.make_twig_extension"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new Twig extension class</argument>
      </call>
      <call method="setName">
        <argument>make:twig-extension</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_test" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:test"/>
      <tag name="console.command" command="make:unit-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <tag name="console.command" command="make:functional-test" description="Deprecated alias of &quot;make:test&quot;"/>
      <argument type="service" id="maker.maker.make_test"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new test class</argument>
      </call>
      <call method="setName">
        <argument>make:test</argument>
      </call>
      <call method="setAliases">
        <argument type="collection">
          <argument>make:unit-test</argument>
          <argument>make:functional-test</argument>
        </argument>
      </call>
    </service>
    <service id="maker.auto_command.make_validator" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:validator"/>
      <argument type="service" id="maker.maker.make_validator"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new validator and constraint class</argument>
      </call>
      <call method="setName">
        <argument>make:validator</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_voter" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:voter"/>
      <argument type="service" id="maker.maker.make_voter"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new security voter class</argument>
      </call>
      <call method="setName">
        <argument>make:voter</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_user" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:user"/>
      <argument type="service" id="maker.maker.make_user"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new security user class</argument>
      </call>
      <call method="setName">
        <argument>make:user</argument>
      </call>
    </service>
    <service id="maker.auto_command.make_migration" class="Symfony\Bundle\MakerBundle\Command\MakerCommand" public="false">
      <tag name="console.command" command="make:migration"/>
      <argument type="service" id="maker.maker.make_migration"/>
      <argument type="service" id="maker.file_manager"/>
      <argument type="service" id="maker.generator"/>
      <call method="setDescription">
        <argument>Creates a new migration based on database changes</argument>
      </call>
      <call method="setName">
        <argument>make:migration</argument>
      </call>
    </service>
    <service id=".service_locator.7I.FzBw" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="crud" type="service_closure" id=".errored..service_locator.7I.FzBw.EasyCorp\Bundle\EasyAdminBundle\Config\Crud"/>
      </argument>
    </service>
    <service id=".service_locator.hVQViHK" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="assets" type="service_closure" id=".errored..service_locator.hVQViHK.EasyCorp\Bundle\EasyAdminBundle\Config\Assets"/>
      </argument>
    </service>
    <service id=".service_locator.eGAETcz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="actions" type="service_closure" id=".errored..service_locator.eGAETcz.EasyCorp\Bundle\EasyAdminBundle\Config\Actions"/>
      </argument>
    </service>
    <service id=".service_locator.82KoR2v" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="filters" type="service_closure" id=".errored..service_locator.82KoR2v.EasyCorp\Bundle\EasyAdminBundle\Config\Filters"/>
      </argument>
    </service>
    <service id=".service_locator.h2tplhS" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="context" type="service_closure" id=".errored..service_locator.h2tplhS.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
      </argument>
    </service>
    <service id=".service_locator.huuTAyO" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="batchActionDto" type="service_closure" id=".errored..service_locator.huuTAyO.EasyCorp\Bundle\EasyAdminBundle\Dto\BatchActionDto"/>
        <argument key="context" type="service_closure" id=".errored..service_locator.huuTAyO.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
      </argument>
    </service>
    <service id=".service_locator.jrmEAfi" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityDto" type="service_closure" id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto"/>
        <argument key="fields" type="service_closure" id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection"/>
        <argument key="filters" type="service_closure" id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection"/>
        <argument key="searchDto" type="service_closure" id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto"/>
      </argument>
    </service>
    <service id=".service_locator.x8FmIZ0" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="entityManager" type="service_closure" id="doctrine.orm.default_entity_manager"/>
      </argument>
    </service>
    <service id=".service_locator.1ZmGw6X" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="context" type="service_closure" id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
        <argument key="entityDto" type="service_closure" id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto"/>
        <argument key="formOptions" type="service_closure" id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore"/>
      </argument>
    </service>
    <service id=".service_locator._L8Y8bZ" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="responseParameters" type="service_closure" id=".errored..service_locator._L8Y8bZ.EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore"/>
      </argument>
    </service>
    <service id=".service_locator.RLVVpop" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="user" type="service_closure" id=".errored..service_locator.RLVVpop.Symfony\Component\Security\Core\User\UserInterface"/>
      </argument>
    </service>
    <service id=".service_locator.8ZuNAXa" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="mailer" type="service_closure" id="swiftmailer.mailer.default"/>
      </argument>
    </service>
    <service id=".service_locator.RGIiAl4" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="viewhandler" type="service_closure" id="fos_rest.view_handler.default"/>
      </argument>
    </service>
    <service id=".service_locator.xkYvij3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Controller\Admin\AppartementController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\AppartementController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\AppartementController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\AppartementController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\AppartementController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\AppartementController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\AppartementController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\AppartementController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\AppartementController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\AppartementController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\CommentaireController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\CommentaireController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\CommentaireController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\CommentaireController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\CommentaireController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\CommentaireController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\CommentaireController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\DashboardController::configureUserMenu" type="service_closure" id=".service_locator.RLVVpop"/>
        <argument key="App\Controller\Admin\MaisonController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\MaisonController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\MaisonController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\MaisonController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\MaisonController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\MaisonController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\MaisonController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\MaisonController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\MaisonController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\MaisonController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\PhotoController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\PhotoController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\PhotoController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\PhotoController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\PhotoController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\PhotoController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\PhotoController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\StudioController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\StudioController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\StudioController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\StudioController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\StudioController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\StudioController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\StudioController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController::autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\UserCrudController::configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\UserCrudController::configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\UserCrudController::configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\UserCrudController::configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\UserCrudController::configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\UserCrudController::createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController::createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController::createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\UserCrudController::createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController::createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController::delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController::detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController::renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController::updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\MailerController::index" type="service_closure" id=".service_locator.8ZuNAXa"/>
        <argument key="App\Controller\MailerController::setViewHandler" type="service_closure" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\RegistrationController::setViewHandler" type="service_closure" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\Admin\AppartementController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\AppartementController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\AppartementController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\AppartementController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\AppartementController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\AppartementController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\AppartementController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\AppartementController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\AppartementController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\AppartementController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\AppartementController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\AppartementController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\CommentaireController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\CommentaireController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\CommentaireController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\CommentaireController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\CommentaireController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\CommentaireController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\CommentaireController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\CommentaireController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\CommentaireController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\CommentaireController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\DashboardController:configureUserMenu" type="service_closure" id=".service_locator.RLVVpop"/>
        <argument key="App\Controller\Admin\MaisonController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\MaisonController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\MaisonController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\MaisonController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\MaisonController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\MaisonController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\MaisonController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\MaisonController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\MaisonController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\MaisonController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\MaisonController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\MaisonController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\PhotoController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\PhotoController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\PhotoController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\PhotoController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\PhotoController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\PhotoController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\PhotoController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\PhotoController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\PhotoController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\PhotoController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\StudioController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\StudioController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\StudioController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\StudioController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\StudioController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\StudioController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\StudioController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\StudioController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\StudioController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\StudioController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController:autocomplete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:batchDelete" type="service_closure" id=".service_locator.huuTAyO"/>
        <argument key="App\Controller\Admin\UserCrudController:configureActions" type="service_closure" id=".service_locator.eGAETcz"/>
        <argument key="App\Controller\Admin\UserCrudController:configureAssets" type="service_closure" id=".service_locator.hVQViHK"/>
        <argument key="App\Controller\Admin\UserCrudController:configureCrud" type="service_closure" id=".service_locator.7I.FzBw"/>
        <argument key="App\Controller\Admin\UserCrudController:configureFilters" type="service_closure" id=".service_locator.82KoR2v"/>
        <argument key="App\Controller\Admin\UserCrudController:configureResponseParameters" type="service_closure" id=".service_locator._L8Y8bZ"/>
        <argument key="App\Controller\Admin\UserCrudController:createEditForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController:createEditFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController:createIndexQueryBuilder" type="service_closure" id=".service_locator.jrmEAfi"/>
        <argument key="App\Controller\Admin\UserCrudController:createNewForm" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController:createNewFormBuilder" type="service_closure" id=".service_locator.1ZmGw6X"/>
        <argument key="App\Controller\Admin\UserCrudController:delete" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:deleteEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController:detail" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:edit" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:index" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:new" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:persistEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\Admin\UserCrudController:renderFilters" type="service_closure" id=".service_locator.h2tplhS"/>
        <argument key="App\Controller\Admin\UserCrudController:updateEntity" type="service_closure" id=".service_locator.x8FmIZ0"/>
        <argument key="App\Controller\MailerController:index" type="service_closure" id=".service_locator.8ZuNAXa"/>
        <argument key="App\Controller\MailerController:setViewHandler" type="service_closure" id=".service_locator.RGIiAl4"/>
        <argument key="App\Controller\RegistrationController:setViewHandler" type="service_closure" id=".service_locator.RGIiAl4"/>
      </argument>
    </service>
    <service id=".service_locator.Y7gDuDN" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Doctrine\Validator\Constraints\UniqueEntityValidator" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator" type="service_closure" id="security.validator.user_password"/>
        <argument key="Symfony\Component\Validator\Constraints\EmailValidator" type="service_closure" id="validator.email"/>
        <argument key="Symfony\Component\Validator\Constraints\ExpressionValidator" type="service_closure" id="validator.expression"/>
        <argument key="Symfony\Component\Validator\Constraints\NotCompromisedPasswordValidator" type="service_closure" id="validator.not_compromised_password"/>
        <argument key="doctrine.orm.validator.unique" type="service_closure" id="doctrine.orm.validator.unique"/>
        <argument key="security.validator.user_password" type="service_closure" id="security.validator.user_password"/>
        <argument key="validator.expression" type="service_closure" id="validator.expression"/>
      </argument>
    </service>
    <service id=".service_locator._cmka45" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="inline" type="service_closure" id="fragment.renderer.inline"/>
      </argument>
    </service>
    <service id="debug.argument_resolver.request_attribute" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="100"/>
      <argument type="service" id="debug.argument_resolver.request_attribute.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.request" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.request.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.session" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="50"/>
      <argument type="service" id="debug.argument_resolver.session.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.security.user_value_resolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="40"/>
      <argument type="service" id="debug.security.user_value_resolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver"/>
      <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.service" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-50"/>
      <argument type="service" id="debug.argument_resolver.service.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.default" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-100"/>
      <argument type="service" id="debug.argument_resolver.default.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.variadic" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-150"/>
      <argument type="service" id="debug.argument_resolver.variadic.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id="debug.argument_resolver.not_tagged_controller" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\TraceableValueResolver">
      <tag name="controller.argument_value_resolver" priority="-200"/>
      <argument type="service" id="debug.argument_resolver.not_tagged_controller.inner"/>
      <argument type="service" id="debug.stopwatch"/>
    </service>
    <service id=".service_locator.ymu9w2k" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Form\PhotoType" type="service_closure" id="App\Form\PhotoType"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\CrudFormType"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FileUploadType"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Form\Type\FiltersFormType"/>
        <argument key="Symfony\Bridge\Doctrine\Form\Type\EntityType" type="service_closure" id="form.type.entity"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\ChoiceType" type="service_closure" id="form.type.choice"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FileType" type="service_closure" id="form.type.file"/>
        <argument key="Symfony\Component\Form\Extension\Core\Type\FormType" type="service_closure" id="form.type.form"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichFileType" type="service_closure" id="vich_uploader.form.type.file"/>
        <argument key="Vich\UploaderBundle\Form\Type\VichImageType" type="service_closure" id="vich_uploader.form.type.image"/>
      </argument>
    </service>
    <service id=".service_locator.YVO.bOF" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine.orm.default_listeners.attach_entity_listeners" type="service_closure" id="doctrine.orm.default_listeners.attach_entity_listeners"/>
        <argument key="vich_uploader.listener.clean.post_images" type="service_closure" id="vich_uploader.listener.clean.post_images"/>
        <argument key="vich_uploader.listener.remove.post_images" type="service_closure" id="vich_uploader.listener.remove.post_images"/>
        <argument key="vich_uploader.listener.upload.post_images" type="service_closure" id="vich_uploader.listener.upload.post_images"/>
      </argument>
    </service>
    <service id=".service_locator.TSprido" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="App\Repository\AdoptionRepository" type="service_closure" id="App\Repository\AdoptionRepository"/>
        <argument key="App\Repository\AdresseRepository" type="service_closure" id="App\Repository\AdresseRepository"/>
        <argument key="App\Repository\AppartementRepository" type="service_closure" id="App\Repository\AppartementRepository"/>
        <argument key="App\Repository\CategorieRepository" type="service_closure" id="App\Repository\CategorieRepository"/>
        <argument key="App\Repository\ClientRepository" type="service_closure" id="App\Repository\ClientRepository"/>
        <argument key="App\Repository\CommentaireRepository" type="service_closure" id="App\Repository\CommentaireRepository"/>
        <argument key="App\Repository\ContactRepository" type="service_closure" id="App\Repository\ContactRepository"/>
        <argument key="App\Repository\ContratRepository" type="service_closure" id="App\Repository\ContratRepository"/>
        <argument key="App\Repository\GarageRepository" type="service_closure" id="App\Repository\GarageRepository"/>
        <argument key="App\Repository\LogementRepository" type="service_closure" id="App\Repository\LogementRepository"/>
        <argument key="App\Repository\MaisonRepository" type="service_closure" id="App\Repository\MaisonRepository"/>
        <argument key="App\Repository\PetRepository" type="service_closure" id="App\Repository\PetRepository"/>
        <argument key="App\Repository\PhotoRepository" type="service_closure" id="App\Repository\PhotoRepository"/>
        <argument key="App\Repository\PostvetoRepository" type="service_closure" id="App\Repository\PostvetoRepository"/>
        <argument key="App\Repository\ProprietaireRepository" type="service_closure" id="App\Repository\ProprietaireRepository"/>
        <argument key="App\Repository\RatingRepository" type="service_closure" id="App\Repository\RatingRepository"/>
        <argument key="App\Repository\StudioRepository" type="service_closure" id="App\Repository\StudioRepository"/>
        <argument key="App\Repository\TerrainRepository" type="service_closure" id="App\Repository\TerrainRepository"/>
        <argument key="App\Repository\UserRepository" type="service_closure" id="App\Repository\UserRepository"/>
        <argument key="App\Repository\VeterinaryRepository" type="service_closure" id="App\Repository\VeterinaryRepository"/>
        <argument key="App\Repository\WishRepository" type="service_closure" id="App\Repository\WishRepository"/>
      </argument>
    </service>
    <service id="debug.security.voter.security.access.authenticated_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.authenticated_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.simple_role_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.simple_role_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.security.access.expression_voter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="security.access.expression_voter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="debug.security.voter.EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter" class="Symfony\Component\Security\Core\Authorization\Voter\TraceableVoter">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter"/>
      <argument type="service" id="debug.event_dispatcher"/>
    </service>
    <service id="security.logout.handler.csrf_token_clearing" class="Symfony\Component\Security\Http\Logout\CsrfTokenClearingLogoutHandler" public="false">
      <argument type="service" id="security.csrf.token_storage"/>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry" class="EasyCorp\Bundle\EasyAdminBundle\Registry\DashboardControllerRegistry" public="false">
      <argument>%env(APP_SECRET)%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev</argument>
      <argument type="collection">
        <argument>App\Controller\Admin\DashboardController</argument>
      </argument>
    </service>
    <service id="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry" class="EasyCorp\Bundle\EasyAdminBundle\Registry\CrudControllerRegistry" public="false">
      <argument>%env(APP_SECRET)%</argument>
      <argument type="collection">
        <argument>App\Controller\Admin\AppartementController</argument>
        <argument>App\Controller\Admin\CommentaireController</argument>
        <argument>App\Controller\Admin\MaisonController</argument>
        <argument>App\Controller\Admin\PhotoController</argument>
        <argument>App\Controller\Admin\StudioController</argument>
        <argument>App\Controller\Admin\UserCrudController</argument>
      </argument>
    </service>
    <service id="slugger" class="Symfony\Component\String\Slugger\AsciiSlugger"/>
    <service id="logger" class="Symfony\Component\HttpKernel\Log\Logger" public="false"/>
    <service id=".service_locator.V.o0zE7" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translation.loader.csv" type="service_closure" id="translation.loader.csv"/>
        <argument key="translation.loader.dat" type="service_closure" id="translation.loader.dat"/>
        <argument key="translation.loader.ini" type="service_closure" id="translation.loader.ini"/>
        <argument key="translation.loader.json" type="service_closure" id="translation.loader.json"/>
        <argument key="translation.loader.mo" type="service_closure" id="translation.loader.mo"/>
        <argument key="translation.loader.php" type="service_closure" id="translation.loader.php"/>
        <argument key="translation.loader.po" type="service_closure" id="translation.loader.po"/>
        <argument key="translation.loader.qt" type="service_closure" id="translation.loader.qt"/>
        <argument key="translation.loader.res" type="service_closure" id="translation.loader.res"/>
        <argument key="translation.loader.xliff" type="service_closure" id="translation.loader.xliff"/>
        <argument key="translation.loader.yml" type="service_closure" id="translation.loader.yml"/>
      </argument>
    </service>
    <service id=".service_locator.ky4eP1x" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ActionFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\ControllerFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\EntityFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FilterFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\FormFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Factory\PaginatorFactory" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityRepository" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Orm\EntityUpdater" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Provider\FieldProvider" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" on-invalid="ignore"/>
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="event_dispatcher" type="service_closure" id="debug.event_dispatcher" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\AppartementController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\AppartementController"/>
      <argument>App\Controller\Admin\AppartementController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\CommentaireController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\CommentaireController"/>
      <argument>App\Controller\Admin\CommentaireController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.JEaLqsX" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" on-invalid="ignore"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Router\CrudUrlGenerator" on-invalid="ignore"/>
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.JEaLqsX.App\Controller\Admin\DashboardController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\DashboardController"/>
      <argument>App\Controller\Admin\DashboardController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.JEaLqsX" method="withContext"/>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\MaisonController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\MaisonController"/>
      <argument>App\Controller\Admin\MaisonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\PhotoController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\PhotoController"/>
      <argument>App\Controller\Admin\PhotoController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\StudioController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\StudioController"/>
      <argument>App\Controller\Admin\StudioController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.ky4eP1x.App\Controller\Admin\UserCrudController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\Admin\UserCrudController"/>
      <argument>App\Controller\Admin\UserCrudController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.ky4eP1x" method="withContext"/>
    </service>
    <service id=".service_locator.hyz4CBf" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="fos_rest.view_handler" type="service_closure" id="fos_rest.view_handler.default"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.hyz4CBf.App\Controller\MailerController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\MailerController"/>
      <argument>App\Controller\MailerController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.hyz4CBf" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="doctrine" type="service_closure" id="doctrine" on-invalid="ignore"/>
        <argument key="form.factory" type="service_closure" id="form.factory" on-invalid="ignore"/>
        <argument key="http_kernel" type="service_closure" id="http_kernel" on-invalid="ignore"/>
        <argument key="parameter_bag" type="service_closure" id="parameter_bag" on-invalid="ignore"/>
        <argument key="request_stack" type="service_closure" id="request_stack" on-invalid="ignore"/>
        <argument key="router" type="service_closure" id="router.default" on-invalid="ignore"/>
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker" on-invalid="ignore"/>
        <argument key="security.csrf.token_manager" type="service_closure" id="security.csrf.token_manager" on-invalid="ignore"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage" on-invalid="ignore"/>
        <argument key="serializer" type="service_closure" id="serializer" on-invalid="ignore"/>
        <argument key="session" type="service_closure" id="session" on-invalid="ignore"/>
        <argument key="twig" type="service_closure" id="twig" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\MaisonController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\MaisonController"/>
      <argument>App\Controller\MaisonController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\RatingController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\RatingController"/>
      <argument>App\Controller\RatingController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.hyz4CBf.App\Controller\RegistrationController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\RegistrationController"/>
      <argument>App\Controller\RegistrationController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.hyz4CBf" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\SecurityController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\SecurityController"/>
      <argument>App\Controller\SecurityController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.vdmMuyE.App\Controller\UserController" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="App\Controller\UserController"/>
      <argument>App\Controller\UserController</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.vdmMuyE" method="withContext"/>
    </service>
    <service id=".service_locator.XSes1R5" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="translator" type="service_closure" id="translator.data_collector"/>
      </argument>
    </service>
    <service id=".service_locator.XSes1R5.translation.warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="translation.warmer"/>
      <argument>translation.warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.XSes1R5" method="withContext"/>
    </service>
    <service id=".service_locator.YrZrpzt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="routing.loader" type="service_closure" id="routing.loader"/>
      </argument>
    </service>
    <service id=".service_locator.YrZrpzt.router.default" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.default"/>
      <argument>router.default</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.YrZrpzt" method="withContext"/>
    </service>
    <service id=".service_locator.m90YCjy" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="router" type="service_closure" id="router.default"/>
      </argument>
    </service>
    <service id=".service_locator.m90YCjy.router.cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="router.cache_warmer"/>
      <argument>router.cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.m90YCjy" method="withContext"/>
    </service>
    <service id=".service_locator.o9nGMXB" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="twig" type="service_closure" id="twig"/>
      </argument>
    </service>
    <service id=".service_locator.o9nGMXB.twig.template_cache_warmer" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator_context" id="twig.template_cache_warmer"/>
      <argument>twig.template_cache_warmer</argument>
      <argument type="service" id="service_container"/>
      <factory service=".service_locator.o9nGMXB" method="withContext"/>
    </service>
    <service id=".service_locator.wnlveDj" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="reverse_container" type="service_closure" id="reverse_container" on-invalid="ignore_uninitialized"/>
      </argument>
    </service>
    <service id=".service_locator.Bppmeg3" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="initialized_session" type="service_closure" id="session" on-invalid="ignore_uninitialized"/>
        <argument key="request_stack" type="service_closure" id="request_stack"/>
        <argument key="session" type="service_closure" id="session" on-invalid="ignore"/>
        <argument key="session_storage" type="service_closure" id="session.storage.native" on-invalid="ignore"/>
      </argument>
    </service>
    <service id=".service_locator.XwZNkPh" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="kernel" type="service_closure" id="kernel"/>
      </argument>
    </service>
    <service id=".service_locator.XjnY8xG" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="session" type="service_closure" id="session"/>
      </argument>
    </service>
    <service id=".service_locator.6zQlgQt" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="security.authorization_checker" type="service_closure" id="security.authorization_checker"/>
        <argument key="security.token_storage" type="service_closure" id="security.token_storage"/>
      </argument>
    </service>
    <service id="debug.validator.inner" class="Symfony\Component\Validator\Validator\ValidatorInterface" public="false">
      <factory service="validator.builder" method="getValidator"/>
    </service>
    <service id="debug.event_dispatcher.inner" class="Symfony\Component\EventDispatcher\EventDispatcher" public="false"/>
    <service id="debug.controller_resolver.inner" class="Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver" public="false">
      <argument type="service" id="service_container"/>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <argument type="service" id=".legacy_controller_name_converter"/>
    </service>
    <service id="debug.argument_resolver.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver" public="false">
      <argument type="service" id="argument_metadata_factory"/>
      <argument type="iterator">
        <argument type="service" id="debug.argument_resolver.request_attribute"/>
        <argument type="service" id="debug.argument_resolver.request"/>
        <argument type="service" id="debug.argument_resolver.session"/>
        <argument type="service" id="debug.security.user_value_resolver"/>
        <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver"/>
        <argument type="service" id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver"/>
        <argument type="service" id="debug.argument_resolver.service"/>
        <argument type="service" id="debug.argument_resolver.default"/>
        <argument type="service" id="debug.argument_resolver.variadic"/>
        <argument type="service" id="debug.argument_resolver.not_tagged_controller"/>
      </argument>
    </service>
    <service id="doctrine.migrations.container_aware_migrations_factory.inner" class="Doctrine\Migrations\Version\MigrationFactory" public="false">
      <factory service="doctrine.migrations.dependency_factory" method="getMigrationFactory"/>
    </service>
    <service id="debug.security.access.decision_manager.inner" class="Symfony\Component\Security\Core\Authorization\AccessDecisionManager" public="false">
      <argument type="iterator">
        <argument type="service" id="debug.security.voter.security.access.authenticated_voter"/>
        <argument type="service" id="debug.security.voter.security.access.simple_role_voter"/>
        <argument type="service" id="debug.security.voter.security.access.expression_voter"/>
        <argument type="service" id="debug.security.voter.EasyCorp\Bundle\EasyAdminBundle\Security\SecurityVoter"/>
      </argument>
      <argument>affirmative</argument>
      <argument>false</argument>
      <argument>true</argument>
    </service>
    <service id="api_platform.serializer.context_builder.filter.inner" class="ApiPlatform\Core\Serializer\SerializerContextBuilder" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
    </service>
    <service id="api_platform.identifiers_extractor.cached.inner" class="ApiPlatform\Core\Api\IdentifiersExtractor" public="false">
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="property_accessor"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="api_platform.hydra.normalizer.partial_collection_view.inner" class="ApiPlatform\Core\Hydra\Serializer\CollectionNormalizer" public="false">
      <argument type="service" id="api_platform.jsonld.context_builder"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
      <argument type="service" id="api_platform.iri_converter"/>
    </service>
    <service id="api_platform.hydra.json_schema.schema_factory.inner" class="ApiPlatform\Core\JsonSchema\SchemaFactory" public="false">
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="serializer.name_converter.metadata_aware" on-invalid="ignore"/>
      <argument type="service" id="api_platform.resource_class_resolver"/>
    </service>
    <service id="debug.api_platform.collection_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainCollectionDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.collection_data_provider"/>
    </service>
    <service id="debug.api_platform.item_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainItemDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.item_data_provider"/>
    </service>
    <service id="debug.api_platform.subresource_data_provider.inner" class="ApiPlatform\Core\DataProvider\ChainSubresourceDataProvider" public="false">
      <argument type="tagged_iterator" tag="api_platform.subresource_data_provider"/>
    </service>
    <service id="debug.api_platform.data_persister.inner" class="ApiPlatform\Core\DataPersister\ChainDataPersister" public="false">
      <argument type="tagged_iterator" tag="api_platform.data_persister"/>
    </service>
    <service id="debug.argument_resolver.request_attribute.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestAttributeValueResolver" public="false"/>
    <service id="debug.argument_resolver.request.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\RequestValueResolver" public="false"/>
    <service id="debug.argument_resolver.session.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\SessionValueResolver" public="false"/>
    <service id="debug.security.user_value_resolver.inner" class="Symfony\Component\Security\Http\Controller\UserValueResolver" public="false">
      <argument type="service" id="security.token_storage"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver.inner" class="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
    </service>
    <service id="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver.inner" class="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" public="false">
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Provider\AdminContextProvider"/>
      <argument type="service" id="EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator"/>
    </service>
    <service id="debug.argument_resolver.service.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\ServiceValueResolver" public="false">
      <argument type="service" id=".service_locator.xkYvij3"/>
    </service>
    <service id="debug.argument_resolver.default.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\DefaultValueResolver" public="false"/>
    <service id="debug.argument_resolver.variadic.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\VariadicValueResolver" public="false"/>
    <service id="debug.argument_resolver.not_tagged_controller.inner" class="Symfony\Component\HttpKernel\Controller\ArgumentResolver\NotTaggedControllerValueResolver" public="false">
      <argument type="service" id=".service_locator.xkYvij3"/>
    </service>
    <service id="api_platform.openapi.normalizer.api_gateway.inner" class="ApiPlatform\Core\OpenApi\Serializer\OpenApiNormalizer" public="false">
      <argument type="service" id=".1_Serializer~7uWSGdj"/>
    </service>
    <service id="api_platform.swagger.normalizer.api_gateway.inner" class="ApiPlatform\Core\Swagger\Serializer\DocumentationNormalizer" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.hydra.json_schema.schema_factory"/>
      <argument type="service" id="api_platform.json_schema.type_factory"/>
      <argument type="service" id="api_platform.operation_path_resolver.router"/>
      <argument>null</argument>
      <argument type="service" id="api_platform.filter_locator"/>
      <argument>null</argument>
      <argument>false</argument>
      <argument>oauth2</argument>
      <argument>application</argument>
      <argument></argument>
      <argument></argument>
      <argument type="collection"/>
      <argument type="collection"/>
      <argument type="service" id="api_platform.subresource_operation_factory.cached"/>
      <argument>true</argument>
      <argument>page</argument>
      <argument>false</argument>
      <argument>itemsPerPage</argument>
      <argument>%api_platform.formats%</argument>
      <argument>false</argument>
      <argument>pagination</argument>
      <argument type="collection"/>
      <argument>%api_platform.swagger.versions%</argument>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
      <argument type="service">
        <service class="ApiPlatform\Core\OpenApi\Serializer\OpenApiNormalizer" public="false">
          <argument type="service" id=".1_Serializer~7uWSGdj"/>
        </service>
      </argument>
    </service>
    <service id="api_platform.route_name_resolver.cached.inner" class="ApiPlatform\Core\Bridge\Symfony\Routing\RouteNameResolver" public="false">
      <argument type="service" id="api_platform.router"/>
    </service>
    <service id="api_platform.subresource_operation_factory.cached.inner" class="ApiPlatform\Core\Operation\Factory\SubresourceOperationFactory" public="false">
      <argument type="service" id="api_platform.metadata.resource.metadata_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.name_collection_factory.cached"/>
      <argument type="service" id="api_platform.metadata.property.metadata_factory.cached"/>
      <argument type="service" id="api_platform.path_segment_name_generator.underscore"/>
      <argument type="service" id="api_platform.identifiers_extractor.cached"/>
    </service>
    <service id=".errored..service_locator.7I.FzBw.EasyCorp\Bundle\EasyAdminBundle\Config\Crud" class="EasyCorp\Bundle\EasyAdminBundle\Config\Crud"/>
    <service id=".errored..service_locator.hVQViHK.EasyCorp\Bundle\EasyAdminBundle\Config\Assets" class="EasyCorp\Bundle\EasyAdminBundle\Config\Assets"/>
    <service id=".errored..service_locator.eGAETcz.EasyCorp\Bundle\EasyAdminBundle\Config\Actions" class="EasyCorp\Bundle\EasyAdminBundle\Config\Actions"/>
    <service id=".errored..service_locator.82KoR2v.EasyCorp\Bundle\EasyAdminBundle\Config\Filters" class="EasyCorp\Bundle\EasyAdminBundle\Config\Filters"/>
    <service id=".errored..service_locator.h2tplhS.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext" class="EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
    <service id=".errored..service_locator.huuTAyO.EasyCorp\Bundle\EasyAdminBundle\Dto\BatchActionDto" class="EasyCorp\Bundle\EasyAdminBundle\Dto\BatchActionDto"/>
    <service id=".errored..service_locator.huuTAyO.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext" class="EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
    <service id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto" class="EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto"/>
    <service id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection" class="EasyCorp\Bundle\EasyAdminBundle\Collection\FieldCollection"/>
    <service id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection" class="EasyCorp\Bundle\EasyAdminBundle\Collection\FilterCollection"/>
    <service id=".errored..service_locator.jrmEAfi.EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto" class="EasyCorp\Bundle\EasyAdminBundle\Dto\SearchDto"/>
    <service id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext" class="EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext"/>
    <service id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto" class="EasyCorp\Bundle\EasyAdminBundle\Dto\EntityDto"/>
    <service id=".errored..service_locator.1ZmGw6X.EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore" class="EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore"/>
    <service id=".errored..service_locator._L8Y8bZ.EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore" class="EasyCorp\Bundle\EasyAdminBundle\Config\KeyValueStore"/>
    <service id=".errored..service_locator.RLVVpop.Symfony\Component\Security\Core\User\UserInterface" class="Symfony\Component\Security\Core\User\UserInterface"/>
    <service id="console.command_loader" class="Symfony\Component\Console\CommandLoader\ContainerCommandLoader" public="true">
      <argument type="service" id=".service_locator.YyDn3Fz"/>
      <argument type="collection">
        <argument key="about">console.command.about</argument>
        <argument key="assets:install">console.command.assets_install</argument>
        <argument key="cache:clear">console.command.cache_clear</argument>
        <argument key="cache:pool:clear">console.command.cache_pool_clear</argument>
        <argument key="cache:pool:prune">console.command.cache_pool_prune</argument>
        <argument key="cache:pool:delete">console.command.cache_pool_delete</argument>
        <argument key="cache:pool:list">console.command.cache_pool_list</argument>
        <argument key="cache:warmup">console.command.cache_warmup</argument>
        <argument key="debug:config">console.command.config_debug</argument>
        <argument key="config:dump-reference">console.command.config_dump_reference</argument>
        <argument key="debug:container">console.command.container_debug</argument>
        <argument key="lint:container">console.command.container_lint</argument>
        <argument key="debug:autowiring">console.command.debug_autowiring</argument>
        <argument key="debug:event-dispatcher">console.command.event_dispatcher_debug</argument>
        <argument key="debug:router">console.command.router_debug</argument>
        <argument key="router:match">console.command.router_match</argument>
        <argument key="debug:translation">console.command.translation_debug</argument>
        <argument key="translation:update">console.command.translation_update</argument>
        <argument key="lint:xliff">console.command.xliff_lint</argument>
        <argument key="lint:yaml">console.command.yaml_lint</argument>
        <argument key="debug:form">console.command.form_debug</argument>
        <argument key="secrets:set">console.command.secrets_set</argument>
        <argument key="secrets:remove">console.command.secrets_remove</argument>
        <argument key="secrets:generate-keys">console.command.secrets_generate_key</argument>
        <argument key="secrets:list">console.command.secrets_list</argument>
        <argument key="secrets:decrypt-to-local">console.command.secrets_decrypt_to_local</argument>
        <argument key="secrets:encrypt-from-local">console.command.secrets_encrypt_from_local</argument>
        <argument key="server:run">web_server.command.server_run</argument>
        <argument key="server:start">web_server.command.server_start</argument>
        <argument key="server:stop">web_server.command.server_stop</argument>
        <argument key="server:status">web_server.command.server_status</argument>
        <argument key="doctrine:database:create">doctrine.database_create_command</argument>
        <argument key="doctrine:database:drop">doctrine.database_drop_command</argument>
        <argument key="doctrine:query:sql">doctrine.query_sql_command</argument>
        <argument key="dbal:run-sql">Doctrine\DBAL\Tools\Console\Command\RunSqlCommand</argument>
        <argument key="doctrine:database:import">doctrine.database_import_command</argument>
        <argument key="doctrine:cache:clear-metadata">doctrine.cache_clear_metadata_command</argument>
        <argument key="doctrine:cache:clear-query">doctrine.cache_clear_query_cache_command</argument>
        <argument key="doctrine:cache:clear-result">doctrine.cache_clear_result_command</argument>
        <argument key="doctrine:cache:clear-collection-region">doctrine.cache_collection_region_command</argument>
        <argument key="doctrine:mapping:convert">doctrine.mapping_convert_command</argument>
        <argument key="doctrine:schema:create">doctrine.schema_create_command</argument>
        <argument key="doctrine:schema:drop">doctrine.schema_drop_command</argument>
        <argument key="doctrine:ensure-production-settings">doctrine.ensure_production_settings_command</argument>
        <argument key="doctrine:cache:clear-entity-region">doctrine.clear_entity_region_command</argument>
        <argument key="doctrine:mapping:info">doctrine.mapping_info_command</argument>
        <argument key="doctrine:cache:clear-query-region">doctrine.clear_query_region_command</argument>
        <argument key="doctrine:query:dql">doctrine.query_dql_command</argument>
        <argument key="doctrine:schema:update">doctrine.schema_update_command</argument>
        <argument key="doctrine:schema:validate">doctrine.schema_validate_command</argument>
        <argument key="doctrine:mapping:import">doctrine.mapping_import_command</argument>
        <argument key="doctrine:migrations:diff">doctrine_migrations.diff_command</argument>
        <argument key="doctrine:migrations:sync-metadata-storage">doctrine_migrations.sync_metadata_command</argument>
        <argument key="doctrine:migrations:list">doctrine_migrations.versions_command</argument>
        <argument key="doctrine:migrations:current">doctrine_migrations.current_command</argument>
        <argument key="doctrine:migrations:dump-schema">doctrine_migrations.dump_schema_command</argument>
        <argument key="doctrine:migrations:execute">doctrine_migrations.execute_command</argument>
        <argument key="doctrine:migrations:generate">doctrine_migrations.generate_command</argument>
        <argument key="doctrine:migrations:latest">doctrine_migrations.latest_command</argument>
        <argument key="doctrine:migrations:migrate">doctrine_migrations.migrate_command</argument>
        <argument key="doctrine:migrations:rollup">doctrine_migrations.rollup_command</argument>
        <argument key="doctrine:migrations:status">doctrine_migrations.status_command</argument>
        <argument key="doctrine:migrations:up-to-date">doctrine_migrations.up_to_date_command</argument>
        <argument key="doctrine:migrations:version">doctrine_migrations.version_command</argument>
        <argument key="security:encode-password">security.command.user_password_encoder</argument>
        <argument key="doctrine:fixtures:load">doctrine.fixtures_load_command</argument>
        <argument key="debug:twig">twig.command.debug</argument>
        <argument key="lint:twig">twig.command.lint</argument>
        <argument key="make:admin:migration">EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand</argument>
        <argument key="make:admin:dashboard">EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand</argument>
        <argument key="make:admin:crud">EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand</argument>
        <argument key="api:json-schema:generate">api_platform.json_schema.json_schema_generate_command</argument>
        <argument key="api:openapi:export">api_platform.openapi.command</argument>
        <argument key="api:swagger:export">api_platform.swagger.command.swagger_command</argument>
        <argument key="vich:mapping:debug-class">vich_uploader.command.mapping_debug_class</argument>
        <argument key="vich:mapping:debug">vich_uploader.command.mapping_debug</argument>
        <argument key="vich:mapping:list-classes">vich_uploader.command.mapping_list_classes</argument>
        <argument key="lexik:jwt:check-config">lexik_jwt_authentication.check_config_command</argument>
        <argument key="lexik:jwt:generate-token">lexik_jwt_authentication.generate_token_command</argument>
        <argument key="lexik:jwt:generate-keypair">lexik_jwt_authentication.generate_keypair_command</argument>
        <argument key="gesdinet:jwt:clear">Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand</argument>
        <argument key="gesdinet:jwt:revoke">Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand</argument>
        <argument key="debug:swiftmailer">swiftmailer.command.debug</argument>
        <argument key="swiftmailer:email:send">swiftmailer.command.new_email</argument>
        <argument key="swiftmailer:spool:send">swiftmailer.command.send_email</argument>
        <argument key="make:auth">maker.auto_command.make_auth</argument>
        <argument key="make:command">maker.auto_command.make_command</argument>
        <argument key="make:controller">maker.auto_command.make_controller</argument>
        <argument key="make:crud">maker.auto_command.make_crud</argument>
        <argument key="make:docker:database">maker.auto_command.make_docker_database</argument>
        <argument key="make:entity">maker.auto_command.make_entity</argument>
        <argument key="make:fixtures">maker.auto_command.make_fixtures</argument>
        <argument key="make:form">maker.auto_command.make_form</argument>
        <argument key="make:message">maker.auto_command.make_message</argument>
        <argument key="make:messenger-middleware">maker.auto_command.make_messenger_middleware</argument>
        <argument key="make:registration-form">maker.auto_command.make_registration_form</argument>
        <argument key="make:reset-password">maker.auto_command.make_reset_password</argument>
        <argument key="make:serializer:encoder">maker.auto_command.make_serializer_encoder</argument>
        <argument key="make:serializer:normalizer">maker.auto_command.make_serializer_normalizer</argument>
        <argument key="make:subscriber">maker.auto_command.make_subscriber</argument>
        <argument key="make:twig-extension">maker.auto_command.make_twig_extension</argument>
        <argument key="make:test">maker.auto_command.make_test</argument>
        <argument key="make:unit-test">maker.auto_command.make_test</argument>
        <argument key="make:functional-test">maker.auto_command.make_test</argument>
        <argument key="make:validator">maker.auto_command.make_validator</argument>
        <argument key="make:voter">maker.auto_command.make_voter</argument>
        <argument key="make:user">maker.auto_command.make_user</argument>
        <argument key="make:migration">maker.auto_command.make_migration</argument>
      </argument>
    </service>
    <service id=".service_locator.YyDn3Fz" class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand" type="service_closure" id="Doctrine\DBAL\Tools\Console\Command\RunSqlCommand"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminDashboardCommand"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeAdminMigrationCommand"/>
        <argument key="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand" type="service_closure" id="EasyCorp\Bundle\EasyAdminBundle\Command\MakeCrudControllerCommand"/>
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand" type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\Command\ClearInvalidRefreshTokensCommand"/>
        <argument key="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand" type="service_closure" id="Gesdinet\JWTRefreshTokenBundle\Command\RevokeRefreshTokenCommand"/>
        <argument key="api_platform.json_schema.json_schema_generate_command" type="service_closure" id="api_platform.json_schema.json_schema_generate_command"/>
        <argument key="api_platform.openapi.command" type="service_closure" id="api_platform.openapi.command"/>
        <argument key="api_platform.swagger.command.swagger_command" type="service_closure" id="api_platform.swagger.command.swagger_command"/>
        <argument key="console.command.about" type="service_closure" id="console.command.about"/>
        <argument key="console.command.assets_install" type="service_closure" id="console.command.assets_install"/>
        <argument key="console.command.cache_clear" type="service_closure" id="console.command.cache_clear"/>
        <argument key="console.command.cache_pool_clear" type="service_closure" id="console.command.cache_pool_clear"/>
        <argument key="console.command.cache_pool_delete" type="service_closure" id="console.command.cache_pool_delete"/>
        <argument key="console.command.cache_pool_list" type="service_closure" id="console.command.cache_pool_list"/>
        <argument key="console.command.cache_pool_prune" type="service_closure" id="console.command.cache_pool_prune"/>
        <argument key="console.command.cache_warmup" type="service_closure" id="console.command.cache_warmup"/>
        <argument key="console.command.config_debug" type="service_closure" id="console.command.config_debug"/>
        <argument key="console.command.config_dump_reference" type="service_closure" id="console.command.config_dump_reference"/>
        <argument key="console.command.container_debug" type="service_closure" id="console.command.container_debug"/>
        <argument key="console.command.container_lint" type="service_closure" id="console.command.container_lint"/>
        <argument key="console.command.debug_autowiring" type="service_closure" id="console.command.debug_autowiring"/>
        <argument key="console.command.event_dispatcher_debug" type="service_closure" id="console.command.event_dispatcher_debug"/>
        <argument key="console.command.form_debug" type="service_closure" id="console.command.form_debug"/>
        <argument key="console.command.router_debug" type="service_closure" id="console.command.router_debug"/>
        <argument key="console.command.router_match" type="service_closure" id="console.command.router_match"/>
        <argument key="console.command.secrets_decrypt_to_local" type="service_closure" id="console.command.secrets_decrypt_to_local"/>
        <argument key="console.command.secrets_encrypt_from_local" type="service_closure" id="console.command.secrets_encrypt_from_local"/>
        <argument key="console.command.secrets_generate_key" type="service_closure" id="console.command.secrets_generate_key"/>
        <argument key="console.command.secrets_list" type="service_closure" id="console.command.secrets_list"/>
        <argument key="console.command.secrets_remove" type="service_closure" id="console.command.secrets_remove"/>
        <argument key="console.command.secrets_set" type="service_closure" id="console.command.secrets_set"/>
        <argument key="console.command.translation_debug" type="service_closure" id="console.command.translation_debug"/>
        <argument key="console.command.translation_update" type="service_closure" id="console.command.translation_update"/>
        <argument key="console.command.xliff_lint" type="service_closure" id="console.command.xliff_lint"/>
        <argument key="console.command.yaml_lint" type="service_closure" id="console.command.yaml_lint"/>
        <argument key="doctrine.cache_clear_metadata_command" type="service_closure" id="doctrine.cache_clear_metadata_command"/>
        <argument key="doctrine.cache_clear_query_cache_command" type="service_closure" id="doctrine.cache_clear_query_cache_command"/>
        <argument key="doctrine.cache_clear_result_command" type="service_closure" id="doctrine.cache_clear_result_command"/>
        <argument key="doctrine.cache_collection_region_command" type="service_closure" id="doctrine.cache_collection_region_command"/>
        <argument key="doctrine.clear_entity_region_command" type="service_closure" id="doctrine.clear_entity_region_command"/>
        <argument key="doctrine.clear_query_region_command" type="service_closure" id="doctrine.clear_query_region_command"/>
        <argument key="doctrine.database_create_command" type="service_closure" id="doctrine.database_create_command"/>
        <argument key="doctrine.database_drop_command" type="service_closure" id="doctrine.database_drop_command"/>
        <argument key="doctrine.database_import_command" type="service_closure" id="doctrine.database_import_command"/>
        <argument key="doctrine.ensure_production_settings_command" type="service_closure" id="doctrine.ensure_production_settings_command"/>
        <argument key="doctrine.fixtures_load_command" type="service_closure" id="doctrine.fixtures_load_command"/>
        <argument key="doctrine.mapping_convert_command" type="service_closure" id="doctrine.mapping_convert_command"/>
        <argument key="doctrine.mapping_import_command" type="service_closure" id="doctrine.mapping_import_command"/>
        <argument key="doctrine.mapping_info_command" type="service_closure" id="doctrine.mapping_info_command"/>
        <argument key="doctrine.query_dql_command" type="service_closure" id="doctrine.query_dql_command"/>
        <argument key="doctrine.query_sql_command" type="service_closure" id="doctrine.query_sql_command"/>
        <argument key="doctrine.schema_create_command" type="service_closure" id="doctrine.schema_create_command"/>
        <argument key="doctrine.schema_drop_command" type="service_closure" id="doctrine.schema_drop_command"/>
        <argument key="doctrine.schema_update_command" type="service_closure" id="doctrine.schema_update_command"/>
        <argument key="doctrine.schema_validate_command" type="service_closure" id="doctrine.schema_validate_command"/>
        <argument key="doctrine_migrations.current_command" type="service_closure" id="doctrine_migrations.current_command"/>
        <argument key="doctrine_migrations.diff_command" type="service_closure" id="doctrine_migrations.diff_command"/>
        <argument key="doctrine_migrations.dump_schema_command" type="service_closure" id="doctrine_migrations.dump_schema_command"/>
        <argument key="doctrine_migrations.execute_command" type="service_closure" id="doctrine_migrations.execute_command"/>
        <argument key="doctrine_migrations.generate_command" type="service_closure" id="doctrine_migrations.generate_command"/>
        <argument key="doctrine_migrations.latest_command" type="service_closure" id="doctrine_migrations.latest_command"/>
        <argument key="doctrine_migrations.migrate_command" type="service_closure" id="doctrine_migrations.migrate_command"/>
        <argument key="doctrine_migrations.rollup_command" type="service_closure" id="doctrine_migrations.rollup_command"/>
        <argument key="doctrine_migrations.status_command" type="service_closure" id="doctrine_migrations.status_command"/>
        <argument key="doctrine_migrations.sync_metadata_command" type="service_closure" id="doctrine_migrations.sync_metadata_command"/>
        <argument key="doctrine_migrations.up_to_date_command" type="service_closure" id="doctrine_migrations.up_to_date_command"/>
        <argument key="doctrine_migrations.version_command" type="service_closure" id="doctrine_migrations.version_command"/>
        <argument key="doctrine_migrations.versions_command" type="service_closure" id="doctrine_migrations.versions_command"/>
        <argument key="lexik_jwt_authentication.check_config_command" type="service_closure" id="lexik_jwt_authentication.check_config_command"/>
        <argument key="lexik_jwt_authentication.generate_keypair_command" type="service_closure" id="lexik_jwt_authentication.generate_keypair_command"/>
        <argument key="lexik_jwt_authentication.generate_token_command" type="service_closure" id="lexik_jwt_authentication.generate_token_command"/>
        <argument key="maker.auto_command.make_auth" type="service_closure" id="maker.auto_command.make_auth"/>
        <argument key="maker.auto_command.make_command" type="service_closure" id="maker.auto_command.make_command"/>
        <argument key="maker.auto_command.make_controller" type="service_closure" id="maker.auto_command.make_controller"/>
        <argument key="maker.auto_command.make_crud" type="service_closure" id="maker.auto_command.make_crud"/>
        <argument key="maker.auto_command.make_docker_database" type="service_closure" id="maker.auto_command.make_docker_database"/>
        <argument key="maker.auto_command.make_entity" type="service_closure" id="maker.auto_command.make_entity"/>
        <argument key="maker.auto_command.make_fixtures" type="service_closure" id="maker.auto_command.make_fixtures"/>
        <argument key="maker.auto_command.make_form" type="service_closure" id="maker.auto_command.make_form"/>
        <argument key="maker.auto_command.make_message" type="service_closure" id="maker.auto_command.make_message"/>
        <argument key="maker.auto_command.make_messenger_middleware" type="service_closure" id="maker.auto_command.make_messenger_middleware"/>
        <argument key="maker.auto_command.make_migration" type="service_closure" id="maker.auto_command.make_migration"/>
        <argument key="maker.auto_command.make_registration_form" type="service_closure" id="maker.auto_command.make_registration_form"/>
        <argument key="maker.auto_command.make_reset_password" type="service_closure" id="maker.auto_command.make_reset_password"/>
        <argument key="maker.auto_command.make_serializer_encoder" type="service_closure" id="maker.auto_command.make_serializer_encoder"/>
        <argument key="maker.auto_command.make_serializer_normalizer" type="service_closure" id="maker.auto_command.make_serializer_normalizer"/>
        <argument key="maker.auto_command.make_subscriber" type="service_closure" id="maker.auto_command.make_subscriber"/>
        <argument key="maker.auto_command.make_test" type="service_closure" id="maker.auto_command.make_test"/>
        <argument key="maker.auto_command.make_twig_extension" type="service_closure" id="maker.auto_command.make_twig_extension"/>
        <argument key="maker.auto_command.make_user" type="service_closure" id="maker.auto_command.make_user"/>
        <argument key="maker.auto_command.make_validator" type="service_closure" id="maker.auto_command.make_validator"/>
        <argument key="maker.auto_command.make_voter" type="service_closure" id="maker.auto_command.make_voter"/>
        <argument key="security.command.user_password_encoder" type="service_closure" id="security.command.user_password_encoder"/>
        <argument key="swiftmailer.command.debug" type="service_closure" id="swiftmailer.command.debug"/>
        <argument key="swiftmailer.command.new_email" type="service_closure" id="swiftmailer.command.new_email"/>
        <argument key="swiftmailer.command.send_email" type="service_closure" id="swiftmailer.command.send_email"/>
        <argument key="twig.command.debug" type="service_closure" id="twig.command.debug"/>
        <argument key="twig.command.lint" type="service_closure" id="twig.command.lint"/>
        <argument key="vich_uploader.command.mapping_debug" type="service_closure" id="vich_uploader.command.mapping_debug"/>
        <argument key="vich_uploader.command.mapping_debug_class" type="service_closure" id="vich_uploader.command.mapping_debug_class"/>
        <argument key="vich_uploader.command.mapping_list_classes" type="service_closure" id="vich_uploader.command.mapping_list_classes"/>
        <argument key="web_server.command.server_run" type="service_closure" id="web_server.command.server_run"/>
        <argument key="web_server.command.server_start" type="service_closure" id="web_server.command.server_start"/>
        <argument key="web_server.command.server_status" type="service_closure" id="web_server.command.server_status"/>
        <argument key="web_server.command.server_stop" type="service_closure" id="web_server.command.server_stop"/>
      </argument>
    </service>
    <service id="cache.app.recorder_inner" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" public="false">
      <argument>QgVeRbqbsz</argument>
      <argument>0</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="cache.default_marshaller" on-invalid="ignore"/>
      <call method="setLogger">
        <argument type="service" id="logger" on-invalid="ignore"/>
      </call>
    </service>
    <service id="cache.system.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>+fCn5J8F1X</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.validator.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>AlSthqKKx3</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.serializer.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>UD6ey9htfH</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.annotations.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>C9eUDDOV3V</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.property_info.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>bYdNZd7KEv</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="cache.doctrine.orm.default.metadata.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.result.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.doctrine.orm.default.query.recorder_inner" class="Symfony\Component\Cache\Adapter\ArrayAdapter" public="false"/>
    <service id="cache.security_expression_language.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Z0Oo6HkzcC</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.route_name_resolver.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>+HdXI7y+4U</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.identifiers_extractor.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>PKvWZfVrkm</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.subresource_operation_factory.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>lED-YyX9eT</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.resource.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>hhIyTKwr1W</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id="api_platform.cache.metadata.property.recorder_inner" class="Symfony\Component\Cache\Adapter\AdapterInterface" public="false">
      <argument>Ju+1jcLWdv</argument>
      <argument>0</argument>
      <argument>%container.build_id%</argument>
      <argument>C:\Users\MARYEM\React\Projet_Portail\pet-adoption\var\cache\dev/pools</argument>
      <argument type="service" id="logger" on-invalid="ignore"/>
      <factory class="Symfony\Component\Cache\Adapter\AbstractAdapter" method="createSystemCache"/>
    </service>
    <service id=".service_locator.7YWluy." class="Symfony\Component\DependencyInjection\ServiceLocator" public="false">
      <tag name="container.service_locator"/>
      <argument type="collection">
        <argument key="Symfony\Bridge\Twig\Extension\CsrfRuntime" type="service_closure" id="twig.runtime.security_csrf"/>
        <argument key="Symfony\Bridge\Twig\Extension\HttpKernelRuntime" type="service_closure" id="twig.runtime.httpkernel"/>
        <argument key="Symfony\Component\Form\FormRenderer" type="service_closure" id="twig.form.renderer"/>
      </argument>
    </service>
    <service id="Psr\Container\ContainerInterface" alias="service_container" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ContainerInterface" alias="service_container" public="false"/>
    <service id="controller_name_converter" alias=".legacy_controller_name_converter" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="resolve_controller_name_subscriber" alias=".legacy_resolve_controller_name_subscriber" public="false">
      <deprecated>The "%alias_id%" service is deprecated since Symfony 4.3.</deprecated>
    </service>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ContainerBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ParameterBag\ParameterBagInterface" alias="parameter_bag" public="false"/>
    <service id="Symfony\Component\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Contracts\EventDispatcher\EventDispatcherInterface" alias="debug.event_dispatcher" public="false"/>
    <service id="Symfony\Component\HttpKernel\HttpKernelInterface" alias="http_kernel" public="false"/>
    <service id="Symfony\Component\HttpFoundation\RequestStack" alias="request_stack" public="false"/>
    <service id="Symfony\Component\HttpFoundation\UrlHelper" alias="url_helper" public="false"/>
    <service id="Symfony\Component\HttpKernel\KernelInterface" alias="kernel" public="false"/>
    <service id="Symfony\Component\Filesystem\Filesystem" alias="filesystem" public="false"/>
    <service id="Symfony\Component\HttpKernel\Config\FileLocator" alias="file_locator" public="false"/>
    <service id="Symfony\Component\DependencyInjection\ReverseContainer" alias="reverse_container" public="false"/>
    <service id="error_renderer.html" alias="twig.error_renderer.html"/>
    <service id="error_renderer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Psr\Container\ContainerInterface $parameterBag" alias="parameter_bag"/>
    <service id="cache.app_clearer" alias="cache.default_clearer" public="true"/>
    <service id="Psr\Cache\CacheItemPoolInterface" alias="cache.app" public="false"/>
    <service id="Psr\SimpleCache\CacheInterface" alias="cache.app.simple" public="false"/>
    <service id="Symfony\Component\Cache\Adapter\AdapterInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\CacheInterface" alias="cache.app" public="false"/>
    <service id="Symfony\Contracts\Cache\TagAwareCacheInterface" alias="cache.app.taggable" public="false"/>
    <service id="Symfony\Component\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="Symfony\Contracts\Translation\TranslatorInterface" alias="translator.data_collector" public="false"/>
    <service id="cache.default_redis_provider" alias=".cache_connection.GD_MSZC" public="false"/>
    <service id="cache.default_memcached_provider" alias=".cache_connection.JKE6keX" public="false"/>
    <service id="cache.default_pdo_provider" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\SessionInterface" alias="session" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Storage\SessionStorageInterface" alias="session.storage.native" public="false"/>
    <service id="SessionHandlerInterface" alias="session.handler.native_file" public="false"/>
    <service id="Symfony\Component\HttpFoundation\Session\Flash\FlashBagInterface" alias="session.flash_bag" public="false"/>
    <service id="session.storage.filesystem" alias="session.storage.mock_file" public="false"/>
    <service id="session.storage" alias="session.storage.native"/>
    <service id="session.handler" alias="session.handler.native_file"/>
    <service id="Symfony\Component\Security\Csrf\TokenGenerator\TokenGeneratorInterface" alias="security.csrf.token_generator" public="false"/>
    <service id="Symfony\Component\Security\Csrf\TokenStorage\TokenStorageInterface" alias="security.csrf.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Csrf\CsrfTokenManagerInterface" alias="security.csrf.token_manager" public="false"/>
    <service id="Symfony\Component\Form\ResolvedFormTypeFactoryInterface" alias="form.resolved_type_factory" public="false"/>
    <service id="Symfony\Component\Form\FormRegistryInterface" alias="form.registry" public="false"/>
    <service id="Symfony\Component\Form\FormFactoryInterface" alias="form.factory" public="false"/>
    <service id="form.property_accessor" alias="property_accessor" public="false"/>
    <service id="form.choice_list_factory" alias="form.choice_list_factory.cached" public="false"/>
    <service id="Symfony\Component\Asset\Packages" alias="assets.packages" public="false"/>
    <service id="Symfony\Component\Validator\Validator\ValidatorInterface" alias="debug.validator" public="false"/>
    <service id="validator.mapping.class_metadata_factory" alias="debug.validator" public="false"/>
    <service id="Symfony\Component\Translation\Reader\TranslationReaderInterface" alias="translation.reader" public="false"/>
    <service id="Symfony\Component\Translation\Extractor\ExtractorInterface" alias="translation.extractor" public="false"/>
    <service id="Symfony\Component\Translation\Writer\TranslationWriterInterface" alias="translation.writer" public="false"/>
    <service id="translator" alias="translator.data_collector" public="true"/>
    <service id="translator.formatter" alias="translator.formatter.default" public="false"/>
    <service id="Symfony\Component\HttpKernel\Debug\FileLinkFormatter" alias="debug.file_link_formatter" public="false"/>
    <service id="Symfony\Component\Stopwatch\Stopwatch" alias="debug.stopwatch" public="false"/>
    <service id="router" alias="router.default" public="true"/>
    <service id="Symfony\Component\Routing\RouterInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Generator\UrlGeneratorInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\Matcher\UrlMatcherInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContextAwareInterface" alias="router.default" public="false"/>
    <service id="Symfony\Component\Routing\RequestContext" alias="router.request_context" public="false"/>
    <service id="annotation_reader" alias="annotations.cached_reader"/>
    <service id="Doctrine\Common\Annotations\Reader" alias="annotations.cached_reader" public="false"/>
    <service id="Symfony\Component\PropertyAccess\PropertyAccessorInterface" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\SerializerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\NormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\DenormalizerInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\EncoderInterface" alias="serializer" public="false"/>
    <service id="Symfony\Component\Serializer\Encoder\DecoderInterface" alias="serializer" public="false"/>
    <service id="serializer.property_accessor" alias="property_accessor" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\ClassDiscriminatorResolverInterface" alias="serializer.mapping.class_discriminator_resolver" public="false"/>
    <service id="Symfony\Component\Serializer\Normalizer\ObjectNormalizer" alias="serializer.normalizer.object" public="false"/>
    <service id="Symfony\Component\Serializer\Mapping\Factory\ClassMetadataFactoryInterface" alias="serializer.mapping.class_metadata_factory" public="false"/>
    <service id="error_renderer.serializer" alias="error_handler.error_renderer.serializer" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyAccessExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyDescriptionExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInfoExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyTypeExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyListExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\PropertyInfo\PropertyInitializableExtractorInterface" alias="property_info" public="false"/>
    <service id="Symfony\Component\Mime\MimeTypesInterface" alias="mime_types" public="false"/>
    <service id="Symfony\Component\Mime\MimeTypeGuesserInterface" alias="mime_types" public="false"/>
    <service id="Doctrine\DBAL\Driver\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\DBAL\Connection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="Doctrine\Common\Persistence\ManagerRegistry" alias="doctrine" public="false"/>
    <service id="database_connection" alias="doctrine.dbal.default_connection" public="true"/>
    <service id="doctrine.dbal.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="Doctrine\DBAL\Connection $defaultConnection" alias="doctrine.dbal.default_connection" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.metadata.annotation_reader" alias="annotations.cached_reader" public="false"/>
    <service id="doctrine.orm.entity_manager" alias="doctrine.orm.default_entity_manager" public="true"/>
    <service id="doctrine.orm.default_metadata_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.metadata" public="false"/>
    <service id="doctrine.orm.default_result_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.result" public="false"/>
    <service id="doctrine.orm.default_query_cache" alias="doctrine.orm.cache.provider.cache.doctrine.orm.default.query" public="false"/>
    <service id="Doctrine\ORM\EntityManagerInterface $defaultEntityManager" alias="doctrine.orm.default_entity_manager" public="false"/>
    <service id="doctrine.orm.default_entity_manager.event_manager" alias="doctrine.dbal.default_connection.event_manager" public="false"/>
    <service id="doctrine.migrations.metadata_storage" alias="doctrine.migrations.storage.table_storage"/>
    <service id="Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface" alias="security.authorization_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\Token\Storage\TokenStorageInterface" alias="security.token_storage" public="false"/>
    <service id="Symfony\Component\Security\Core\Security" alias="security.helper" public="false"/>
    <service id="Symfony\Component\Security\Core\Authentication\AuthenticationManagerInterface" alias="security.authentication.manager" public="false"/>
    <service id="Symfony\Component\Security\Http\Session\SessionAuthenticationStrategyInterface" alias="security.authentication.session_strategy" public="false"/>
    <service id="security.encoder_factory" alias="security.encoder_factory.generic" public="false"/>
    <service id="Symfony\Component\Security\Core\Encoder\EncoderFactoryInterface" alias="security.encoder_factory.generic" public="false"/>
    <service id="security.password_encoder" alias="security.user_password_encoder.generic" public="true"/>
    <service id="Symfony\Component\Security\Core\Encoder\UserPasswordEncoderInterface" alias="security.user_password_encoder.generic" public="false"/>
    <service id="Symfony\Component\Security\Http\Authentication\AuthenticationUtils" alias="security.authentication_utils" public="false"/>
    <service id="Symfony\Component\Security\Core\Authorization\AccessDecisionManagerInterface" alias="debug.security.access.decision_manager" public="false"/>
    <service id="Symfony\Component\Security\Core\Role\RoleHierarchyInterface" alias="security.role_hierarchy" public="false"/>
    <service id="Symfony\Component\Security\Http\Firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Http\HttpUtils" alias="security.http_utils" public="false"/>
    <service id="Symfony\Component\Security\Guard\GuardAuthenticatorHandler" alias="security.authentication.guard_handler" public="false"/>
    <service id="security.firewall" alias="debug.security.firewall" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserProviderInterface" alias="security.user.provider.concrete.app_user_provider"/>
    <service id="security.authentication.session_strategy.login" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.login" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.register" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.register" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.refresh" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.refresh" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.api" alias="security.authentication.session_strategy_noop"/>
    <service id="security.user_checker.api" alias="security.user_checker" public="false"/>
    <service id="security.authentication.session_strategy.main" alias="security.authentication.session_strategy"/>
    <service id="security.user_checker.main" alias="security.user_checker" public="false"/>
    <service id="Symfony\Component\Security\Core\User\UserCheckerInterface" alias="security.user_checker" public="false"/>
    <service id="Twig_Environment" alias="twig" public="false"/>
    <service id="Twig\Environment" alias="twig" public="false"/>
    <service id="api_platform.serializer" alias="serializer"/>
    <service id="api_platform.property_accessor" alias="property_accessor" public="false"/>
    <service id="api_platform.property_info" alias="property_info" public="false"/>
    <service id="ApiPlatform\Core\Api\ResourceClassResolverInterface" alias="api_platform.resource_class_resolver"/>
    <service id="ApiPlatform\Core\Api\UrlGeneratorInterface" alias="api_platform.router"/>
    <service id="ApiPlatform\Core\Api\IriConverterInterface" alias="api_platform.iri_converter"/>
    <service id="ApiPlatform\Core\Api\OperationAwareFormatsProviderInterface" alias="api_platform.formats_provider">
      <deprecated>The "%alias_id%" alias is deprecated since API Platform 2.5.</deprecated>
    </service>
    <service id="ApiPlatform\Core\Serializer\SerializerContextBuilderInterface" alias="api_platform.serializer.context_builder.filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\PropertyFilter" alias="api_platform.serializer.property_filter"/>
    <service id="ApiPlatform\Core\Serializer\Filter\GroupFilter" alias="api_platform.serializer.group_filter"/>
    <service id="api_platform.operation_path_resolver" alias="api_platform.operation_path_resolver.router" public="false"/>
    <service id="api_platform.action.get_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.post_collection" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.patch_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.put_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.delete_item" alias="api_platform.action.placeholder" public="true"/>
    <service id="api_platform.action.get_subresource" alias="api_platform.action.placeholder" public="true"/>
    <service id="ApiPlatform\Core\Action\NotFoundAction" alias="api_platform.action.not_found" public="true"/>
    <service id="ApiPlatform\Core\Api\IdentifiersExtractorInterface" alias="api_platform.identifiers_extractor.cached"/>
    <service id="ApiPlatform\Core\DataPersister\DataPersisterInterface" alias="debug.api_platform.data_persister"/>
    <service id="ApiPlatform\Core\DataProvider\ItemDataProviderInterface" alias="debug.api_platform.item_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\CollectionDataProviderInterface" alias="debug.api_platform.collection_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\SubresourceDataProviderInterface" alias="debug.api_platform.subresource_data_provider"/>
    <service id="ApiPlatform\Core\DataProvider\Pagination" alias="api_platform.pagination"/>
    <service id="ApiPlatform\Core\DataProvider\PaginationOptions" alias="api_platform.pagination_options"/>
    <service id="api_platform.operation_path_resolver.default" alias="api_platform.operation_path_resolver.underscore"/>
    <service id="api_platform.path_segment_name_generator" alias="api_platform.path_segment_name_generator.underscore"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceNameCollectionFactoryInterface" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Resource\Factory\ResourceMetadataFactoryInterface" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.name_collection_factory" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyNameCollectionFactoryInterface" alias="api_platform.metadata.property.name_collection_factory.cached"/>
    <service id="ApiPlatform\Core\Metadata\Property\Factory\PropertyMetadataFactoryInterface" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="api_platform.metadata.resource.name_collection_factory" alias="api_platform.metadata.resource.name_collection_factory.cached"/>
    <service id="api_platform.metadata.resource.metadata_factory" alias="api_platform.metadata.resource.metadata_factory.cached"/>
    <service id="api_platform.metadata.property.metadata_factory" alias="api_platform.metadata.property.metadata_factory.cached"/>
    <service id="ApiPlatform\Core\JsonSchema\TypeFactoryInterface" alias="api_platform.json_schema.type_factory" public="false"/>
    <service id="ApiPlatform\Core\JsonSchema\SchemaFactoryInterface" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="ApiPlatform\Core\OpenApi\Serializer\OpenApiNormalizer" alias="api_platform.openapi.normalizer.api_gateway"/>
    <service id="ApiPlatform\Core\OpenApi\Options" alias="api_platform.openapi.options"/>
    <service id="ApiPlatform\Core\OpenApi\Factory\OpenApiFactoryInterface" alias="api_platform.openapi.factory"/>
    <service id="api_platform.swagger_ui.listener" alias="api_platform.swagger.listener.ui"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\SearchFilter" alias="api_platform.doctrine.orm.search_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\OrderFilter" alias="api_platform.doctrine.orm.order_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\RangeFilter" alias="api_platform.doctrine.orm.range_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\DateFilter" alias="api_platform.doctrine.orm.date_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\BooleanFilter" alias="api_platform.doctrine.orm.boolean_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\NumericFilter" alias="api_platform.doctrine.orm.numeric_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Filter\ExistsFilter" alias="api_platform.doctrine.orm.exists_filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\EagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterExtension" alias="api_platform.doctrine.orm.query_extension.filter"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\FilterEagerLoadingExtension" alias="api_platform.doctrine.orm.query_extension.filter_eager_loading"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\PaginationExtension" alias="api_platform.doctrine.orm.query_extension.pagination"/>
    <service id="ApiPlatform\Core\Bridge\Doctrine\Orm\Extension\OrderExtension" alias="api_platform.doctrine.orm.query_extension.order"/>
    <service id="ApiPlatform\Core\Validator\ValidatorInterface" alias="api_platform.validator"/>
    <service id="api_platform.security.expression_language" alias="security.expression_language"/>
    <service id="ApiPlatform\Core\Security\ResourceAccessCheckerInterface" alias="api_platform.security.resource_access_checker"/>
    <service id="vich_uploader.storage" alias="vich_uploader.storage.file_system"/>
    <service id="Vich\UploaderBundle\Storage\StorageInterface" alias="vich_uploader.storage.file_system" public="false"/>
    <service id="Vich\UploaderBundle\Storage\FileSystemStorage" alias="vich_uploader.storage.file_system" public="false"/>
    <service id="vich_uploader.metadata_driver" alias="vich_uploader.metadata_driver.chain" public="false"/>
    <service id="vich_uploader.metadata.cache" alias="vich_uploader.metadata.cache.file_cache" public="false"/>
    <service id="Vich\UploaderBundle\Mapping\PropertyMappingFactory" alias="vich_uploader.property_mapping_factory" public="false"/>
    <service id="vich_uploader.namer_uniqid" alias="Vich\UploaderBundle\Naming\UniqidNamer" public="true"/>
    <service id="vich_uploader.namer_property" alias="Vich\UploaderBundle\Naming\PropertyNamer" public="true"/>
    <service id="vich_uploader.namer_origname" alias="Vich\UploaderBundle\Naming\OrignameNamer" public="true"/>
    <service id="vich_uploader.namer_hash" alias="Vich\UploaderBundle\Naming\HashNamer" public="true"/>
    <service id="vich_uploader.namer_base64" alias="Vich\UploaderBundle\Naming\Base64Namer" public="true"/>
    <service id="vich_uploader.directory_namer_subdir" alias="Vich\UploaderBundle\Naming\SubdirDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_property" alias="Vich\UploaderBundle\Naming\PropertyDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_directory_current_date_time" alias="Vich\UploaderBundle\Naming\CurrentDateTimeDirectoryNamer" public="true"/>
    <service id="vich_uploader.namer_smart_unique" alias="Vich\UploaderBundle\Naming\SmartUniqueNamer" public="true"/>
    <service id="Vich\UploaderBundle\Handler\DownloadHandler" alias="vich_uploader.download_handler" public="false"/>
    <service id="Vich\UploaderBundle\Handler\UploadHandler" alias="vich_uploader.upload_handler" public="false"/>
    <service id="Vich\UploaderBundle\Form\Type\VichFileType" alias="vich_uploader.form.type.file" public="false"/>
    <service id="Vich\UploaderBundle\Form\Type\VichImageType" alias="vich_uploader.form.type.image" public="false"/>
    <service id="FOS\RestBundle\View\ViewHandlerInterface" alias="fos_rest.view_handler.default"/>
    <service id="FOS\RestBundle\Request\ParamFetcherInterface" alias="fos_rest.request.param_fetcher"/>
    <service id="fos_rest.view_handler" alias="fos_rest.view_handler.default" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWTTokenManagerInterface" alias="lexik_jwt_authentication.jwt_manager"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface" alias="lexik_jwt_authentication.jws_provider.lcobucci"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationSuccessHandler" alias="lexik_jwt_authentication.handler.authentication_success"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Security\Http\Authentication\AuthenticationFailureHandler" alias="lexik_jwt_authentication.handler.authentication_failure"/>
    <service id="lexik_jwt_authentication.jwt_token_authenticator" alias="lexik_jwt_authentication.security.guard.jwt_token_authenticator"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\TokenExtractor\TokenExtractorInterface" alias="lexik_jwt_authentication.extractor.chain_extractor"/>
    <service id="lexik_jwt_authentication.encoder" alias="lexik_jwt_authentication.encoder.lcobucci" public="true"/>
    <service id="Lexik\Bundle\JWTAuthenticationBundle\Encoder\JWTEncoderInterface" alias="lexik_jwt_authentication.encoder.lcobucci"/>
    <service id="lexik_jwt_authentication.key_loader" alias="lexik_jwt_authentication.key_loader.raw" public="true"/>
    <service id="Gesdinet\JWTRefreshTokenBundle\Model\RefreshTokenManagerInterface" alias="gesdinet.jwtrefreshtoken.refresh_token_manager"/>
    <service id="swiftmailer.mailer.default.transport" alias="swiftmailer.mailer.default.transport.spool"/>
    <service id="swiftmailer.mailer.default.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.mailer.default.transport.real" alias="swiftmailer.mailer.default.transport.dynamic" public="true"/>
    <service id="swiftmailer.spool" alias="swiftmailer.mailer.default.spool.memory"/>
    <service id="swiftmailer.transport.real" alias="swiftmailer.mailer.default.transport.dynamic"/>
    <service id="Swift_Spool" alias="swiftmailer.mailer.default.spool.memory" public="false"/>
    <service id="swiftmailer.plugin.messagelogger" alias="swiftmailer.mailer.default.plugin.messagelogger"/>
    <service id="swiftmailer.mailer" alias="swiftmailer.mailer.default"/>
    <service id="swiftmailer.transport" alias="swiftmailer.mailer.default.transport.spool" public="true"/>
    <service id="Swift_Mailer" alias="swiftmailer.mailer.default" public="false"/>
    <service id="Swift_Transport" alias="swiftmailer.mailer.default.transport.spool" public="false"/>
    <service id="mailer" alias="swiftmailer.mailer.default" public="true"/>
    <service id="SymfonyCasts\Bundle\VerifyEmail\VerifyEmailHelperInterface" alias="symfonycasts.verify_email.helper"/>
    <service id="container.env_var_processors_locator" alias=".service_locator.CmORmuK" public="true"/>
    <service id="twig.loader.filesystem" alias="twig.loader.native_filesystem" public="false"/>
    <service id="argument_resolver.controller_locator" alias=".service_locator.xkYvij3"/>
    <service id="twig.loader" alias="twig.loader.native_filesystem"/>
    <service id="api_platform.doctrine.listener.mercure.publish" alias="api_platform.doctrine.orm.listener.mercure.publish">
      <deprecated>The "%alias_id%" service alias is deprecated. You should stop using it, as it will be removed in the future.</deprecated>
    </service>
    <service id="api_platform.name_converter" alias="serializer.name_converter.metadata_aware"/>
    <service id="Symfony\Component\String\Slugger\SluggerInterface" alias="slugger"/>
    <service id="fos_rest.serializer" alias="fos_rest.serializer.symfony"/>
    <service id="gesdinet.jwtrefreshtoken.object_manager" alias="doctrine.orm.default_entity_manager"/>
    <service id="gesdinet.jwtrefreshtoken.user_checker" alias="security.user_checker"/>
    <service id="Psr\Log\LoggerInterface" alias="logger" public="false"/>
    <service id=".service_locator.tc5_mZv" alias="service_locator_EasyCorp\Bundle\EasyAdminBundle\Router\AdminUrlGenerator" public="false"/>
    <service id=".service_locator.c3XszGA" alias="api_platform.serializer_locator" public="false"/>
    <service id=".service_locator.BgI5J6G" alias="api_platform.filter_locator" public="false"/>
    <service id=".service_locator.tHpW6v3" alias=".service_locator.Y7gDuDN" public="false"/>
    <service id="validator" alias="debug.validator" public="true"/>
    <service id="api_platform.metadata.property.metadata_factory.property_info.inner" alias="api_platform.metadata.property.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.yaml.inner" alias="api_platform.metadata.resource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.doctrine.orm.metadata.property.metadata_factory.inner" alias="api_platform.metadata.property.metadata_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.input_output.inner" alias="api_platform.metadata.resource.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.serializer.inner" alias="api_platform.doctrine.orm.metadata.property.metadata_factory" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.default_property.inner" alias="api_platform.metadata.property.metadata_factory.serializer" public="false"/>
    <service id="api_platform.metadata.subresource.metadata_factory.annotation.inner" alias="api_platform.metadata.property.metadata_factory.default_property" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.php_doc.inner" alias="api_platform.metadata.resource.metadata_factory.input_output" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.short_name.inner" alias="api_platform.metadata.resource.metadata_factory.php_doc" public="false"/>
    <service id="api_platform.metadata.resource.filter_metadata_factory.annotation.inner" alias="api_platform.metadata.resource.metadata_factory.short_name" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.annotation.inner" alias="api_platform.metadata.subresource.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.yaml.inner" alias="api_platform.metadata.property.metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.validator.inner" alias="api_platform.metadata.property.metadata_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.operation.inner" alias="api_platform.metadata.resource.filter_metadata_factory.annotation" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.formats.inner" alias="api_platform.metadata.resource.metadata_factory.operation" public="false"/>
    <service id="translator.data_collector.inner" alias="translator.default" public="false"/>
    <service id="event_dispatcher" alias="debug.event_dispatcher" public="true"/>
    <service id="controller_resolver" alias="debug.controller_resolver" public="false"/>
    <service id="argument_resolver" alias="debug.argument_resolver" public="false"/>
    <service id="doctrine.migrations.migrations_factory" alias="doctrine.migrations.container_aware_migrations_factory"/>
    <service id="security.access.decision_manager" alias="debug.security.access.decision_manager" public="false"/>
    <service id="twig.error_renderer.html.inner" alias="error_handler.error_renderer.html" public="false"/>
    <service id="api_platform.serializer.context_builder" alias="api_platform.serializer.context_builder.filter" public="false"/>
    <service id="api_platform.identifiers_extractor" alias="api_platform.identifiers_extractor.cached" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.xml.inner" alias="api_platform.metadata.property.name_collection_factory.property_info" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.annotation.inner" alias="api_platform.metadata.resource.name_collection_factory.xml" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.yaml.inner" alias="api_platform.metadata.resource.name_collection_factory.annotation" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.yaml.inner" alias="api_platform.metadata.property.name_collection_factory.xml" public="false"/>
    <service id="api_platform.hydra.normalizer.collection" alias="api_platform.hydra.normalizer.collection_filters" public="false"/>
    <service id="api_platform.hydra.normalizer.collection_filters.inner" alias="api_platform.hydra.normalizer.partial_collection_view" public="false"/>
    <service id="api_platform.json_schema.schema_factory" alias="api_platform.hydra.json_schema.schema_factory" public="false"/>
    <service id="api_platform.collection_data_provider" alias="debug.api_platform.collection_data_provider"/>
    <service id="api_platform.item_data_provider" alias="debug.api_platform.item_data_provider"/>
    <service id="api_platform.subresource_data_provider" alias="debug.api_platform.subresource_data_provider"/>
    <service id="api_platform.data_persister" alias="debug.api_platform.data_persister" public="false"/>
    <service id="argument_resolver.request_attribute" alias="debug.argument_resolver.request_attribute" public="false"/>
    <service id="argument_resolver.request" alias="debug.argument_resolver.request" public="false"/>
    <service id="argument_resolver.session" alias="debug.argument_resolver.session" public="false"/>
    <service id="security.user_value_resolver" alias="debug.security.user_value_resolver" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" alias="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\AdminContextResolver" public="false"/>
    <service id="EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" alias="debug.EasyCorp\Bundle\EasyAdminBundle\ArgumentResolver\BatchActionDtoResolver" public="false"/>
    <service id="argument_resolver.service" alias="debug.argument_resolver.service" public="false"/>
    <service id="argument_resolver.default" alias="debug.argument_resolver.default" public="false"/>
    <service id="argument_resolver.variadic" alias="debug.argument_resolver.variadic" public="false"/>
    <service id="argument_resolver.not_tagged_controller" alias="debug.argument_resolver.not_tagged_controller" public="false"/>
    <service id="api_platform.openapi.normalizer" alias="api_platform.openapi.normalizer.api_gateway" public="false"/>
    <service id="api_platform.swagger.normalizer.documentation" alias="api_platform.swagger.normalizer.api_gateway" public="false"/>
    <service id="api_platform.route_name_resolver" alias="api_platform.route_name_resolver.cached" public="false"/>
    <service id="api_platform.subresource_operation_factory" alias="api_platform.subresource_operation_factory.cached" public="false"/>
    <service id="api_platform.metadata.resource.name_collection_factory.cached.inner" alias="api_platform.metadata.resource.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.resource.metadata_factory.cached.inner" alias="api_platform.metadata.resource.metadata_factory.formats" public="false"/>
    <service id="api_platform.metadata.property.name_collection_factory.cached.inner" alias="api_platform.metadata.property.name_collection_factory.yaml" public="false"/>
    <service id="api_platform.metadata.property.metadata_factory.cached.inner" alias="api_platform.metadata.property.metadata_factory.validator" public="false"/>
  </services>
</container>
